"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/kbar";
exports.ids = ["vendor-chunks/kbar"];
exports.modules = {

/***/ "(ssr)/./node_modules/kbar/lib/InternalEvents.js":
/*!*************************************************!*\
  !*** ./node_modules/kbar/lib/InternalEvents.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.InternalEvents = void 0;\nvar React = __importStar(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nvar tinykeys_1 = __importDefault(__webpack_require__(/*! ./tinykeys */ \"(ssr)/./node_modules/kbar/lib/tinykeys.js\"));\nvar types_1 = __webpack_require__(/*! ./types */ \"(ssr)/./node_modules/kbar/lib/types.js\");\nvar useKBar_1 = __webpack_require__(/*! ./useKBar */ \"(ssr)/./node_modules/kbar/lib/useKBar.js\");\nvar utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/kbar/lib/utils.js\");\nfunction InternalEvents() {\n    useToggleHandler();\n    useDocumentLock();\n    useShortcuts();\n    useFocusHandler();\n    return null;\n}\nexports.InternalEvents = InternalEvents;\n/**\n * `useToggleHandler` handles the keyboard events for toggling kbar.\n */\nfunction useToggleHandler() {\n    var _a, _b;\n    var _c = (0, useKBar_1.useKBar)(function (state) { return ({\n        visualState: state.visualState,\n        showing: state.visualState !== types_1.VisualState.hidden,\n        disabled: state.disabled,\n    }); }), query = _c.query, options = _c.options, visualState = _c.visualState, showing = _c.showing, disabled = _c.disabled;\n    React.useEffect(function () {\n        var _a;\n        var close = function () {\n            query.setVisualState(function (vs) {\n                if (vs === types_1.VisualState.hidden || vs === types_1.VisualState.animatingOut) {\n                    return vs;\n                }\n                return types_1.VisualState.animatingOut;\n            });\n        };\n        if (disabled) {\n            close();\n            return;\n        }\n        var shortcut = options.toggleShortcut || \"$mod+k\";\n        var unsubscribe = (0, tinykeys_1.default)(window, (_a = {},\n            _a[shortcut] = function (event) {\n                var _a, _b, _c, _d;\n                if (event.defaultPrevented)\n                    return;\n                event.preventDefault();\n                query.toggle();\n                if (showing) {\n                    (_b = (_a = options.callbacks) === null || _a === void 0 ? void 0 : _a.onClose) === null || _b === void 0 ? void 0 : _b.call(_a);\n                }\n                else {\n                    (_d = (_c = options.callbacks) === null || _c === void 0 ? void 0 : _c.onOpen) === null || _d === void 0 ? void 0 : _d.call(_c);\n                }\n            },\n            _a.Escape = function (event) {\n                var _a, _b;\n                if (showing) {\n                    event.stopPropagation();\n                    event.preventDefault();\n                    (_b = (_a = options.callbacks) === null || _a === void 0 ? void 0 : _a.onClose) === null || _b === void 0 ? void 0 : _b.call(_a);\n                }\n                close();\n            },\n            _a));\n        return function () {\n            unsubscribe();\n        };\n    }, [options.callbacks, options.toggleShortcut, query, showing, disabled]);\n    var timeoutRef = React.useRef();\n    var runAnimateTimer = React.useCallback(function (vs) {\n        var _a, _b;\n        var ms = 0;\n        if (vs === types_1.VisualState.animatingIn) {\n            ms = ((_a = options.animations) === null || _a === void 0 ? void 0 : _a.enterMs) || 0;\n        }\n        if (vs === types_1.VisualState.animatingOut) {\n            ms = ((_b = options.animations) === null || _b === void 0 ? void 0 : _b.exitMs) || 0;\n        }\n        clearTimeout(timeoutRef.current);\n        timeoutRef.current = setTimeout(function () {\n            var backToRoot = false;\n            // TODO: setVisualState argument should be a function or just a VisualState value.\n            query.setVisualState(function () {\n                var finalVs = vs === types_1.VisualState.animatingIn\n                    ? types_1.VisualState.showing\n                    : types_1.VisualState.hidden;\n                if (finalVs === types_1.VisualState.hidden) {\n                    backToRoot = true;\n                }\n                return finalVs;\n            });\n            if (backToRoot) {\n                query.setCurrentRootAction(null);\n            }\n        }, ms);\n    }, [(_a = options.animations) === null || _a === void 0 ? void 0 : _a.enterMs, (_b = options.animations) === null || _b === void 0 ? void 0 : _b.exitMs, query]);\n    React.useEffect(function () {\n        switch (visualState) {\n            case types_1.VisualState.animatingIn:\n            case types_1.VisualState.animatingOut:\n                runAnimateTimer(visualState);\n                break;\n        }\n    }, [runAnimateTimer, visualState]);\n}\n/**\n * `useDocumentLock` is a simple implementation for preventing the\n * underlying page content from scrolling when kbar is open.\n */\nfunction useDocumentLock() {\n    var _a = (0, useKBar_1.useKBar)(function (state) { return ({\n        visualState: state.visualState,\n    }); }), visualState = _a.visualState, options = _a.options;\n    React.useEffect(function () {\n        if (options.disableDocumentLock)\n            return;\n        if (visualState === types_1.VisualState.animatingIn) {\n            document.body.style.overflow = \"hidden\";\n            if (!options.disableScrollbarManagement) {\n                var scrollbarWidth = (0, utils_1.getScrollbarWidth)();\n                // take into account the margins explicitly added by the consumer\n                var mr = getComputedStyle(document.body)[\"margin-right\"];\n                if (mr) {\n                    // remove non-numeric values; px, rem, em, etc.\n                    scrollbarWidth += Number(mr.replace(/\\D/g, \"\"));\n                }\n                document.body.style.marginRight = scrollbarWidth + \"px\";\n            }\n        }\n        else if (visualState === types_1.VisualState.hidden) {\n            document.body.style.removeProperty(\"overflow\");\n            if (!options.disableScrollbarManagement) {\n                document.body.style.removeProperty(\"margin-right\");\n            }\n        }\n    }, [\n        options.disableDocumentLock,\n        options.disableScrollbarManagement,\n        visualState,\n    ]);\n}\n/**\n * Reference: https://github.com/jamiebuilds/tinykeys/issues/37\n *\n * Fixes an issue where simultaneous key commands for shortcuts;\n * ie given two actions with shortcuts ['t','s'] and ['s'], pressing\n * 't' and 's' consecutively will cause both shortcuts to fire.\n *\n * `wrap` sets each keystroke event in a WeakSet, and ensures that\n * if ['t', 's'] are pressed, then the subsequent ['s'] event will\n * be ignored. This depends on the order in which we register the\n * shortcuts to tinykeys, which is handled below.\n */\nvar handled = new WeakSet();\nfunction wrap(handler) {\n    return function (event) {\n        if (handled.has(event))\n            return;\n        handler(event);\n        handled.add(event);\n    };\n}\n/**\n * `useShortcuts` registers and listens to keyboard strokes and\n * performs actions for patterns that match the user defined `shortcut`.\n */\nfunction useShortcuts() {\n    var _a = (0, useKBar_1.useKBar)(function (state) { return ({\n        actions: state.actions,\n        open: state.visualState === types_1.VisualState.showing,\n        disabled: state.disabled,\n    }); }), actions = _a.actions, query = _a.query, open = _a.open, options = _a.options, disabled = _a.disabled;\n    React.useEffect(function () {\n        var _a;\n        if (open || disabled)\n            return;\n        var actionsList = Object.keys(actions).map(function (key) { return actions[key]; });\n        var actionsWithShortcuts = [];\n        for (var _i = 0, actionsList_1 = actionsList; _i < actionsList_1.length; _i++) {\n            var action = actionsList_1[_i];\n            if (!((_a = action.shortcut) === null || _a === void 0 ? void 0 : _a.length)) {\n                continue;\n            }\n            actionsWithShortcuts.push(action);\n        }\n        actionsWithShortcuts = actionsWithShortcuts.sort(function (a, b) { return b.shortcut.join(\" \").length - a.shortcut.join(\" \").length; });\n        var shortcutsMap = {};\n        var _loop_1 = function (action) {\n            var shortcut = action.shortcut.join(\" \");\n            shortcutsMap[shortcut] = wrap(function (event) {\n                var _a, _b, _c, _d, _e, _f;\n                if ((0, utils_1.shouldRejectKeystrokes)())\n                    return;\n                event.preventDefault();\n                if ((_a = action.children) === null || _a === void 0 ? void 0 : _a.length) {\n                    query.setCurrentRootAction(action.id);\n                    query.toggle();\n                    (_c = (_b = options.callbacks) === null || _b === void 0 ? void 0 : _b.onOpen) === null || _c === void 0 ? void 0 : _c.call(_b);\n                }\n                else {\n                    (_d = action.command) === null || _d === void 0 ? void 0 : _d.perform();\n                    (_f = (_e = options.callbacks) === null || _e === void 0 ? void 0 : _e.onSelectAction) === null || _f === void 0 ? void 0 : _f.call(_e, action);\n                }\n            });\n        };\n        for (var _b = 0, actionsWithShortcuts_1 = actionsWithShortcuts; _b < actionsWithShortcuts_1.length; _b++) {\n            var action = actionsWithShortcuts_1[_b];\n            _loop_1(action);\n        }\n        var unsubscribe = (0, tinykeys_1.default)(window, shortcutsMap, {\n            timeout: 400,\n        });\n        return function () {\n            unsubscribe();\n        };\n    }, [actions, open, options.callbacks, query, disabled]);\n}\n/**\n * `useFocusHandler` ensures that focus is set back on the element which was\n * in focus prior to kbar being triggered.\n */\nfunction useFocusHandler() {\n    var rFirstRender = React.useRef(true);\n    var _a = (0, useKBar_1.useKBar)(function (state) { return ({\n        isShowing: state.visualState === types_1.VisualState.showing ||\n            state.visualState === types_1.VisualState.animatingIn,\n    }); }), isShowing = _a.isShowing, query = _a.query;\n    var activeElementRef = React.useRef(null);\n    React.useEffect(function () {\n        if (rFirstRender.current) {\n            rFirstRender.current = false;\n            return;\n        }\n        if (isShowing) {\n            activeElementRef.current = document.activeElement;\n            return;\n        }\n        // This fixes an issue on Safari where closing kbar causes the entire\n        // page to scroll to the bottom. The reason this was happening was due\n        // to the search input still in focus when we removed it from the dom.\n        var currentActiveElement = document.activeElement;\n        if ((currentActiveElement === null || currentActiveElement === void 0 ? void 0 : currentActiveElement.tagName.toLowerCase()) === \"input\") {\n            currentActiveElement.blur();\n        }\n        var activeElement = activeElementRef.current;\n        if (activeElement && activeElement !== currentActiveElement) {\n            activeElement.focus();\n        }\n    }, [isShowing]);\n    // When focus is blurred from the search input while kbar is still\n    // open, any keystroke should set focus back to the search input.\n    React.useEffect(function () {\n        function handler(event) {\n            var input = query.getInput();\n            if (event.target !== input) {\n                input.focus();\n            }\n        }\n        if (isShowing) {\n            window.addEventListener(\"keydown\", handler);\n            return function () {\n                window.removeEventListener(\"keydown\", handler);\n            };\n        }\n    }, [isShowing, query]);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMva2Jhci9saWIvSW50ZXJuYWxFdmVudHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsbUNBQW1DLG9DQUFvQyxnQkFBZ0I7QUFDdkYsQ0FBQztBQUNEO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQSwwQ0FBMEMsNEJBQTRCO0FBQ3RFLENBQUM7QUFDRDtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHNCQUFzQjtBQUN0Qix5QkFBeUIsbUJBQU8sQ0FBQyx3R0FBTztBQUN4QyxpQ0FBaUMsbUJBQU8sQ0FBQyw2REFBWTtBQUNyRCxjQUFjLG1CQUFPLENBQUMsdURBQVM7QUFDL0IsZ0JBQWdCLG1CQUFPLENBQUMsMkRBQVc7QUFDbkMsY0FBYyxtQkFBTyxDQUFDLHVEQUFTO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1REFBdUQ7QUFDdkQ7QUFDQTtBQUNBO0FBQ0EsS0FBSyxJQUFJO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrRUFBa0U7QUFDbEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1REFBdUQ7QUFDdkQ7QUFDQSxLQUFLLElBQUk7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtEQUFrRDtBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdURBQXVEO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBLEtBQUssSUFBSTtBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0VBQW9FLHNCQUFzQjtBQUMxRjtBQUNBLHNEQUFzRCwyQkFBMkI7QUFDakY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkVBQTJFLG1FQUFtRTtBQUM5STtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0Esd0VBQXdFLG9DQUFvQztBQUM1RztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVEQUF1RDtBQUN2RDtBQUNBO0FBQ0EsS0FBSyxJQUFJO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCIsInNvdXJjZXMiOlsid2VicGFjazovL2dhZGFpLXJhY29tcC8uL25vZGVfbW9kdWxlcy9rYmFyL2xpYi9JbnRlcm5hbEV2ZW50cy5qcz8xZDVmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH0pO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX3NldE1vZHVsZURlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9fc2V0TW9kdWxlRGVmYXVsdCkgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgdikge1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBcImRlZmF1bHRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdiB9KTtcbn0pIDogZnVuY3Rpb24obywgdikge1xuICAgIG9bXCJkZWZhdWx0XCJdID0gdjtcbn0pO1xudmFyIF9faW1wb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnRTdGFyKSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgaWYgKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgcmV0dXJuIG1vZDtcbiAgICB2YXIgcmVzdWx0ID0ge307XG4gICAgaWYgKG1vZCAhPSBudWxsKSBmb3IgKHZhciBrIGluIG1vZCkgaWYgKGsgIT09IFwiZGVmYXVsdFwiICYmIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChtb2QsIGspKSBfX2NyZWF0ZUJpbmRpbmcocmVzdWx0LCBtb2QsIGspO1xuICAgIF9fc2V0TW9kdWxlRGVmYXVsdChyZXN1bHQsIG1vZCk7XG4gICAgcmV0dXJuIHJlc3VsdDtcbn07XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkludGVybmFsRXZlbnRzID0gdm9pZCAwO1xudmFyIFJlYWN0ID0gX19pbXBvcnRTdGFyKHJlcXVpcmUoXCJyZWFjdFwiKSk7XG52YXIgdGlueWtleXNfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi90aW55a2V5c1wiKSk7XG52YXIgdHlwZXNfMSA9IHJlcXVpcmUoXCIuL3R5cGVzXCIpO1xudmFyIHVzZUtCYXJfMSA9IHJlcXVpcmUoXCIuL3VzZUtCYXJcIik7XG52YXIgdXRpbHNfMSA9IHJlcXVpcmUoXCIuL3V0aWxzXCIpO1xuZnVuY3Rpb24gSW50ZXJuYWxFdmVudHMoKSB7XG4gICAgdXNlVG9nZ2xlSGFuZGxlcigpO1xuICAgIHVzZURvY3VtZW50TG9jaygpO1xuICAgIHVzZVNob3J0Y3V0cygpO1xuICAgIHVzZUZvY3VzSGFuZGxlcigpO1xuICAgIHJldHVybiBudWxsO1xufVxuZXhwb3J0cy5JbnRlcm5hbEV2ZW50cyA9IEludGVybmFsRXZlbnRzO1xuLyoqXG4gKiBgdXNlVG9nZ2xlSGFuZGxlcmAgaGFuZGxlcyB0aGUga2V5Ym9hcmQgZXZlbnRzIGZvciB0b2dnbGluZyBrYmFyLlxuICovXG5mdW5jdGlvbiB1c2VUb2dnbGVIYW5kbGVyKCkge1xuICAgIHZhciBfYSwgX2I7XG4gICAgdmFyIF9jID0gKDAsIHVzZUtCYXJfMS51c2VLQmFyKShmdW5jdGlvbiAoc3RhdGUpIHsgcmV0dXJuICh7XG4gICAgICAgIHZpc3VhbFN0YXRlOiBzdGF0ZS52aXN1YWxTdGF0ZSxcbiAgICAgICAgc2hvd2luZzogc3RhdGUudmlzdWFsU3RhdGUgIT09IHR5cGVzXzEuVmlzdWFsU3RhdGUuaGlkZGVuLFxuICAgICAgICBkaXNhYmxlZDogc3RhdGUuZGlzYWJsZWQsXG4gICAgfSk7IH0pLCBxdWVyeSA9IF9jLnF1ZXJ5LCBvcHRpb25zID0gX2Mub3B0aW9ucywgdmlzdWFsU3RhdGUgPSBfYy52aXN1YWxTdGF0ZSwgc2hvd2luZyA9IF9jLnNob3dpbmcsIGRpc2FibGVkID0gX2MuZGlzYWJsZWQ7XG4gICAgUmVhY3QudXNlRWZmZWN0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIF9hO1xuICAgICAgICB2YXIgY2xvc2UgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBxdWVyeS5zZXRWaXN1YWxTdGF0ZShmdW5jdGlvbiAodnMpIHtcbiAgICAgICAgICAgICAgICBpZiAodnMgPT09IHR5cGVzXzEuVmlzdWFsU3RhdGUuaGlkZGVuIHx8IHZzID09PSB0eXBlc18xLlZpc3VhbFN0YXRlLmFuaW1hdGluZ091dCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdnM7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiB0eXBlc18xLlZpc3VhbFN0YXRlLmFuaW1hdGluZ091dDtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9O1xuICAgICAgICBpZiAoZGlzYWJsZWQpIHtcbiAgICAgICAgICAgIGNsb3NlKCk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdmFyIHNob3J0Y3V0ID0gb3B0aW9ucy50b2dnbGVTaG9ydGN1dCB8fCBcIiRtb2Qra1wiO1xuICAgICAgICB2YXIgdW5zdWJzY3JpYmUgPSAoMCwgdGlueWtleXNfMS5kZWZhdWx0KSh3aW5kb3csIChfYSA9IHt9LFxuICAgICAgICAgICAgX2Fbc2hvcnRjdXRdID0gZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICAgICAgICAgICAgdmFyIF9hLCBfYiwgX2MsIF9kO1xuICAgICAgICAgICAgICAgIGlmIChldmVudC5kZWZhdWx0UHJldmVudGVkKVxuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICBxdWVyeS50b2dnbGUoKTtcbiAgICAgICAgICAgICAgICBpZiAoc2hvd2luZykge1xuICAgICAgICAgICAgICAgICAgICAoX2IgPSAoX2EgPSBvcHRpb25zLmNhbGxiYWNrcykgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLm9uQ2xvc2UpID09PSBudWxsIHx8IF9iID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYi5jYWxsKF9hKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIChfZCA9IChfYyA9IG9wdGlvbnMuY2FsbGJhY2tzKSA9PT0gbnVsbCB8fCBfYyA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2Mub25PcGVuKSA9PT0gbnVsbCB8fCBfZCA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2QuY2FsbChfYyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIF9hLkVzY2FwZSA9IGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICAgICAgICAgIHZhciBfYSwgX2I7XG4gICAgICAgICAgICAgICAgaWYgKHNob3dpbmcpIHtcbiAgICAgICAgICAgICAgICAgICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgICAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgICAgICAgIChfYiA9IChfYSA9IG9wdGlvbnMuY2FsbGJhY2tzKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2Eub25DbG9zZSkgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLmNhbGwoX2EpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjbG9zZSgpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIF9hKSk7XG4gICAgICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB1bnN1YnNjcmliZSgpO1xuICAgICAgICB9O1xuICAgIH0sIFtvcHRpb25zLmNhbGxiYWNrcywgb3B0aW9ucy50b2dnbGVTaG9ydGN1dCwgcXVlcnksIHNob3dpbmcsIGRpc2FibGVkXSk7XG4gICAgdmFyIHRpbWVvdXRSZWYgPSBSZWFjdC51c2VSZWYoKTtcbiAgICB2YXIgcnVuQW5pbWF0ZVRpbWVyID0gUmVhY3QudXNlQ2FsbGJhY2soZnVuY3Rpb24gKHZzKSB7XG4gICAgICAgIHZhciBfYSwgX2I7XG4gICAgICAgIHZhciBtcyA9IDA7XG4gICAgICAgIGlmICh2cyA9PT0gdHlwZXNfMS5WaXN1YWxTdGF0ZS5hbmltYXRpbmdJbikge1xuICAgICAgICAgICAgbXMgPSAoKF9hID0gb3B0aW9ucy5hbmltYXRpb25zKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuZW50ZXJNcykgfHwgMDtcbiAgICAgICAgfVxuICAgICAgICBpZiAodnMgPT09IHR5cGVzXzEuVmlzdWFsU3RhdGUuYW5pbWF0aW5nT3V0KSB7XG4gICAgICAgICAgICBtcyA9ICgoX2IgPSBvcHRpb25zLmFuaW1hdGlvbnMpID09PSBudWxsIHx8IF9iID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYi5leGl0TXMpIHx8IDA7XG4gICAgICAgIH1cbiAgICAgICAgY2xlYXJUaW1lb3V0KHRpbWVvdXRSZWYuY3VycmVudCk7XG4gICAgICAgIHRpbWVvdXRSZWYuY3VycmVudCA9IHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIGJhY2tUb1Jvb3QgPSBmYWxzZTtcbiAgICAgICAgICAgIC8vIFRPRE86IHNldFZpc3VhbFN0YXRlIGFyZ3VtZW50IHNob3VsZCBiZSBhIGZ1bmN0aW9uIG9yIGp1c3QgYSBWaXN1YWxTdGF0ZSB2YWx1ZS5cbiAgICAgICAgICAgIHF1ZXJ5LnNldFZpc3VhbFN0YXRlKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB2YXIgZmluYWxWcyA9IHZzID09PSB0eXBlc18xLlZpc3VhbFN0YXRlLmFuaW1hdGluZ0luXG4gICAgICAgICAgICAgICAgICAgID8gdHlwZXNfMS5WaXN1YWxTdGF0ZS5zaG93aW5nXG4gICAgICAgICAgICAgICAgICAgIDogdHlwZXNfMS5WaXN1YWxTdGF0ZS5oaWRkZW47XG4gICAgICAgICAgICAgICAgaWYgKGZpbmFsVnMgPT09IHR5cGVzXzEuVmlzdWFsU3RhdGUuaGlkZGVuKSB7XG4gICAgICAgICAgICAgICAgICAgIGJhY2tUb1Jvb3QgPSB0cnVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gZmluYWxWcztcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgaWYgKGJhY2tUb1Jvb3QpIHtcbiAgICAgICAgICAgICAgICBxdWVyeS5zZXRDdXJyZW50Um9vdEFjdGlvbihudWxsKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSwgbXMpO1xuICAgIH0sIFsoX2EgPSBvcHRpb25zLmFuaW1hdGlvbnMpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5lbnRlck1zLCAoX2IgPSBvcHRpb25zLmFuaW1hdGlvbnMpID09PSBudWxsIHx8IF9iID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYi5leGl0TXMsIHF1ZXJ5XSk7XG4gICAgUmVhY3QudXNlRWZmZWN0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgc3dpdGNoICh2aXN1YWxTdGF0ZSkge1xuICAgICAgICAgICAgY2FzZSB0eXBlc18xLlZpc3VhbFN0YXRlLmFuaW1hdGluZ0luOlxuICAgICAgICAgICAgY2FzZSB0eXBlc18xLlZpc3VhbFN0YXRlLmFuaW1hdGluZ091dDpcbiAgICAgICAgICAgICAgICBydW5BbmltYXRlVGltZXIodmlzdWFsU3RhdGUpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgfSwgW3J1bkFuaW1hdGVUaW1lciwgdmlzdWFsU3RhdGVdKTtcbn1cbi8qKlxuICogYHVzZURvY3VtZW50TG9ja2AgaXMgYSBzaW1wbGUgaW1wbGVtZW50YXRpb24gZm9yIHByZXZlbnRpbmcgdGhlXG4gKiB1bmRlcmx5aW5nIHBhZ2UgY29udGVudCBmcm9tIHNjcm9sbGluZyB3aGVuIGtiYXIgaXMgb3Blbi5cbiAqL1xuZnVuY3Rpb24gdXNlRG9jdW1lbnRMb2NrKCkge1xuICAgIHZhciBfYSA9ICgwLCB1c2VLQmFyXzEudXNlS0JhcikoZnVuY3Rpb24gKHN0YXRlKSB7IHJldHVybiAoe1xuICAgICAgICB2aXN1YWxTdGF0ZTogc3RhdGUudmlzdWFsU3RhdGUsXG4gICAgfSk7IH0pLCB2aXN1YWxTdGF0ZSA9IF9hLnZpc3VhbFN0YXRlLCBvcHRpb25zID0gX2Eub3B0aW9ucztcbiAgICBSZWFjdC51c2VFZmZlY3QoZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAob3B0aW9ucy5kaXNhYmxlRG9jdW1lbnRMb2NrKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICBpZiAodmlzdWFsU3RhdGUgPT09IHR5cGVzXzEuVmlzdWFsU3RhdGUuYW5pbWF0aW5nSW4pIHtcbiAgICAgICAgICAgIGRvY3VtZW50LmJvZHkuc3R5bGUub3ZlcmZsb3cgPSBcImhpZGRlblwiO1xuICAgICAgICAgICAgaWYgKCFvcHRpb25zLmRpc2FibGVTY3JvbGxiYXJNYW5hZ2VtZW50KSB7XG4gICAgICAgICAgICAgICAgdmFyIHNjcm9sbGJhcldpZHRoID0gKDAsIHV0aWxzXzEuZ2V0U2Nyb2xsYmFyV2lkdGgpKCk7XG4gICAgICAgICAgICAgICAgLy8gdGFrZSBpbnRvIGFjY291bnQgdGhlIG1hcmdpbnMgZXhwbGljaXRseSBhZGRlZCBieSB0aGUgY29uc3VtZXJcbiAgICAgICAgICAgICAgICB2YXIgbXIgPSBnZXRDb21wdXRlZFN0eWxlKGRvY3VtZW50LmJvZHkpW1wibWFyZ2luLXJpZ2h0XCJdO1xuICAgICAgICAgICAgICAgIGlmIChtcikge1xuICAgICAgICAgICAgICAgICAgICAvLyByZW1vdmUgbm9uLW51bWVyaWMgdmFsdWVzOyBweCwgcmVtLCBlbSwgZXRjLlxuICAgICAgICAgICAgICAgICAgICBzY3JvbGxiYXJXaWR0aCArPSBOdW1iZXIobXIucmVwbGFjZSgvXFxEL2csIFwiXCIpKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZG9jdW1lbnQuYm9keS5zdHlsZS5tYXJnaW5SaWdodCA9IHNjcm9sbGJhcldpZHRoICsgXCJweFwiO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHZpc3VhbFN0YXRlID09PSB0eXBlc18xLlZpc3VhbFN0YXRlLmhpZGRlbikge1xuICAgICAgICAgICAgZG9jdW1lbnQuYm9keS5zdHlsZS5yZW1vdmVQcm9wZXJ0eShcIm92ZXJmbG93XCIpO1xuICAgICAgICAgICAgaWYgKCFvcHRpb25zLmRpc2FibGVTY3JvbGxiYXJNYW5hZ2VtZW50KSB7XG4gICAgICAgICAgICAgICAgZG9jdW1lbnQuYm9keS5zdHlsZS5yZW1vdmVQcm9wZXJ0eShcIm1hcmdpbi1yaWdodFwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH0sIFtcbiAgICAgICAgb3B0aW9ucy5kaXNhYmxlRG9jdW1lbnRMb2NrLFxuICAgICAgICBvcHRpb25zLmRpc2FibGVTY3JvbGxiYXJNYW5hZ2VtZW50LFxuICAgICAgICB2aXN1YWxTdGF0ZSxcbiAgICBdKTtcbn1cbi8qKlxuICogUmVmZXJlbmNlOiBodHRwczovL2dpdGh1Yi5jb20vamFtaWVidWlsZHMvdGlueWtleXMvaXNzdWVzLzM3XG4gKlxuICogRml4ZXMgYW4gaXNzdWUgd2hlcmUgc2ltdWx0YW5lb3VzIGtleSBjb21tYW5kcyBmb3Igc2hvcnRjdXRzO1xuICogaWUgZ2l2ZW4gdHdvIGFjdGlvbnMgd2l0aCBzaG9ydGN1dHMgWyd0JywncyddIGFuZCBbJ3MnXSwgcHJlc3NpbmdcbiAqICd0JyBhbmQgJ3MnIGNvbnNlY3V0aXZlbHkgd2lsbCBjYXVzZSBib3RoIHNob3J0Y3V0cyB0byBmaXJlLlxuICpcbiAqIGB3cmFwYCBzZXRzIGVhY2gga2V5c3Ryb2tlIGV2ZW50IGluIGEgV2Vha1NldCwgYW5kIGVuc3VyZXMgdGhhdFxuICogaWYgWyd0JywgJ3MnXSBhcmUgcHJlc3NlZCwgdGhlbiB0aGUgc3Vic2VxdWVudCBbJ3MnXSBldmVudCB3aWxsXG4gKiBiZSBpZ25vcmVkLiBUaGlzIGRlcGVuZHMgb24gdGhlIG9yZGVyIGluIHdoaWNoIHdlIHJlZ2lzdGVyIHRoZVxuICogc2hvcnRjdXRzIHRvIHRpbnlrZXlzLCB3aGljaCBpcyBoYW5kbGVkIGJlbG93LlxuICovXG52YXIgaGFuZGxlZCA9IG5ldyBXZWFrU2V0KCk7XG5mdW5jdGlvbiB3cmFwKGhhbmRsZXIpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICAgIGlmIChoYW5kbGVkLmhhcyhldmVudCkpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIGhhbmRsZXIoZXZlbnQpO1xuICAgICAgICBoYW5kbGVkLmFkZChldmVudCk7XG4gICAgfTtcbn1cbi8qKlxuICogYHVzZVNob3J0Y3V0c2AgcmVnaXN0ZXJzIGFuZCBsaXN0ZW5zIHRvIGtleWJvYXJkIHN0cm9rZXMgYW5kXG4gKiBwZXJmb3JtcyBhY3Rpb25zIGZvciBwYXR0ZXJucyB0aGF0IG1hdGNoIHRoZSB1c2VyIGRlZmluZWQgYHNob3J0Y3V0YC5cbiAqL1xuZnVuY3Rpb24gdXNlU2hvcnRjdXRzKCkge1xuICAgIHZhciBfYSA9ICgwLCB1c2VLQmFyXzEudXNlS0JhcikoZnVuY3Rpb24gKHN0YXRlKSB7IHJldHVybiAoe1xuICAgICAgICBhY3Rpb25zOiBzdGF0ZS5hY3Rpb25zLFxuICAgICAgICBvcGVuOiBzdGF0ZS52aXN1YWxTdGF0ZSA9PT0gdHlwZXNfMS5WaXN1YWxTdGF0ZS5zaG93aW5nLFxuICAgICAgICBkaXNhYmxlZDogc3RhdGUuZGlzYWJsZWQsXG4gICAgfSk7IH0pLCBhY3Rpb25zID0gX2EuYWN0aW9ucywgcXVlcnkgPSBfYS5xdWVyeSwgb3BlbiA9IF9hLm9wZW4sIG9wdGlvbnMgPSBfYS5vcHRpb25zLCBkaXNhYmxlZCA9IF9hLmRpc2FibGVkO1xuICAgIFJlYWN0LnVzZUVmZmVjdChmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgaWYgKG9wZW4gfHwgZGlzYWJsZWQpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIHZhciBhY3Rpb25zTGlzdCA9IE9iamVjdC5rZXlzKGFjdGlvbnMpLm1hcChmdW5jdGlvbiAoa2V5KSB7IHJldHVybiBhY3Rpb25zW2tleV07IH0pO1xuICAgICAgICB2YXIgYWN0aW9uc1dpdGhTaG9ydGN1dHMgPSBbXTtcbiAgICAgICAgZm9yICh2YXIgX2kgPSAwLCBhY3Rpb25zTGlzdF8xID0gYWN0aW9uc0xpc3Q7IF9pIDwgYWN0aW9uc0xpc3RfMS5sZW5ndGg7IF9pKyspIHtcbiAgICAgICAgICAgIHZhciBhY3Rpb24gPSBhY3Rpb25zTGlzdF8xW19pXTtcbiAgICAgICAgICAgIGlmICghKChfYSA9IGFjdGlvbi5zaG9ydGN1dCkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmxlbmd0aCkpIHtcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGFjdGlvbnNXaXRoU2hvcnRjdXRzLnB1c2goYWN0aW9uKTtcbiAgICAgICAgfVxuICAgICAgICBhY3Rpb25zV2l0aFNob3J0Y3V0cyA9IGFjdGlvbnNXaXRoU2hvcnRjdXRzLnNvcnQoZnVuY3Rpb24gKGEsIGIpIHsgcmV0dXJuIGIuc2hvcnRjdXQuam9pbihcIiBcIikubGVuZ3RoIC0gYS5zaG9ydGN1dC5qb2luKFwiIFwiKS5sZW5ndGg7IH0pO1xuICAgICAgICB2YXIgc2hvcnRjdXRzTWFwID0ge307XG4gICAgICAgIHZhciBfbG9vcF8xID0gZnVuY3Rpb24gKGFjdGlvbikge1xuICAgICAgICAgICAgdmFyIHNob3J0Y3V0ID0gYWN0aW9uLnNob3J0Y3V0LmpvaW4oXCIgXCIpO1xuICAgICAgICAgICAgc2hvcnRjdXRzTWFwW3Nob3J0Y3V0XSA9IHdyYXAoZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICAgICAgICAgICAgdmFyIF9hLCBfYiwgX2MsIF9kLCBfZSwgX2Y7XG4gICAgICAgICAgICAgICAgaWYgKCgwLCB1dGlsc18xLnNob3VsZFJlamVjdEtleXN0cm9rZXMpKCkpXG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgICAgIGlmICgoX2EgPSBhY3Rpb24uY2hpbGRyZW4pID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAgICAgcXVlcnkuc2V0Q3VycmVudFJvb3RBY3Rpb24oYWN0aW9uLmlkKTtcbiAgICAgICAgICAgICAgICAgICAgcXVlcnkudG9nZ2xlKCk7XG4gICAgICAgICAgICAgICAgICAgIChfYyA9IChfYiA9IG9wdGlvbnMuY2FsbGJhY2tzKSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2Iub25PcGVuKSA9PT0gbnVsbCB8fCBfYyA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2MuY2FsbChfYik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAoX2QgPSBhY3Rpb24uY29tbWFuZCkgPT09IG51bGwgfHwgX2QgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9kLnBlcmZvcm0oKTtcbiAgICAgICAgICAgICAgICAgICAgKF9mID0gKF9lID0gb3B0aW9ucy5jYWxsYmFja3MpID09PSBudWxsIHx8IF9lID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfZS5vblNlbGVjdEFjdGlvbikgPT09IG51bGwgfHwgX2YgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9mLmNhbGwoX2UsIGFjdGlvbik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH07XG4gICAgICAgIGZvciAodmFyIF9iID0gMCwgYWN0aW9uc1dpdGhTaG9ydGN1dHNfMSA9IGFjdGlvbnNXaXRoU2hvcnRjdXRzOyBfYiA8IGFjdGlvbnNXaXRoU2hvcnRjdXRzXzEubGVuZ3RoOyBfYisrKSB7XG4gICAgICAgICAgICB2YXIgYWN0aW9uID0gYWN0aW9uc1dpdGhTaG9ydGN1dHNfMVtfYl07XG4gICAgICAgICAgICBfbG9vcF8xKGFjdGlvbik7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIHVuc3Vic2NyaWJlID0gKDAsIHRpbnlrZXlzXzEuZGVmYXVsdCkod2luZG93LCBzaG9ydGN1dHNNYXAsIHtcbiAgICAgICAgICAgIHRpbWVvdXQ6IDQwMCxcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB1bnN1YnNjcmliZSgpO1xuICAgICAgICB9O1xuICAgIH0sIFthY3Rpb25zLCBvcGVuLCBvcHRpb25zLmNhbGxiYWNrcywgcXVlcnksIGRpc2FibGVkXSk7XG59XG4vKipcbiAqIGB1c2VGb2N1c0hhbmRsZXJgIGVuc3VyZXMgdGhhdCBmb2N1cyBpcyBzZXQgYmFjayBvbiB0aGUgZWxlbWVudCB3aGljaCB3YXNcbiAqIGluIGZvY3VzIHByaW9yIHRvIGtiYXIgYmVpbmcgdHJpZ2dlcmVkLlxuICovXG5mdW5jdGlvbiB1c2VGb2N1c0hhbmRsZXIoKSB7XG4gICAgdmFyIHJGaXJzdFJlbmRlciA9IFJlYWN0LnVzZVJlZih0cnVlKTtcbiAgICB2YXIgX2EgPSAoMCwgdXNlS0Jhcl8xLnVzZUtCYXIpKGZ1bmN0aW9uIChzdGF0ZSkgeyByZXR1cm4gKHtcbiAgICAgICAgaXNTaG93aW5nOiBzdGF0ZS52aXN1YWxTdGF0ZSA9PT0gdHlwZXNfMS5WaXN1YWxTdGF0ZS5zaG93aW5nIHx8XG4gICAgICAgICAgICBzdGF0ZS52aXN1YWxTdGF0ZSA9PT0gdHlwZXNfMS5WaXN1YWxTdGF0ZS5hbmltYXRpbmdJbixcbiAgICB9KTsgfSksIGlzU2hvd2luZyA9IF9hLmlzU2hvd2luZywgcXVlcnkgPSBfYS5xdWVyeTtcbiAgICB2YXIgYWN0aXZlRWxlbWVudFJlZiA9IFJlYWN0LnVzZVJlZihudWxsKTtcbiAgICBSZWFjdC51c2VFZmZlY3QoZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAockZpcnN0UmVuZGVyLmN1cnJlbnQpIHtcbiAgICAgICAgICAgIHJGaXJzdFJlbmRlci5jdXJyZW50ID0gZmFsc2U7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGlzU2hvd2luZykge1xuICAgICAgICAgICAgYWN0aXZlRWxlbWVudFJlZi5jdXJyZW50ID0gZG9jdW1lbnQuYWN0aXZlRWxlbWVudDtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICAvLyBUaGlzIGZpeGVzIGFuIGlzc3VlIG9uIFNhZmFyaSB3aGVyZSBjbG9zaW5nIGtiYXIgY2F1c2VzIHRoZSBlbnRpcmVcbiAgICAgICAgLy8gcGFnZSB0byBzY3JvbGwgdG8gdGhlIGJvdHRvbS4gVGhlIHJlYXNvbiB0aGlzIHdhcyBoYXBwZW5pbmcgd2FzIGR1ZVxuICAgICAgICAvLyB0byB0aGUgc2VhcmNoIGlucHV0IHN0aWxsIGluIGZvY3VzIHdoZW4gd2UgcmVtb3ZlZCBpdCBmcm9tIHRoZSBkb20uXG4gICAgICAgIHZhciBjdXJyZW50QWN0aXZlRWxlbWVudCA9IGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQ7XG4gICAgICAgIGlmICgoY3VycmVudEFjdGl2ZUVsZW1lbnQgPT09IG51bGwgfHwgY3VycmVudEFjdGl2ZUVsZW1lbnQgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGN1cnJlbnRBY3RpdmVFbGVtZW50LnRhZ05hbWUudG9Mb3dlckNhc2UoKSkgPT09IFwiaW5wdXRcIikge1xuICAgICAgICAgICAgY3VycmVudEFjdGl2ZUVsZW1lbnQuYmx1cigpO1xuICAgICAgICB9XG4gICAgICAgIHZhciBhY3RpdmVFbGVtZW50ID0gYWN0aXZlRWxlbWVudFJlZi5jdXJyZW50O1xuICAgICAgICBpZiAoYWN0aXZlRWxlbWVudCAmJiBhY3RpdmVFbGVtZW50ICE9PSBjdXJyZW50QWN0aXZlRWxlbWVudCkge1xuICAgICAgICAgICAgYWN0aXZlRWxlbWVudC5mb2N1cygpO1xuICAgICAgICB9XG4gICAgfSwgW2lzU2hvd2luZ10pO1xuICAgIC8vIFdoZW4gZm9jdXMgaXMgYmx1cnJlZCBmcm9tIHRoZSBzZWFyY2ggaW5wdXQgd2hpbGUga2JhciBpcyBzdGlsbFxuICAgIC8vIG9wZW4sIGFueSBrZXlzdHJva2Ugc2hvdWxkIHNldCBmb2N1cyBiYWNrIHRvIHRoZSBzZWFyY2ggaW5wdXQuXG4gICAgUmVhY3QudXNlRWZmZWN0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgZnVuY3Rpb24gaGFuZGxlcihldmVudCkge1xuICAgICAgICAgICAgdmFyIGlucHV0ID0gcXVlcnkuZ2V0SW5wdXQoKTtcbiAgICAgICAgICAgIGlmIChldmVudC50YXJnZXQgIT09IGlucHV0KSB7XG4gICAgICAgICAgICAgICAgaW5wdXQuZm9jdXMoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAoaXNTaG93aW5nKSB7XG4gICAgICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgaGFuZGxlcik7XG4gICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCBoYW5kbGVyKTtcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICB9LCBbaXNTaG93aW5nLCBxdWVyeV0pO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/lib/InternalEvents.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/kbar/lib/KBarAnimator.js":
/*!***********************************************!*\
  !*** ./node_modules/kbar/lib/KBarAnimator.js ***!
  \***********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KBarAnimator = void 0;\nvar React = __importStar(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nvar types_1 = __webpack_require__(/*! ./types */ \"(ssr)/./node_modules/kbar/lib/types.js\");\nvar useKBar_1 = __webpack_require__(/*! ./useKBar */ \"(ssr)/./node_modules/kbar/lib/useKBar.js\");\nvar utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/kbar/lib/utils.js\");\nvar appearanceAnimationKeyframes = [\n    {\n        opacity: 0,\n        transform: \"scale(.99)\",\n    },\n    { opacity: 1, transform: \"scale(1.01)\" },\n    { opacity: 1, transform: \"scale(1)\" },\n];\nvar bumpAnimationKeyframes = [\n    {\n        transform: \"scale(1)\",\n    },\n    {\n        transform: \"scale(.98)\",\n    },\n    {\n        transform: \"scale(1)\",\n    },\n];\nvar KBarAnimator = function (_a) {\n    var _b, _c;\n    var children = _a.children, style = _a.style, className = _a.className, disableCloseOnOuterClick = _a.disableCloseOnOuterClick;\n    var _d = (0, useKBar_1.useKBar)(function (state) { return ({\n        visualState: state.visualState,\n        currentRootActionId: state.currentRootActionId,\n    }); }), visualState = _d.visualState, currentRootActionId = _d.currentRootActionId, query = _d.query, options = _d.options;\n    var outerRef = React.useRef(null);\n    var innerRef = React.useRef(null);\n    var enterMs = ((_b = options === null || options === void 0 ? void 0 : options.animations) === null || _b === void 0 ? void 0 : _b.enterMs) || 0;\n    var exitMs = ((_c = options === null || options === void 0 ? void 0 : options.animations) === null || _c === void 0 ? void 0 : _c.exitMs) || 0;\n    // Show/hide animation\n    React.useEffect(function () {\n        if (visualState === types_1.VisualState.showing) {\n            return;\n        }\n        var duration = visualState === types_1.VisualState.animatingIn ? enterMs : exitMs;\n        var element = outerRef.current;\n        element === null || element === void 0 ? void 0 : element.animate(appearanceAnimationKeyframes, {\n            duration: duration,\n            easing: \n            // TODO: expose easing in options\n            visualState === types_1.VisualState.animatingOut ? \"ease-in\" : \"ease-out\",\n            direction: visualState === types_1.VisualState.animatingOut ? \"reverse\" : \"normal\",\n            fill: \"forwards\",\n        });\n    }, [options, visualState, enterMs, exitMs]);\n    // Height animation\n    var previousHeight = React.useRef();\n    React.useEffect(function () {\n        // Only animate if we're actually showing\n        if (visualState === types_1.VisualState.showing) {\n            var outer_1 = outerRef.current;\n            var inner_1 = innerRef.current;\n            if (!outer_1 || !inner_1) {\n                return;\n            }\n            var ro_1 = new ResizeObserver(function (entries) {\n                for (var _i = 0, entries_1 = entries; _i < entries_1.length; _i++) {\n                    var entry = entries_1[_i];\n                    var cr = entry.contentRect;\n                    if (!previousHeight.current) {\n                        previousHeight.current = cr.height;\n                    }\n                    outer_1.animate([\n                        {\n                            height: previousHeight.current + \"px\",\n                        },\n                        {\n                            height: cr.height + \"px\",\n                        },\n                    ], {\n                        duration: enterMs / 2,\n                        // TODO: expose configs here\n                        easing: \"ease-out\",\n                        fill: \"forwards\",\n                    });\n                    previousHeight.current = cr.height;\n                }\n            });\n            ro_1.observe(inner_1);\n            return function () {\n                ro_1.unobserve(inner_1);\n            };\n        }\n    }, [visualState, options, enterMs, exitMs]);\n    // Bump animation between nested actions\n    var firstRender = React.useRef(true);\n    React.useEffect(function () {\n        if (firstRender.current) {\n            firstRender.current = false;\n            return;\n        }\n        var element = outerRef.current;\n        if (element) {\n            element.animate(bumpAnimationKeyframes, {\n                duration: enterMs,\n                easing: \"ease-out\",\n            });\n        }\n    }, [currentRootActionId, enterMs]);\n    (0, utils_1.useOuterClick)(outerRef, function () {\n        var _a, _b;\n        if (disableCloseOnOuterClick) {\n            return;\n        }\n        query.setVisualState(types_1.VisualState.animatingOut);\n        (_b = (_a = options.callbacks) === null || _a === void 0 ? void 0 : _a.onClose) === null || _b === void 0 ? void 0 : _b.call(_a);\n    });\n    return (React.createElement(\"div\", { ref: outerRef, style: __assign(__assign(__assign({}, appearanceAnimationKeyframes[0]), style), { pointerEvents: \"auto\" }), className: className },\n        React.createElement(\"div\", { ref: innerRef }, children)));\n};\nexports.KBarAnimator = KBarAnimator;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/lib/KBarAnimator.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/kbar/lib/KBarContextProvider.js":
/*!******************************************************!*\
  !*** ./node_modules/kbar/lib/KBarContextProvider.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KBarProvider = exports.KBarContext = void 0;\nvar useStore_1 = __webpack_require__(/*! ./useStore */ \"(ssr)/./node_modules/kbar/lib/useStore.js\");\nvar React = __importStar(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nvar InternalEvents_1 = __webpack_require__(/*! ./InternalEvents */ \"(ssr)/./node_modules/kbar/lib/InternalEvents.js\");\nexports.KBarContext = React.createContext({});\nvar KBarProvider = function (props) {\n    var contextValue = (0, useStore_1.useStore)(props);\n    return (React.createElement(exports.KBarContext.Provider, { value: contextValue },\n        React.createElement(InternalEvents_1.InternalEvents, null),\n        props.children));\n};\nexports.KBarProvider = KBarProvider;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMva2Jhci9saWIvS0JhckNvbnRleHRQcm92aWRlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSxtQ0FBbUMsb0NBQW9DLGdCQUFnQjtBQUN2RixDQUFDO0FBQ0Q7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBLDBDQUEwQyw0QkFBNEI7QUFDdEUsQ0FBQztBQUNEO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG9CQUFvQixHQUFHLG1CQUFtQjtBQUMxQyxpQkFBaUIsbUJBQU8sQ0FBQyw2REFBWTtBQUNyQyx5QkFBeUIsbUJBQU8sQ0FBQyx3R0FBTztBQUN4Qyx1QkFBdUIsbUJBQU8sQ0FBQyx5RUFBa0I7QUFDakQsbUJBQW1CLHlCQUF5QjtBQUM1QztBQUNBO0FBQ0EsZ0VBQWdFLHFCQUFxQjtBQUNyRjtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9nYWRhaS1yYWNvbXAvLi9ub2RlX21vZHVsZXMva2Jhci9saWIvS0JhckNvbnRleHRQcm92aWRlci5qcz8xOGZmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH0pO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX3NldE1vZHVsZURlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9fc2V0TW9kdWxlRGVmYXVsdCkgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgdikge1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBcImRlZmF1bHRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdiB9KTtcbn0pIDogZnVuY3Rpb24obywgdikge1xuICAgIG9bXCJkZWZhdWx0XCJdID0gdjtcbn0pO1xudmFyIF9faW1wb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnRTdGFyKSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgaWYgKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgcmV0dXJuIG1vZDtcbiAgICB2YXIgcmVzdWx0ID0ge307XG4gICAgaWYgKG1vZCAhPSBudWxsKSBmb3IgKHZhciBrIGluIG1vZCkgaWYgKGsgIT09IFwiZGVmYXVsdFwiICYmIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChtb2QsIGspKSBfX2NyZWF0ZUJpbmRpbmcocmVzdWx0LCBtb2QsIGspO1xuICAgIF9fc2V0TW9kdWxlRGVmYXVsdChyZXN1bHQsIG1vZCk7XG4gICAgcmV0dXJuIHJlc3VsdDtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLktCYXJQcm92aWRlciA9IGV4cG9ydHMuS0JhckNvbnRleHQgPSB2b2lkIDA7XG52YXIgdXNlU3RvcmVfMSA9IHJlcXVpcmUoXCIuL3VzZVN0b3JlXCIpO1xudmFyIFJlYWN0ID0gX19pbXBvcnRTdGFyKHJlcXVpcmUoXCJyZWFjdFwiKSk7XG52YXIgSW50ZXJuYWxFdmVudHNfMSA9IHJlcXVpcmUoXCIuL0ludGVybmFsRXZlbnRzXCIpO1xuZXhwb3J0cy5LQmFyQ29udGV4dCA9IFJlYWN0LmNyZWF0ZUNvbnRleHQoe30pO1xudmFyIEtCYXJQcm92aWRlciA9IGZ1bmN0aW9uIChwcm9wcykge1xuICAgIHZhciBjb250ZXh0VmFsdWUgPSAoMCwgdXNlU3RvcmVfMS51c2VTdG9yZSkocHJvcHMpO1xuICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChleHBvcnRzLktCYXJDb250ZXh0LlByb3ZpZGVyLCB7IHZhbHVlOiBjb250ZXh0VmFsdWUgfSxcbiAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChJbnRlcm5hbEV2ZW50c18xLkludGVybmFsRXZlbnRzLCBudWxsKSxcbiAgICAgICAgcHJvcHMuY2hpbGRyZW4pKTtcbn07XG5leHBvcnRzLktCYXJQcm92aWRlciA9IEtCYXJQcm92aWRlcjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/lib/KBarContextProvider.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/kbar/lib/KBarPortal.js":
/*!*********************************************!*\
  !*** ./node_modules/kbar/lib/KBarPortal.js ***!
  \*********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KBarPortal = void 0;\nvar react_portal_1 = __webpack_require__(/*! @radix-ui/react-portal */ \"(ssr)/./node_modules/@radix-ui/react-portal/dist/index.js\");\nvar React = __importStar(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nvar types_1 = __webpack_require__(/*! ./types */ \"(ssr)/./node_modules/kbar/lib/types.js\");\nvar useKBar_1 = __webpack_require__(/*! ./useKBar */ \"(ssr)/./node_modules/kbar/lib/useKBar.js\");\nfunction KBarPortal(_a) {\n    var children = _a.children, container = _a.container;\n    var showing = (0, useKBar_1.useKBar)(function (state) { return ({\n        showing: state.visualState !== types_1.VisualState.hidden,\n    }); }).showing;\n    if (!showing) {\n        return null;\n    }\n    return React.createElement(react_portal_1.Portal, { container: container }, children);\n}\nexports.KBarPortal = KBarPortal;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMva2Jhci9saWIvS0JhclBvcnRhbC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSxtQ0FBbUMsb0NBQW9DLGdCQUFnQjtBQUN2RixDQUFDO0FBQ0Q7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBLDBDQUEwQyw0QkFBNEI7QUFDdEUsQ0FBQztBQUNEO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtCQUFrQjtBQUNsQixxQkFBcUIsbUJBQU8sQ0FBQyx5RkFBd0I7QUFDckQseUJBQXlCLG1CQUFPLENBQUMsd0dBQU87QUFDeEMsY0FBYyxtQkFBTyxDQUFDLHVEQUFTO0FBQy9CLGdCQUFnQixtQkFBTyxDQUFDLDJEQUFXO0FBQ25DO0FBQ0E7QUFDQSw0REFBNEQ7QUFDNUQ7QUFDQSxLQUFLLElBQUk7QUFDVDtBQUNBO0FBQ0E7QUFDQSx3REFBd0Qsc0JBQXNCO0FBQzlFO0FBQ0Esa0JBQWtCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZ2FkYWktcmFjb21wLy4vbm9kZV9tb2R1bGVzL2tiYXIvbGliL0tCYXJQb3J0YWwuanM/NWZmZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9KTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19zZXRNb2R1bGVEZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX3NldE1vZHVsZURlZmF1bHQpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIHYpIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgXCJkZWZhdWx0XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgdmFsdWU6IHYgfSk7XG59KSA6IGZ1bmN0aW9uKG8sIHYpIHtcbiAgICBvW1wiZGVmYXVsdFwiXSA9IHY7XG59KTtcbnZhciBfX2ltcG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0U3RhcikgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIGlmIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpIHJldHVybiBtb2Q7XG4gICAgdmFyIHJlc3VsdCA9IHt9O1xuICAgIGlmIChtb2QgIT0gbnVsbCkgZm9yICh2YXIgayBpbiBtb2QpIGlmIChrICE9PSBcImRlZmF1bHRcIiAmJiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobW9kLCBrKSkgX19jcmVhdGVCaW5kaW5nKHJlc3VsdCwgbW9kLCBrKTtcbiAgICBfX3NldE1vZHVsZURlZmF1bHQocmVzdWx0LCBtb2QpO1xuICAgIHJldHVybiByZXN1bHQ7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5LQmFyUG9ydGFsID0gdm9pZCAwO1xudmFyIHJlYWN0X3BvcnRhbF8xID0gcmVxdWlyZShcIkByYWRpeC11aS9yZWFjdC1wb3J0YWxcIik7XG52YXIgUmVhY3QgPSBfX2ltcG9ydFN0YXIocmVxdWlyZShcInJlYWN0XCIpKTtcbnZhciB0eXBlc18xID0gcmVxdWlyZShcIi4vdHlwZXNcIik7XG52YXIgdXNlS0Jhcl8xID0gcmVxdWlyZShcIi4vdXNlS0JhclwiKTtcbmZ1bmN0aW9uIEtCYXJQb3J0YWwoX2EpIHtcbiAgICB2YXIgY2hpbGRyZW4gPSBfYS5jaGlsZHJlbiwgY29udGFpbmVyID0gX2EuY29udGFpbmVyO1xuICAgIHZhciBzaG93aW5nID0gKDAsIHVzZUtCYXJfMS51c2VLQmFyKShmdW5jdGlvbiAoc3RhdGUpIHsgcmV0dXJuICh7XG4gICAgICAgIHNob3dpbmc6IHN0YXRlLnZpc3VhbFN0YXRlICE9PSB0eXBlc18xLlZpc3VhbFN0YXRlLmhpZGRlbixcbiAgICB9KTsgfSkuc2hvd2luZztcbiAgICBpZiAoIXNob3dpbmcpIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KHJlYWN0X3BvcnRhbF8xLlBvcnRhbCwgeyBjb250YWluZXI6IGNvbnRhaW5lciB9LCBjaGlsZHJlbik7XG59XG5leHBvcnRzLktCYXJQb3J0YWwgPSBLQmFyUG9ydGFsO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/lib/KBarPortal.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/kbar/lib/KBarPositioner.js":
/*!*************************************************!*\
  !*** ./node_modules/kbar/lib/KBarPositioner.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KBarPositioner = void 0;\nvar React = __importStar(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nvar defaultStyle = {\n    position: \"fixed\",\n    display: \"flex\",\n    alignItems: \"flex-start\",\n    justifyContent: \"center\",\n    width: \"100%\",\n    inset: \"0px\",\n    padding: \"14vh 16px 16px\",\n};\nfunction getStyle(style) {\n    return style ? __assign(__assign({}, defaultStyle), style) : defaultStyle;\n}\nexports.KBarPositioner = React.forwardRef(function (_a, ref) {\n    var style = _a.style, children = _a.children, props = __rest(_a, [\"style\", \"children\"]);\n    return (React.createElement(\"div\", __assign({ ref: ref, style: getStyle(style) }, props), children));\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMva2Jhci9saWIvS0JhclBvc2l0aW9uZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsaURBQWlELE9BQU87QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUMsb0NBQW9DLGdCQUFnQjtBQUN2RixDQUFDO0FBQ0Q7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBLDBDQUEwQyw0QkFBNEI7QUFDdEUsQ0FBQztBQUNEO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZEQUE2RCxjQUFjO0FBQzNFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsc0JBQXNCO0FBQ3RCLHlCQUF5QixtQkFBTyxDQUFDLHdHQUFPO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDO0FBQ3ZDO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0Esa0RBQWtELGtDQUFrQztBQUNwRixDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZ2FkYWktcmFjb21wLy4vbm9kZV9tb2R1bGVzL2tiYXIvbGliL0tCYXJQb3NpdGlvbmVyLmpzPzlhNGIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19hc3NpZ24gPSAodGhpcyAmJiB0aGlzLl9fYXNzaWduKSB8fCBmdW5jdGlvbiAoKSB7XG4gICAgX19hc3NpZ24gPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uKHQpIHtcbiAgICAgICAgZm9yICh2YXIgcywgaSA9IDEsIG4gPSBhcmd1bWVudHMubGVuZ3RoOyBpIDwgbjsgaSsrKSB7XG4gICAgICAgICAgICBzID0gYXJndW1lbnRzW2ldO1xuICAgICAgICAgICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApKVxuICAgICAgICAgICAgICAgIHRbcF0gPSBzW3BdO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0O1xuICAgIH07XG4gICAgcmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG59O1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH0pO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX3NldE1vZHVsZURlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9fc2V0TW9kdWxlRGVmYXVsdCkgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgdikge1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBcImRlZmF1bHRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdiB9KTtcbn0pIDogZnVuY3Rpb24obywgdikge1xuICAgIG9bXCJkZWZhdWx0XCJdID0gdjtcbn0pO1xudmFyIF9faW1wb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnRTdGFyKSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgaWYgKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgcmV0dXJuIG1vZDtcbiAgICB2YXIgcmVzdWx0ID0ge307XG4gICAgaWYgKG1vZCAhPSBudWxsKSBmb3IgKHZhciBrIGluIG1vZCkgaWYgKGsgIT09IFwiZGVmYXVsdFwiICYmIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChtb2QsIGspKSBfX2NyZWF0ZUJpbmRpbmcocmVzdWx0LCBtb2QsIGspO1xuICAgIF9fc2V0TW9kdWxlRGVmYXVsdChyZXN1bHQsIG1vZCk7XG4gICAgcmV0dXJuIHJlc3VsdDtcbn07XG52YXIgX19yZXN0ID0gKHRoaXMgJiYgdGhpcy5fX3Jlc3QpIHx8IGZ1bmN0aW9uIChzLCBlKSB7XG4gICAgdmFyIHQgPSB7fTtcbiAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkgJiYgZS5pbmRleE9mKHApIDwgMClcbiAgICAgICAgdFtwXSA9IHNbcF07XG4gICAgaWYgKHMgIT0gbnVsbCAmJiB0eXBlb2YgT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyA9PT0gXCJmdW5jdGlvblwiKVxuICAgICAgICBmb3IgKHZhciBpID0gMCwgcCA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMocyk7IGkgPCBwLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBpZiAoZS5pbmRleE9mKHBbaV0pIDwgMCAmJiBPYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlLmNhbGwocywgcFtpXSkpXG4gICAgICAgICAgICAgICAgdFtwW2ldXSA9IHNbcFtpXV07XG4gICAgICAgIH1cbiAgICByZXR1cm4gdDtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLktCYXJQb3NpdGlvbmVyID0gdm9pZCAwO1xudmFyIFJlYWN0ID0gX19pbXBvcnRTdGFyKHJlcXVpcmUoXCJyZWFjdFwiKSk7XG52YXIgZGVmYXVsdFN0eWxlID0ge1xuICAgIHBvc2l0aW9uOiBcImZpeGVkXCIsXG4gICAgZGlzcGxheTogXCJmbGV4XCIsXG4gICAgYWxpZ25JdGVtczogXCJmbGV4LXN0YXJ0XCIsXG4gICAganVzdGlmeUNvbnRlbnQ6IFwiY2VudGVyXCIsXG4gICAgd2lkdGg6IFwiMTAwJVwiLFxuICAgIGluc2V0OiBcIjBweFwiLFxuICAgIHBhZGRpbmc6IFwiMTR2aCAxNnB4IDE2cHhcIixcbn07XG5mdW5jdGlvbiBnZXRTdHlsZShzdHlsZSkge1xuICAgIHJldHVybiBzdHlsZSA/IF9fYXNzaWduKF9fYXNzaWduKHt9LCBkZWZhdWx0U3R5bGUpLCBzdHlsZSkgOiBkZWZhdWx0U3R5bGU7XG59XG5leHBvcnRzLktCYXJQb3NpdGlvbmVyID0gUmVhY3QuZm9yd2FyZFJlZihmdW5jdGlvbiAoX2EsIHJlZikge1xuICAgIHZhciBzdHlsZSA9IF9hLnN0eWxlLCBjaGlsZHJlbiA9IF9hLmNoaWxkcmVuLCBwcm9wcyA9IF9fcmVzdChfYSwgW1wic3R5bGVcIiwgXCJjaGlsZHJlblwiXSk7XG4gICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIF9fYXNzaWduKHsgcmVmOiByZWYsIHN0eWxlOiBnZXRTdHlsZShzdHlsZSkgfSwgcHJvcHMpLCBjaGlsZHJlbikpO1xufSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/lib/KBarPositioner.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/kbar/lib/KBarResults.js":
/*!**********************************************!*\
  !*** ./node_modules/kbar/lib/KBarResults.js ***!
  \**********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KBarResults = void 0;\nvar React = __importStar(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nvar react_virtual_1 = __webpack_require__(/*! react-virtual */ \"(ssr)/./node_modules/kbar/node_modules/react-virtual/dist/react-virtual.mjs\");\nvar KBarSearch_1 = __webpack_require__(/*! ./KBarSearch */ \"(ssr)/./node_modules/kbar/lib/KBarSearch.js\");\nvar useKBar_1 = __webpack_require__(/*! ./useKBar */ \"(ssr)/./node_modules/kbar/lib/useKBar.js\");\nvar utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/kbar/lib/utils.js\");\nvar START_INDEX = 0;\nvar KBarResults = function (props) {\n    var activeRef = React.useRef(null);\n    var parentRef = React.useRef(null);\n    // store a ref to all items so we do not have to pass\n    // them as a dependency when setting up event listeners.\n    var itemsRef = React.useRef(props.items);\n    itemsRef.current = props.items;\n    var rowVirtualizer = (0, react_virtual_1.useVirtual)({\n        size: itemsRef.current.length,\n        parentRef: parentRef,\n    });\n    var _a = (0, useKBar_1.useKBar)(function (state) { return ({\n        search: state.searchQuery,\n        currentRootActionId: state.currentRootActionId,\n        activeIndex: state.activeIndex,\n    }); }), query = _a.query, search = _a.search, currentRootActionId = _a.currentRootActionId, activeIndex = _a.activeIndex, options = _a.options;\n    React.useEffect(function () {\n        var handler = function (event) {\n            var _a;\n            if (event.isComposing) {\n                return;\n            }\n            if (event.key === \"ArrowUp\" || (event.ctrlKey && event.key === \"p\")) {\n                event.preventDefault();\n                event.stopPropagation();\n                query.setActiveIndex(function (index) {\n                    var nextIndex = index > START_INDEX ? index - 1 : index;\n                    // avoid setting active index on a group\n                    if (typeof itemsRef.current[nextIndex] === \"string\") {\n                        if (nextIndex === 0)\n                            return index;\n                        nextIndex -= 1;\n                    }\n                    return nextIndex;\n                });\n            }\n            else if (event.key === \"ArrowDown\" ||\n                (event.ctrlKey && event.key === \"n\")) {\n                event.preventDefault();\n                event.stopPropagation();\n                query.setActiveIndex(function (index) {\n                    var nextIndex = index < itemsRef.current.length - 1 ? index + 1 : index;\n                    // avoid setting active index on a group\n                    if (typeof itemsRef.current[nextIndex] === \"string\") {\n                        if (nextIndex === itemsRef.current.length - 1)\n                            return index;\n                        nextIndex += 1;\n                    }\n                    return nextIndex;\n                });\n            }\n            else if (event.key === \"Enter\") {\n                event.preventDefault();\n                event.stopPropagation();\n                // storing the active dom element in a ref prevents us from\n                // having to calculate the current action to perform based\n                // on the `activeIndex`, which we would have needed to add\n                // as part of the dependencies array.\n                (_a = activeRef.current) === null || _a === void 0 ? void 0 : _a.click();\n            }\n        };\n        window.addEventListener(\"keydown\", handler, { capture: true });\n        return function () { return window.removeEventListener(\"keydown\", handler, { capture: true }); };\n    }, [query]);\n    // destructuring here to prevent linter warning to pass\n    // entire rowVirtualizer in the dependencies array.\n    var scrollToIndex = rowVirtualizer.scrollToIndex;\n    React.useEffect(function () {\n        scrollToIndex(activeIndex, {\n            // ensure that if the first item in the list is a group\n            // name and we are focused on the second item, to not\n            // scroll past that group, hiding it.\n            align: activeIndex <= 1 ? \"end\" : \"auto\",\n        });\n    }, [activeIndex, scrollToIndex]);\n    React.useEffect(function () {\n        // TODO(tim): fix scenario where async actions load in\n        // and active index is reset to the first item. i.e. when\n        // users register actions and bust the `useRegisterActions`\n        // cache, we won't want to reset their active index as they\n        // are navigating the list.\n        query.setActiveIndex(\n        // avoid setting active index on a group\n        typeof props.items[START_INDEX] === \"string\"\n            ? START_INDEX + 1\n            : START_INDEX);\n    }, [search, currentRootActionId, props.items, query]);\n    var execute = React.useCallback(function (item) {\n        var _a, _b;\n        if (typeof item === \"string\")\n            return;\n        if (item.command) {\n            item.command.perform(item);\n            query.toggle();\n        }\n        else {\n            query.setSearch(\"\");\n            query.setCurrentRootAction(item.id);\n        }\n        (_b = (_a = options.callbacks) === null || _a === void 0 ? void 0 : _a.onSelectAction) === null || _b === void 0 ? void 0 : _b.call(_a, item);\n    }, [query, options]);\n    var pointerMoved = (0, utils_1.usePointerMovedSinceMount)();\n    return (React.createElement(\"div\", { ref: parentRef, style: {\n            maxHeight: props.maxHeight || 400,\n            position: \"relative\",\n            overflow: \"auto\",\n        } },\n        React.createElement(\"div\", { role: \"listbox\", id: KBarSearch_1.KBAR_LISTBOX, style: {\n                height: rowVirtualizer.totalSize + \"px\",\n                width: \"100%\",\n            } }, rowVirtualizer.virtualItems.map(function (virtualRow) {\n            var item = itemsRef.current[virtualRow.index];\n            var handlers = typeof item !== \"string\" && {\n                onPointerMove: function () {\n                    return pointerMoved &&\n                        activeIndex !== virtualRow.index &&\n                        query.setActiveIndex(virtualRow.index);\n                },\n                onPointerDown: function () { return query.setActiveIndex(virtualRow.index); },\n                onClick: function () { return execute(item); },\n            };\n            var active = virtualRow.index === activeIndex;\n            return (React.createElement(\"div\", __assign({ ref: active ? activeRef : null, id: (0, KBarSearch_1.getListboxItemId)(virtualRow.index), role: \"option\", \"aria-selected\": active, key: virtualRow.index, style: {\n                    position: \"absolute\",\n                    top: 0,\n                    left: 0,\n                    width: \"100%\",\n                    transform: \"translateY(\" + virtualRow.start + \"px)\",\n                } }, handlers), React.cloneElement(props.onRender({\n                item: item,\n                active: active,\n            }), {\n                ref: virtualRow.measureRef,\n            })));\n        }))));\n};\nexports.KBarResults = KBarResults;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/lib/KBarResults.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/kbar/lib/KBarSearch.js":
/*!*********************************************!*\
  !*** ./node_modules/kbar/lib/KBarSearch.js ***!
  \*********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KBarSearch = exports.getListboxItemId = exports.KBAR_LISTBOX = void 0;\nvar React = __importStar(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nvar types_1 = __webpack_require__(/*! ./types */ \"(ssr)/./node_modules/kbar/lib/types.js\");\nvar useKBar_1 = __webpack_require__(/*! ./useKBar */ \"(ssr)/./node_modules/kbar/lib/useKBar.js\");\nexports.KBAR_LISTBOX = \"kbar-listbox\";\nvar getListboxItemId = function (id) { return \"kbar-listbox-item-\" + id; };\nexports.getListboxItemId = getListboxItemId;\nfunction KBarSearch(props) {\n    var _a = (0, useKBar_1.useKBar)(function (state) { return ({\n        search: state.searchQuery,\n        currentRootActionId: state.currentRootActionId,\n        actions: state.actions,\n        activeIndex: state.activeIndex,\n        showing: state.visualState === types_1.VisualState.showing,\n    }); }), query = _a.query, search = _a.search, actions = _a.actions, currentRootActionId = _a.currentRootActionId, activeIndex = _a.activeIndex, showing = _a.showing, options = _a.options;\n    var _b = React.useState(search), inputValue = _b[0], setInputValue = _b[1];\n    React.useEffect(function () {\n        query.setSearch(inputValue);\n    }, [inputValue, query]);\n    var defaultPlaceholder = props.defaultPlaceholder, rest = __rest(props, [\"defaultPlaceholder\"]);\n    React.useEffect(function () {\n        query.setSearch(\"\");\n        query.getInput().focus();\n        return function () { return query.setSearch(\"\"); };\n    }, [currentRootActionId, query]);\n    var placeholder = React.useMemo(function () {\n        var defaultText = defaultPlaceholder !== null && defaultPlaceholder !== void 0 ? defaultPlaceholder : \"Type a command or search…\";\n        return currentRootActionId && actions[currentRootActionId]\n            ? actions[currentRootActionId].name\n            : defaultText;\n    }, [actions, currentRootActionId, defaultPlaceholder]);\n    return (React.createElement(\"input\", __assign({}, rest, { ref: query.inputRefSetter, autoFocus: true, autoComplete: \"off\", role: \"combobox\", spellCheck: \"false\", \"aria-expanded\": showing, \"aria-controls\": exports.KBAR_LISTBOX, \"aria-activedescendant\": (0, exports.getListboxItemId)(activeIndex), value: inputValue, placeholder: placeholder, onChange: function (event) {\n            var _a, _b, _c;\n            (_a = props.onChange) === null || _a === void 0 ? void 0 : _a.call(props, event);\n            setInputValue(event.target.value);\n            (_c = (_b = options === null || options === void 0 ? void 0 : options.callbacks) === null || _b === void 0 ? void 0 : _b.onQueryChange) === null || _c === void 0 ? void 0 : _c.call(_b, event.target.value);\n        }, onKeyDown: function (event) {\n            var _a;\n            (_a = props.onKeyDown) === null || _a === void 0 ? void 0 : _a.call(props, event);\n            if (currentRootActionId && !search && event.key === \"Backspace\") {\n                var parent_1 = actions[currentRootActionId].parent;\n                query.setCurrentRootAction(parent_1);\n            }\n        } })));\n}\nexports.KBarSearch = KBarSearch;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMva2Jhci9saWIvS0JhclNlYXJjaC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSxpREFBaUQsT0FBTztBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyxvQ0FBb0MsZ0JBQWdCO0FBQ3ZGLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0EsMENBQTBDLDRCQUE0QjtBQUN0RSxDQUFDO0FBQ0Q7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkRBQTZELGNBQWM7QUFDM0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0IsR0FBRyx3QkFBd0IsR0FBRyxvQkFBb0I7QUFDcEUseUJBQXlCLG1CQUFPLENBQUMsd0dBQU87QUFDeEMsY0FBYyxtQkFBTyxDQUFDLHVEQUFTO0FBQy9CLGdCQUFnQixtQkFBTyxDQUFDLDJEQUFXO0FBQ25DLG9CQUFvQjtBQUNwQix1Q0FBdUM7QUFDdkMsd0JBQXdCO0FBQ3hCO0FBQ0EsdURBQXVEO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLLElBQUk7QUFDVDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0IsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsb0RBQW9ELFVBQVU7QUFDOUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0Esa0JBQWtCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZ2FkYWktcmFjb21wLy4vbm9kZV9tb2R1bGVzL2tiYXIvbGliL0tCYXJTZWFyY2guanM/ZTZjYyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2Fzc2lnbiA9ICh0aGlzICYmIHRoaXMuX19hc3NpZ24pIHx8IGZ1bmN0aW9uICgpIHtcbiAgICBfX2Fzc2lnbiA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24odCkge1xuICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHtcbiAgICAgICAgICAgIHMgPSBhcmd1bWVudHNbaV07XG4gICAgICAgICAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkpXG4gICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHQ7XG4gICAgfTtcbiAgICByZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn07XG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfSk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fc2V0TW9kdWxlRGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19zZXRNb2R1bGVEZWZhdWx0KSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCB2KSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIFwiZGVmYXVsdFwiLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2IH0pO1xufSkgOiBmdW5jdGlvbihvLCB2KSB7XG4gICAgb1tcImRlZmF1bHRcIl0gPSB2O1xufSk7XG52YXIgX19pbXBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydFN0YXIpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICBpZiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSByZXR1cm4gbW9kO1xuICAgIHZhciByZXN1bHQgPSB7fTtcbiAgICBpZiAobW9kICE9IG51bGwpIGZvciAodmFyIGsgaW4gbW9kKSBpZiAoayAhPT0gXCJkZWZhdWx0XCIgJiYgT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG1vZCwgaykpIF9fY3JlYXRlQmluZGluZyhyZXN1bHQsIG1vZCwgayk7XG4gICAgX19zZXRNb2R1bGVEZWZhdWx0KHJlc3VsdCwgbW9kKTtcbiAgICByZXR1cm4gcmVzdWx0O1xufTtcbnZhciBfX3Jlc3QgPSAodGhpcyAmJiB0aGlzLl9fcmVzdCkgfHwgZnVuY3Rpb24gKHMsIGUpIHtcbiAgICB2YXIgdCA9IHt9O1xuICAgIGZvciAodmFyIHAgaW4gcykgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCBwKSAmJiBlLmluZGV4T2YocCkgPCAwKVxuICAgICAgICB0W3BdID0gc1twXTtcbiAgICBpZiAocyAhPSBudWxsICYmIHR5cGVvZiBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzID09PSBcImZ1bmN0aW9uXCIpXG4gICAgICAgIGZvciAodmFyIGkgPSAwLCBwID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhzKTsgaSA8IHAubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGlmIChlLmluZGV4T2YocFtpXSkgPCAwICYmIE9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGUuY2FsbChzLCBwW2ldKSlcbiAgICAgICAgICAgICAgICB0W3BbaV1dID0gc1twW2ldXTtcbiAgICAgICAgfVxuICAgIHJldHVybiB0O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuS0JhclNlYXJjaCA9IGV4cG9ydHMuZ2V0TGlzdGJveEl0ZW1JZCA9IGV4cG9ydHMuS0JBUl9MSVNUQk9YID0gdm9pZCAwO1xudmFyIFJlYWN0ID0gX19pbXBvcnRTdGFyKHJlcXVpcmUoXCJyZWFjdFwiKSk7XG52YXIgdHlwZXNfMSA9IHJlcXVpcmUoXCIuL3R5cGVzXCIpO1xudmFyIHVzZUtCYXJfMSA9IHJlcXVpcmUoXCIuL3VzZUtCYXJcIik7XG5leHBvcnRzLktCQVJfTElTVEJPWCA9IFwia2Jhci1saXN0Ym94XCI7XG52YXIgZ2V0TGlzdGJveEl0ZW1JZCA9IGZ1bmN0aW9uIChpZCkgeyByZXR1cm4gXCJrYmFyLWxpc3Rib3gtaXRlbS1cIiArIGlkOyB9O1xuZXhwb3J0cy5nZXRMaXN0Ym94SXRlbUlkID0gZ2V0TGlzdGJveEl0ZW1JZDtcbmZ1bmN0aW9uIEtCYXJTZWFyY2gocHJvcHMpIHtcbiAgICB2YXIgX2EgPSAoMCwgdXNlS0Jhcl8xLnVzZUtCYXIpKGZ1bmN0aW9uIChzdGF0ZSkgeyByZXR1cm4gKHtcbiAgICAgICAgc2VhcmNoOiBzdGF0ZS5zZWFyY2hRdWVyeSxcbiAgICAgICAgY3VycmVudFJvb3RBY3Rpb25JZDogc3RhdGUuY3VycmVudFJvb3RBY3Rpb25JZCxcbiAgICAgICAgYWN0aW9uczogc3RhdGUuYWN0aW9ucyxcbiAgICAgICAgYWN0aXZlSW5kZXg6IHN0YXRlLmFjdGl2ZUluZGV4LFxuICAgICAgICBzaG93aW5nOiBzdGF0ZS52aXN1YWxTdGF0ZSA9PT0gdHlwZXNfMS5WaXN1YWxTdGF0ZS5zaG93aW5nLFxuICAgIH0pOyB9KSwgcXVlcnkgPSBfYS5xdWVyeSwgc2VhcmNoID0gX2Euc2VhcmNoLCBhY3Rpb25zID0gX2EuYWN0aW9ucywgY3VycmVudFJvb3RBY3Rpb25JZCA9IF9hLmN1cnJlbnRSb290QWN0aW9uSWQsIGFjdGl2ZUluZGV4ID0gX2EuYWN0aXZlSW5kZXgsIHNob3dpbmcgPSBfYS5zaG93aW5nLCBvcHRpb25zID0gX2Eub3B0aW9ucztcbiAgICB2YXIgX2IgPSBSZWFjdC51c2VTdGF0ZShzZWFyY2gpLCBpbnB1dFZhbHVlID0gX2JbMF0sIHNldElucHV0VmFsdWUgPSBfYlsxXTtcbiAgICBSZWFjdC51c2VFZmZlY3QoZnVuY3Rpb24gKCkge1xuICAgICAgICBxdWVyeS5zZXRTZWFyY2goaW5wdXRWYWx1ZSk7XG4gICAgfSwgW2lucHV0VmFsdWUsIHF1ZXJ5XSk7XG4gICAgdmFyIGRlZmF1bHRQbGFjZWhvbGRlciA9IHByb3BzLmRlZmF1bHRQbGFjZWhvbGRlciwgcmVzdCA9IF9fcmVzdChwcm9wcywgW1wiZGVmYXVsdFBsYWNlaG9sZGVyXCJdKTtcbiAgICBSZWFjdC51c2VFZmZlY3QoZnVuY3Rpb24gKCkge1xuICAgICAgICBxdWVyeS5zZXRTZWFyY2goXCJcIik7XG4gICAgICAgIHF1ZXJ5LmdldElucHV0KCkuZm9jdXMoKTtcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uICgpIHsgcmV0dXJuIHF1ZXJ5LnNldFNlYXJjaChcIlwiKTsgfTtcbiAgICB9LCBbY3VycmVudFJvb3RBY3Rpb25JZCwgcXVlcnldKTtcbiAgICB2YXIgcGxhY2Vob2xkZXIgPSBSZWFjdC51c2VNZW1vKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGRlZmF1bHRUZXh0ID0gZGVmYXVsdFBsYWNlaG9sZGVyICE9PSBudWxsICYmIGRlZmF1bHRQbGFjZWhvbGRlciAhPT0gdm9pZCAwID8gZGVmYXVsdFBsYWNlaG9sZGVyIDogXCJUeXBlIGEgY29tbWFuZCBvciBzZWFyY2jigKZcIjtcbiAgICAgICAgcmV0dXJuIGN1cnJlbnRSb290QWN0aW9uSWQgJiYgYWN0aW9uc1tjdXJyZW50Um9vdEFjdGlvbklkXVxuICAgICAgICAgICAgPyBhY3Rpb25zW2N1cnJlbnRSb290QWN0aW9uSWRdLm5hbWVcbiAgICAgICAgICAgIDogZGVmYXVsdFRleHQ7XG4gICAgfSwgW2FjdGlvbnMsIGN1cnJlbnRSb290QWN0aW9uSWQsIGRlZmF1bHRQbGFjZWhvbGRlcl0pO1xuICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChcImlucHV0XCIsIF9fYXNzaWduKHt9LCByZXN0LCB7IHJlZjogcXVlcnkuaW5wdXRSZWZTZXR0ZXIsIGF1dG9Gb2N1czogdHJ1ZSwgYXV0b0NvbXBsZXRlOiBcIm9mZlwiLCByb2xlOiBcImNvbWJvYm94XCIsIHNwZWxsQ2hlY2s6IFwiZmFsc2VcIiwgXCJhcmlhLWV4cGFuZGVkXCI6IHNob3dpbmcsIFwiYXJpYS1jb250cm9sc1wiOiBleHBvcnRzLktCQVJfTElTVEJPWCwgXCJhcmlhLWFjdGl2ZWRlc2NlbmRhbnRcIjogKDAsIGV4cG9ydHMuZ2V0TGlzdGJveEl0ZW1JZCkoYWN0aXZlSW5kZXgpLCB2YWx1ZTogaW5wdXRWYWx1ZSwgcGxhY2Vob2xkZXI6IHBsYWNlaG9sZGVyLCBvbkNoYW5nZTogZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICAgICAgICB2YXIgX2EsIF9iLCBfYztcbiAgICAgICAgICAgIChfYSA9IHByb3BzLm9uQ2hhbmdlKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuY2FsbChwcm9wcywgZXZlbnQpO1xuICAgICAgICAgICAgc2V0SW5wdXRWYWx1ZShldmVudC50YXJnZXQudmFsdWUpO1xuICAgICAgICAgICAgKF9jID0gKF9iID0gb3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLmNhbGxiYWNrcykgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLm9uUXVlcnlDaGFuZ2UpID09PSBudWxsIHx8IF9jID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYy5jYWxsKF9iLCBldmVudC50YXJnZXQudmFsdWUpO1xuICAgICAgICB9LCBvbktleURvd246IGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICAgICAgdmFyIF9hO1xuICAgICAgICAgICAgKF9hID0gcHJvcHMub25LZXlEb3duKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuY2FsbChwcm9wcywgZXZlbnQpO1xuICAgICAgICAgICAgaWYgKGN1cnJlbnRSb290QWN0aW9uSWQgJiYgIXNlYXJjaCAmJiBldmVudC5rZXkgPT09IFwiQmFja3NwYWNlXCIpIHtcbiAgICAgICAgICAgICAgICB2YXIgcGFyZW50XzEgPSBhY3Rpb25zW2N1cnJlbnRSb290QWN0aW9uSWRdLnBhcmVudDtcbiAgICAgICAgICAgICAgICBxdWVyeS5zZXRDdXJyZW50Um9vdEFjdGlvbihwYXJlbnRfMSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0gfSkpKTtcbn1cbmV4cG9ydHMuS0JhclNlYXJjaCA9IEtCYXJTZWFyY2g7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/lib/KBarSearch.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/kbar/lib/action/ActionImpl.js":
/*!****************************************************!*\
  !*** ./node_modules/kbar/lib/action/ActionImpl.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ActionImpl = void 0;\nvar tiny_invariant_1 = __importDefault(__webpack_require__(/*! tiny-invariant */ \"(ssr)/./node_modules/tiny-invariant/dist/tiny-invariant.cjs.js\"));\nvar Command_1 = __webpack_require__(/*! ./Command */ \"(ssr)/./node_modules/kbar/lib/action/Command.js\");\nvar utils_1 = __webpack_require__(/*! ../utils */ \"(ssr)/./node_modules/kbar/lib/utils.js\");\n/**\n * Extends the configured keywords to include the section\n * This allows section names to be searched for.\n */\nvar extendKeywords = function (_a) {\n    var _b = _a.keywords, keywords = _b === void 0 ? \"\" : _b, _c = _a.section, section = _c === void 0 ? \"\" : _c;\n    return (keywords + \" \" + (typeof section === \"string\" ? section : section.name)).trim();\n};\nvar ActionImpl = /** @class */ (function () {\n    function ActionImpl(action, options) {\n        var _this = this;\n        var _a;\n        this.priority = utils_1.Priority.NORMAL;\n        this.ancestors = [];\n        this.children = [];\n        Object.assign(this, action);\n        this.id = action.id;\n        this.name = action.name;\n        this.keywords = extendKeywords(action);\n        var perform = action.perform;\n        this.command =\n            perform &&\n                new Command_1.Command({\n                    perform: function () { return perform(_this); },\n                }, {\n                    history: options.history,\n                });\n        // Backwards compatibility\n        this.perform = (_a = this.command) === null || _a === void 0 ? void 0 : _a.perform;\n        if (action.parent) {\n            var parentActionImpl = options.store[action.parent];\n            (0, tiny_invariant_1.default)(parentActionImpl, \"attempted to create an action whos parent: \" + action.parent + \" does not exist in the store.\");\n            parentActionImpl.addChild(this);\n        }\n    }\n    ActionImpl.prototype.addChild = function (childActionImpl) {\n        // add all ancestors for the child action\n        childActionImpl.ancestors.unshift(this);\n        var parent = this.parentActionImpl;\n        while (parent) {\n            childActionImpl.ancestors.unshift(parent);\n            parent = parent.parentActionImpl;\n        }\n        // we ensure that order of adding always goes\n        // parent -> children, so no need to recurse\n        this.children.push(childActionImpl);\n    };\n    ActionImpl.prototype.removeChild = function (actionImpl) {\n        var _this = this;\n        // recursively remove all children\n        var index = this.children.indexOf(actionImpl);\n        if (index !== -1) {\n            this.children.splice(index, 1);\n        }\n        if (actionImpl.children) {\n            actionImpl.children.forEach(function (child) {\n                _this.removeChild(child);\n            });\n        }\n    };\n    Object.defineProperty(ActionImpl.prototype, \"parentActionImpl\", {\n        // easily access parentActionImpl after creation\n        get: function () {\n            return this.ancestors[this.ancestors.length - 1];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ActionImpl.create = function (action, options) {\n        return new ActionImpl(action, options);\n    };\n    return ActionImpl;\n}());\nexports.ActionImpl = ActionImpl;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMva2Jhci9saWIvYWN0aW9uL0FjdGlvbkltcGwuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0I7QUFDbEIsdUNBQXVDLG1CQUFPLENBQUMsc0ZBQWdCO0FBQy9ELGdCQUFnQixtQkFBTyxDQUFDLGtFQUFXO0FBQ25DLGNBQWMsbUJBQU8sQ0FBQyx3REFBVTtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDLHdCQUF3QjtBQUNuRSxpQkFBaUI7QUFDakI7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELGtCQUFrQiIsInNvdXJjZXMiOlsid2VicGFjazovL2dhZGFpLXJhY29tcC8uL25vZGVfbW9kdWxlcy9rYmFyL2xpYi9hY3Rpb24vQWN0aW9uSW1wbC5qcz83YmU1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5BY3Rpb25JbXBsID0gdm9pZCAwO1xudmFyIHRpbnlfaW52YXJpYW50XzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcInRpbnktaW52YXJpYW50XCIpKTtcbnZhciBDb21tYW5kXzEgPSByZXF1aXJlKFwiLi9Db21tYW5kXCIpO1xudmFyIHV0aWxzXzEgPSByZXF1aXJlKFwiLi4vdXRpbHNcIik7XG4vKipcbiAqIEV4dGVuZHMgdGhlIGNvbmZpZ3VyZWQga2V5d29yZHMgdG8gaW5jbHVkZSB0aGUgc2VjdGlvblxuICogVGhpcyBhbGxvd3Mgc2VjdGlvbiBuYW1lcyB0byBiZSBzZWFyY2hlZCBmb3IuXG4gKi9cbnZhciBleHRlbmRLZXl3b3JkcyA9IGZ1bmN0aW9uIChfYSkge1xuICAgIHZhciBfYiA9IF9hLmtleXdvcmRzLCBrZXl3b3JkcyA9IF9iID09PSB2b2lkIDAgPyBcIlwiIDogX2IsIF9jID0gX2Euc2VjdGlvbiwgc2VjdGlvbiA9IF9jID09PSB2b2lkIDAgPyBcIlwiIDogX2M7XG4gICAgcmV0dXJuIChrZXl3b3JkcyArIFwiIFwiICsgKHR5cGVvZiBzZWN0aW9uID09PSBcInN0cmluZ1wiID8gc2VjdGlvbiA6IHNlY3Rpb24ubmFtZSkpLnRyaW0oKTtcbn07XG52YXIgQWN0aW9uSW1wbCA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBBY3Rpb25JbXBsKGFjdGlvbiwgb3B0aW9ucykge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICB2YXIgX2E7XG4gICAgICAgIHRoaXMucHJpb3JpdHkgPSB1dGlsc18xLlByaW9yaXR5Lk5PUk1BTDtcbiAgICAgICAgdGhpcy5hbmNlc3RvcnMgPSBbXTtcbiAgICAgICAgdGhpcy5jaGlsZHJlbiA9IFtdO1xuICAgICAgICBPYmplY3QuYXNzaWduKHRoaXMsIGFjdGlvbik7XG4gICAgICAgIHRoaXMuaWQgPSBhY3Rpb24uaWQ7XG4gICAgICAgIHRoaXMubmFtZSA9IGFjdGlvbi5uYW1lO1xuICAgICAgICB0aGlzLmtleXdvcmRzID0gZXh0ZW5kS2V5d29yZHMoYWN0aW9uKTtcbiAgICAgICAgdmFyIHBlcmZvcm0gPSBhY3Rpb24ucGVyZm9ybTtcbiAgICAgICAgdGhpcy5jb21tYW5kID1cbiAgICAgICAgICAgIHBlcmZvcm0gJiZcbiAgICAgICAgICAgICAgICBuZXcgQ29tbWFuZF8xLkNvbW1hbmQoe1xuICAgICAgICAgICAgICAgICAgICBwZXJmb3JtOiBmdW5jdGlvbiAoKSB7IHJldHVybiBwZXJmb3JtKF90aGlzKTsgfSxcbiAgICAgICAgICAgICAgICB9LCB7XG4gICAgICAgICAgICAgICAgICAgIGhpc3Rvcnk6IG9wdGlvbnMuaGlzdG9yeSxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgLy8gQmFja3dhcmRzIGNvbXBhdGliaWxpdHlcbiAgICAgICAgdGhpcy5wZXJmb3JtID0gKF9hID0gdGhpcy5jb21tYW5kKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EucGVyZm9ybTtcbiAgICAgICAgaWYgKGFjdGlvbi5wYXJlbnQpIHtcbiAgICAgICAgICAgIHZhciBwYXJlbnRBY3Rpb25JbXBsID0gb3B0aW9ucy5zdG9yZVthY3Rpb24ucGFyZW50XTtcbiAgICAgICAgICAgICgwLCB0aW55X2ludmFyaWFudF8xLmRlZmF1bHQpKHBhcmVudEFjdGlvbkltcGwsIFwiYXR0ZW1wdGVkIHRvIGNyZWF0ZSBhbiBhY3Rpb24gd2hvcyBwYXJlbnQ6IFwiICsgYWN0aW9uLnBhcmVudCArIFwiIGRvZXMgbm90IGV4aXN0IGluIHRoZSBzdG9yZS5cIik7XG4gICAgICAgICAgICBwYXJlbnRBY3Rpb25JbXBsLmFkZENoaWxkKHRoaXMpO1xuICAgICAgICB9XG4gICAgfVxuICAgIEFjdGlvbkltcGwucHJvdG90eXBlLmFkZENoaWxkID0gZnVuY3Rpb24gKGNoaWxkQWN0aW9uSW1wbCkge1xuICAgICAgICAvLyBhZGQgYWxsIGFuY2VzdG9ycyBmb3IgdGhlIGNoaWxkIGFjdGlvblxuICAgICAgICBjaGlsZEFjdGlvbkltcGwuYW5jZXN0b3JzLnVuc2hpZnQodGhpcyk7XG4gICAgICAgIHZhciBwYXJlbnQgPSB0aGlzLnBhcmVudEFjdGlvbkltcGw7XG4gICAgICAgIHdoaWxlIChwYXJlbnQpIHtcbiAgICAgICAgICAgIGNoaWxkQWN0aW9uSW1wbC5hbmNlc3RvcnMudW5zaGlmdChwYXJlbnQpO1xuICAgICAgICAgICAgcGFyZW50ID0gcGFyZW50LnBhcmVudEFjdGlvbkltcGw7XG4gICAgICAgIH1cbiAgICAgICAgLy8gd2UgZW5zdXJlIHRoYXQgb3JkZXIgb2YgYWRkaW5nIGFsd2F5cyBnb2VzXG4gICAgICAgIC8vIHBhcmVudCAtPiBjaGlsZHJlbiwgc28gbm8gbmVlZCB0byByZWN1cnNlXG4gICAgICAgIHRoaXMuY2hpbGRyZW4ucHVzaChjaGlsZEFjdGlvbkltcGwpO1xuICAgIH07XG4gICAgQWN0aW9uSW1wbC5wcm90b3R5cGUucmVtb3ZlQ2hpbGQgPSBmdW5jdGlvbiAoYWN0aW9uSW1wbCkge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICAvLyByZWN1cnNpdmVseSByZW1vdmUgYWxsIGNoaWxkcmVuXG4gICAgICAgIHZhciBpbmRleCA9IHRoaXMuY2hpbGRyZW4uaW5kZXhPZihhY3Rpb25JbXBsKTtcbiAgICAgICAgaWYgKGluZGV4ICE9PSAtMSkge1xuICAgICAgICAgICAgdGhpcy5jaGlsZHJlbi5zcGxpY2UoaW5kZXgsIDEpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChhY3Rpb25JbXBsLmNoaWxkcmVuKSB7XG4gICAgICAgICAgICBhY3Rpb25JbXBsLmNoaWxkcmVuLmZvckVhY2goZnVuY3Rpb24gKGNoaWxkKSB7XG4gICAgICAgICAgICAgICAgX3RoaXMucmVtb3ZlQ2hpbGQoY2hpbGQpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShBY3Rpb25JbXBsLnByb3RvdHlwZSwgXCJwYXJlbnRBY3Rpb25JbXBsXCIsIHtcbiAgICAgICAgLy8gZWFzaWx5IGFjY2VzcyBwYXJlbnRBY3Rpb25JbXBsIGFmdGVyIGNyZWF0aW9uXG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuYW5jZXN0b3JzW3RoaXMuYW5jZXN0b3JzLmxlbmd0aCAtIDFdO1xuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gICAgQWN0aW9uSW1wbC5jcmVhdGUgPSBmdW5jdGlvbiAoYWN0aW9uLCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiBuZXcgQWN0aW9uSW1wbChhY3Rpb24sIG9wdGlvbnMpO1xuICAgIH07XG4gICAgcmV0dXJuIEFjdGlvbkltcGw7XG59KCkpO1xuZXhwb3J0cy5BY3Rpb25JbXBsID0gQWN0aW9uSW1wbDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/lib/action/ActionImpl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/kbar/lib/action/ActionInterface.js":
/*!*********************************************************!*\
  !*** ./node_modules/kbar/lib/action/ActionInterface.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ActionInterface = void 0;\nvar tiny_invariant_1 = __importDefault(__webpack_require__(/*! tiny-invariant */ \"(ssr)/./node_modules/tiny-invariant/dist/tiny-invariant.cjs.js\"));\nvar ActionImpl_1 = __webpack_require__(/*! ./ActionImpl */ \"(ssr)/./node_modules/kbar/lib/action/ActionImpl.js\");\nvar ActionInterface = /** @class */ (function () {\n    function ActionInterface(actions, options) {\n        if (actions === void 0) { actions = []; }\n        if (options === void 0) { options = {}; }\n        this.actions = {};\n        this.options = options;\n        this.add(actions);\n    }\n    ActionInterface.prototype.add = function (actions) {\n        for (var i = 0; i < actions.length; i++) {\n            var action = actions[i];\n            if (action.parent) {\n                (0, tiny_invariant_1.default)(this.actions[action.parent], \"Attempted to create action \\\"\" + action.name + \"\\\" without registering its parent \\\"\" + action.parent + \"\\\" first.\");\n            }\n            this.actions[action.id] = ActionImpl_1.ActionImpl.create(action, {\n                history: this.options.historyManager,\n                store: this.actions,\n            });\n        }\n        return __assign({}, this.actions);\n    };\n    ActionInterface.prototype.remove = function (actions) {\n        var _this = this;\n        actions.forEach(function (action) {\n            var actionImpl = _this.actions[action.id];\n            if (!actionImpl)\n                return;\n            var children = actionImpl.children;\n            while (children.length) {\n                var child = children.pop();\n                if (!child)\n                    return;\n                delete _this.actions[child.id];\n                if (child.parentActionImpl)\n                    child.parentActionImpl.removeChild(child);\n                if (child.children)\n                    children.push.apply(children, child.children);\n            }\n            if (actionImpl.parentActionImpl) {\n                actionImpl.parentActionImpl.removeChild(actionImpl);\n            }\n            delete _this.actions[action.id];\n        });\n        return __assign({}, this.actions);\n    };\n    return ActionInterface;\n}());\nexports.ActionInterface = ActionInterface;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMva2Jhci9saWIvYWN0aW9uL0FjdGlvbkludGVyZmFjZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSxpREFBaUQsT0FBTztBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsdUJBQXVCO0FBQ3ZCLHVDQUF1QyxtQkFBTyxDQUFDLHNGQUFnQjtBQUMvRCxtQkFBbUIsbUJBQU8sQ0FBQyx3RUFBYztBQUN6QztBQUNBO0FBQ0Esa0NBQWtDO0FBQ2xDLGtDQUFrQztBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLG9CQUFvQjtBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBLDBCQUEwQjtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCwwQkFBMEI7QUFDMUI7QUFDQTtBQUNBLENBQUM7QUFDRCx1QkFBdUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9nYWRhaS1yYWNvbXAvLi9ub2RlX21vZHVsZXMva2Jhci9saWIvYWN0aW9uL0FjdGlvbkludGVyZmFjZS5qcz82Yjg1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fYXNzaWduID0gKHRoaXMgJiYgdGhpcy5fX2Fzc2lnbikgfHwgZnVuY3Rpb24gKCkge1xuICAgIF9fYXNzaWduID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbih0KSB7XG4gICAgICAgIGZvciAodmFyIHMsIGkgPSAxLCBuID0gYXJndW1lbnRzLmxlbmd0aDsgaSA8IG47IGkrKykge1xuICAgICAgICAgICAgcyA9IGFyZ3VtZW50c1tpXTtcbiAgICAgICAgICAgIGZvciAodmFyIHAgaW4gcykgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCBwKSlcbiAgICAgICAgICAgICAgICB0W3BdID0gc1twXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdDtcbiAgICB9O1xuICAgIHJldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xufTtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQWN0aW9uSW50ZXJmYWNlID0gdm9pZCAwO1xudmFyIHRpbnlfaW52YXJpYW50XzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcInRpbnktaW52YXJpYW50XCIpKTtcbnZhciBBY3Rpb25JbXBsXzEgPSByZXF1aXJlKFwiLi9BY3Rpb25JbXBsXCIpO1xudmFyIEFjdGlvbkludGVyZmFjZSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBBY3Rpb25JbnRlcmZhY2UoYWN0aW9ucywgb3B0aW9ucykge1xuICAgICAgICBpZiAoYWN0aW9ucyA9PT0gdm9pZCAwKSB7IGFjdGlvbnMgPSBbXTsgfVxuICAgICAgICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7IG9wdGlvbnMgPSB7fTsgfVxuICAgICAgICB0aGlzLmFjdGlvbnMgPSB7fTtcbiAgICAgICAgdGhpcy5vcHRpb25zID0gb3B0aW9ucztcbiAgICAgICAgdGhpcy5hZGQoYWN0aW9ucyk7XG4gICAgfVxuICAgIEFjdGlvbkludGVyZmFjZS5wcm90b3R5cGUuYWRkID0gZnVuY3Rpb24gKGFjdGlvbnMpIHtcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBhY3Rpb25zLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICB2YXIgYWN0aW9uID0gYWN0aW9uc1tpXTtcbiAgICAgICAgICAgIGlmIChhY3Rpb24ucGFyZW50KSB7XG4gICAgICAgICAgICAgICAgKDAsIHRpbnlfaW52YXJpYW50XzEuZGVmYXVsdCkodGhpcy5hY3Rpb25zW2FjdGlvbi5wYXJlbnRdLCBcIkF0dGVtcHRlZCB0byBjcmVhdGUgYWN0aW9uIFxcXCJcIiArIGFjdGlvbi5uYW1lICsgXCJcXFwiIHdpdGhvdXQgcmVnaXN0ZXJpbmcgaXRzIHBhcmVudCBcXFwiXCIgKyBhY3Rpb24ucGFyZW50ICsgXCJcXFwiIGZpcnN0LlwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMuYWN0aW9uc1thY3Rpb24uaWRdID0gQWN0aW9uSW1wbF8xLkFjdGlvbkltcGwuY3JlYXRlKGFjdGlvbiwge1xuICAgICAgICAgICAgICAgIGhpc3Rvcnk6IHRoaXMub3B0aW9ucy5oaXN0b3J5TWFuYWdlcixcbiAgICAgICAgICAgICAgICBzdG9yZTogdGhpcy5hY3Rpb25zLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIF9fYXNzaWduKHt9LCB0aGlzLmFjdGlvbnMpO1xuICAgIH07XG4gICAgQWN0aW9uSW50ZXJmYWNlLnByb3RvdHlwZS5yZW1vdmUgPSBmdW5jdGlvbiAoYWN0aW9ucykge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICBhY3Rpb25zLmZvckVhY2goZnVuY3Rpb24gKGFjdGlvbikge1xuICAgICAgICAgICAgdmFyIGFjdGlvbkltcGwgPSBfdGhpcy5hY3Rpb25zW2FjdGlvbi5pZF07XG4gICAgICAgICAgICBpZiAoIWFjdGlvbkltcGwpXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgdmFyIGNoaWxkcmVuID0gYWN0aW9uSW1wbC5jaGlsZHJlbjtcbiAgICAgICAgICAgIHdoaWxlIChjaGlsZHJlbi5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICB2YXIgY2hpbGQgPSBjaGlsZHJlbi5wb3AoKTtcbiAgICAgICAgICAgICAgICBpZiAoIWNoaWxkKVxuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgZGVsZXRlIF90aGlzLmFjdGlvbnNbY2hpbGQuaWRdO1xuICAgICAgICAgICAgICAgIGlmIChjaGlsZC5wYXJlbnRBY3Rpb25JbXBsKVxuICAgICAgICAgICAgICAgICAgICBjaGlsZC5wYXJlbnRBY3Rpb25JbXBsLnJlbW92ZUNoaWxkKGNoaWxkKTtcbiAgICAgICAgICAgICAgICBpZiAoY2hpbGQuY2hpbGRyZW4pXG4gICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuLnB1c2guYXBwbHkoY2hpbGRyZW4sIGNoaWxkLmNoaWxkcmVuKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChhY3Rpb25JbXBsLnBhcmVudEFjdGlvbkltcGwpIHtcbiAgICAgICAgICAgICAgICBhY3Rpb25JbXBsLnBhcmVudEFjdGlvbkltcGwucmVtb3ZlQ2hpbGQoYWN0aW9uSW1wbCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBkZWxldGUgX3RoaXMuYWN0aW9uc1thY3Rpb24uaWRdO1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIF9fYXNzaWduKHt9LCB0aGlzLmFjdGlvbnMpO1xuICAgIH07XG4gICAgcmV0dXJuIEFjdGlvbkludGVyZmFjZTtcbn0oKSk7XG5leHBvcnRzLkFjdGlvbkludGVyZmFjZSA9IEFjdGlvbkludGVyZmFjZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/lib/action/ActionInterface.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/kbar/lib/action/Command.js":
/*!*************************************************!*\
  !*** ./node_modules/kbar/lib/action/Command.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Command = void 0;\nvar Command = /** @class */ (function () {\n    function Command(command, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        this.perform = function () {\n            var negate = command.perform();\n            // no need for history if non negatable\n            if (typeof negate !== \"function\")\n                return;\n            // return if no history enabled\n            var history = options.history;\n            if (!history)\n                return;\n            // since we are performing the same action, we'll clean up the\n            // previous call to the action and create a new history record\n            if (_this.historyItem) {\n                history.remove(_this.historyItem);\n            }\n            _this.historyItem = history.add({\n                perform: command.perform,\n                negate: negate,\n            });\n            _this.history = {\n                undo: function () { return history.undo(_this.historyItem); },\n                redo: function () { return history.redo(_this.historyItem); },\n            };\n        };\n    }\n    return Command;\n}());\nexports.Command = Command;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMva2Jhci9saWIvYWN0aW9uL0NvbW1hbmQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQztBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0Esb0NBQW9DLHlDQUF5QztBQUM3RSxvQ0FBb0MseUNBQXlDO0FBQzdFO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELGVBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9nYWRhaS1yYWNvbXAvLi9ub2RlX21vZHVsZXMva2Jhci9saWIvYWN0aW9uL0NvbW1hbmQuanM/ZmZlNiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQ29tbWFuZCA9IHZvaWQgMDtcbnZhciBDb21tYW5kID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIENvbW1hbmQoY29tbWFuZCwgb3B0aW9ucykge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7IG9wdGlvbnMgPSB7fTsgfVxuICAgICAgICB0aGlzLnBlcmZvcm0gPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgbmVnYXRlID0gY29tbWFuZC5wZXJmb3JtKCk7XG4gICAgICAgICAgICAvLyBubyBuZWVkIGZvciBoaXN0b3J5IGlmIG5vbiBuZWdhdGFibGVcbiAgICAgICAgICAgIGlmICh0eXBlb2YgbmVnYXRlICE9PSBcImZ1bmN0aW9uXCIpXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgLy8gcmV0dXJuIGlmIG5vIGhpc3RvcnkgZW5hYmxlZFxuICAgICAgICAgICAgdmFyIGhpc3RvcnkgPSBvcHRpb25zLmhpc3Rvcnk7XG4gICAgICAgICAgICBpZiAoIWhpc3RvcnkpXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgLy8gc2luY2Ugd2UgYXJlIHBlcmZvcm1pbmcgdGhlIHNhbWUgYWN0aW9uLCB3ZSdsbCBjbGVhbiB1cCB0aGVcbiAgICAgICAgICAgIC8vIHByZXZpb3VzIGNhbGwgdG8gdGhlIGFjdGlvbiBhbmQgY3JlYXRlIGEgbmV3IGhpc3RvcnkgcmVjb3JkXG4gICAgICAgICAgICBpZiAoX3RoaXMuaGlzdG9yeUl0ZW0pIHtcbiAgICAgICAgICAgICAgICBoaXN0b3J5LnJlbW92ZShfdGhpcy5oaXN0b3J5SXRlbSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBfdGhpcy5oaXN0b3J5SXRlbSA9IGhpc3RvcnkuYWRkKHtcbiAgICAgICAgICAgICAgICBwZXJmb3JtOiBjb21tYW5kLnBlcmZvcm0sXG4gICAgICAgICAgICAgICAgbmVnYXRlOiBuZWdhdGUsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIF90aGlzLmhpc3RvcnkgPSB7XG4gICAgICAgICAgICAgICAgdW5kbzogZnVuY3Rpb24gKCkgeyByZXR1cm4gaGlzdG9yeS51bmRvKF90aGlzLmhpc3RvcnlJdGVtKTsgfSxcbiAgICAgICAgICAgICAgICByZWRvOiBmdW5jdGlvbiAoKSB7IHJldHVybiBoaXN0b3J5LnJlZG8oX3RoaXMuaGlzdG9yeUl0ZW0pOyB9LFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfTtcbiAgICB9XG4gICAgcmV0dXJuIENvbW1hbmQ7XG59KCkpO1xuZXhwb3J0cy5Db21tYW5kID0gQ29tbWFuZDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/lib/action/Command.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/kbar/lib/action/HistoryImpl.js":
/*!*****************************************************!*\
  !*** ./node_modules/kbar/lib/action/HistoryImpl.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.history = exports.HistoryItemImpl = void 0;\nvar utils_1 = __webpack_require__(/*! ../utils */ \"(ssr)/./node_modules/kbar/lib/utils.js\");\nvar HistoryItemImpl = /** @class */ (function () {\n    function HistoryItemImpl(item) {\n        this.perform = item.perform;\n        this.negate = item.negate;\n    }\n    HistoryItemImpl.create = function (item) {\n        return new HistoryItemImpl(item);\n    };\n    return HistoryItemImpl;\n}());\nexports.HistoryItemImpl = HistoryItemImpl;\nvar HistoryImpl = /** @class */ (function () {\n    function HistoryImpl() {\n        this.undoStack = [];\n        this.redoStack = [];\n        if (!HistoryImpl.instance) {\n            HistoryImpl.instance = this;\n            this.init();\n        }\n        return HistoryImpl.instance;\n    }\n    HistoryImpl.prototype.init = function () {\n        var _this = this;\n        if (typeof window === \"undefined\")\n            return;\n        window.addEventListener(\"keydown\", function (event) {\n            var _a;\n            if ((!_this.redoStack.length && !_this.undoStack.length) ||\n                (0, utils_1.shouldRejectKeystrokes)()) {\n                return;\n            }\n            var key = (_a = event.key) === null || _a === void 0 ? void 0 : _a.toLowerCase();\n            if (event.metaKey && key === \"z\" && event.shiftKey) {\n                _this.redo();\n            }\n            else if (event.metaKey && key === \"z\") {\n                _this.undo();\n            }\n        });\n    };\n    HistoryImpl.prototype.add = function (item) {\n        var historyItem = HistoryItemImpl.create(item);\n        this.undoStack.push(historyItem);\n        return historyItem;\n    };\n    HistoryImpl.prototype.remove = function (item) {\n        var undoIndex = this.undoStack.findIndex(function (i) { return i === item; });\n        if (undoIndex !== -1) {\n            this.undoStack.splice(undoIndex, 1);\n            return;\n        }\n        var redoIndex = this.redoStack.findIndex(function (i) { return i === item; });\n        if (redoIndex !== -1) {\n            this.redoStack.splice(redoIndex, 1);\n        }\n    };\n    HistoryImpl.prototype.undo = function (item) {\n        // if not undoing a specific item, just undo the latest\n        if (!item) {\n            var item_1 = this.undoStack.pop();\n            if (!item_1)\n                return;\n            item_1 === null || item_1 === void 0 ? void 0 : item_1.negate();\n            this.redoStack.push(item_1);\n            return item_1;\n        }\n        // else undo the specific item\n        var index = this.undoStack.findIndex(function (i) { return i === item; });\n        if (index === -1)\n            return;\n        this.undoStack.splice(index, 1);\n        item.negate();\n        this.redoStack.push(item);\n        return item;\n    };\n    HistoryImpl.prototype.redo = function (item) {\n        if (!item) {\n            var item_2 = this.redoStack.pop();\n            if (!item_2)\n                return;\n            item_2 === null || item_2 === void 0 ? void 0 : item_2.perform();\n            this.undoStack.push(item_2);\n            return item_2;\n        }\n        var index = this.redoStack.findIndex(function (i) { return i === item; });\n        if (index === -1)\n            return;\n        this.redoStack.splice(index, 1);\n        item.perform();\n        this.undoStack.push(item);\n        return item;\n    };\n    HistoryImpl.prototype.reset = function () {\n        this.undoStack.splice(0);\n        this.redoStack.splice(0);\n    };\n    return HistoryImpl;\n}());\nvar history = new HistoryImpl();\nexports.history = history;\nObject.freeze(history);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMva2Jhci9saWIvYWN0aW9uL0hpc3RvcnlJbXBsLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGVBQWUsR0FBRyx1QkFBdUI7QUFDekMsY0FBYyxtQkFBTyxDQUFDLHdEQUFVO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCx1QkFBdUI7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0VBQWdFLG9CQUFvQjtBQUNwRjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdFQUFnRSxvQkFBb0I7QUFDcEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNERBQTRELG9CQUFvQjtBQUNoRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDREQUE0RCxvQkFBb0I7QUFDaEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0EsZUFBZTtBQUNmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZ2FkYWktcmFjb21wLy4vbm9kZV9tb2R1bGVzL2tiYXIvbGliL2FjdGlvbi9IaXN0b3J5SW1wbC5qcz84ODRiIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5oaXN0b3J5ID0gZXhwb3J0cy5IaXN0b3J5SXRlbUltcGwgPSB2b2lkIDA7XG52YXIgdXRpbHNfMSA9IHJlcXVpcmUoXCIuLi91dGlsc1wiKTtcbnZhciBIaXN0b3J5SXRlbUltcGwgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gSGlzdG9yeUl0ZW1JbXBsKGl0ZW0pIHtcbiAgICAgICAgdGhpcy5wZXJmb3JtID0gaXRlbS5wZXJmb3JtO1xuICAgICAgICB0aGlzLm5lZ2F0ZSA9IGl0ZW0ubmVnYXRlO1xuICAgIH1cbiAgICBIaXN0b3J5SXRlbUltcGwuY3JlYXRlID0gZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgICAgcmV0dXJuIG5ldyBIaXN0b3J5SXRlbUltcGwoaXRlbSk7XG4gICAgfTtcbiAgICByZXR1cm4gSGlzdG9yeUl0ZW1JbXBsO1xufSgpKTtcbmV4cG9ydHMuSGlzdG9yeUl0ZW1JbXBsID0gSGlzdG9yeUl0ZW1JbXBsO1xudmFyIEhpc3RvcnlJbXBsID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIEhpc3RvcnlJbXBsKCkge1xuICAgICAgICB0aGlzLnVuZG9TdGFjayA9IFtdO1xuICAgICAgICB0aGlzLnJlZG9TdGFjayA9IFtdO1xuICAgICAgICBpZiAoIUhpc3RvcnlJbXBsLmluc3RhbmNlKSB7XG4gICAgICAgICAgICBIaXN0b3J5SW1wbC5pbnN0YW5jZSA9IHRoaXM7XG4gICAgICAgICAgICB0aGlzLmluaXQoKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gSGlzdG9yeUltcGwuaW5zdGFuY2U7XG4gICAgfVxuICAgIEhpc3RvcnlJbXBsLnByb3RvdHlwZS5pbml0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICBpZiAodHlwZW9mIHdpbmRvdyA9PT0gXCJ1bmRlZmluZWRcIilcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICAgICAgdmFyIF9hO1xuICAgICAgICAgICAgaWYgKCghX3RoaXMucmVkb1N0YWNrLmxlbmd0aCAmJiAhX3RoaXMudW5kb1N0YWNrLmxlbmd0aCkgfHxcbiAgICAgICAgICAgICAgICAoMCwgdXRpbHNfMS5zaG91bGRSZWplY3RLZXlzdHJva2VzKSgpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdmFyIGtleSA9IChfYSA9IGV2ZW50LmtleSkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLnRvTG93ZXJDYXNlKCk7XG4gICAgICAgICAgICBpZiAoZXZlbnQubWV0YUtleSAmJiBrZXkgPT09IFwielwiICYmIGV2ZW50LnNoaWZ0S2V5KSB7XG4gICAgICAgICAgICAgICAgX3RoaXMucmVkbygpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoZXZlbnQubWV0YUtleSAmJiBrZXkgPT09IFwielwiKSB7XG4gICAgICAgICAgICAgICAgX3RoaXMudW5kbygpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9O1xuICAgIEhpc3RvcnlJbXBsLnByb3RvdHlwZS5hZGQgPSBmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgICB2YXIgaGlzdG9yeUl0ZW0gPSBIaXN0b3J5SXRlbUltcGwuY3JlYXRlKGl0ZW0pO1xuICAgICAgICB0aGlzLnVuZG9TdGFjay5wdXNoKGhpc3RvcnlJdGVtKTtcbiAgICAgICAgcmV0dXJuIGhpc3RvcnlJdGVtO1xuICAgIH07XG4gICAgSGlzdG9yeUltcGwucHJvdG90eXBlLnJlbW92ZSA9IGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICAgIHZhciB1bmRvSW5kZXggPSB0aGlzLnVuZG9TdGFjay5maW5kSW5kZXgoZnVuY3Rpb24gKGkpIHsgcmV0dXJuIGkgPT09IGl0ZW07IH0pO1xuICAgICAgICBpZiAodW5kb0luZGV4ICE9PSAtMSkge1xuICAgICAgICAgICAgdGhpcy51bmRvU3RhY2suc3BsaWNlKHVuZG9JbmRleCwgMSk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdmFyIHJlZG9JbmRleCA9IHRoaXMucmVkb1N0YWNrLmZpbmRJbmRleChmdW5jdGlvbiAoaSkgeyByZXR1cm4gaSA9PT0gaXRlbTsgfSk7XG4gICAgICAgIGlmIChyZWRvSW5kZXggIT09IC0xKSB7XG4gICAgICAgICAgICB0aGlzLnJlZG9TdGFjay5zcGxpY2UocmVkb0luZGV4LCAxKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgSGlzdG9yeUltcGwucHJvdG90eXBlLnVuZG8gPSBmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgICAvLyBpZiBub3QgdW5kb2luZyBhIHNwZWNpZmljIGl0ZW0sIGp1c3QgdW5kbyB0aGUgbGF0ZXN0XG4gICAgICAgIGlmICghaXRlbSkge1xuICAgICAgICAgICAgdmFyIGl0ZW1fMSA9IHRoaXMudW5kb1N0YWNrLnBvcCgpO1xuICAgICAgICAgICAgaWYgKCFpdGVtXzEpXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgaXRlbV8xID09PSBudWxsIHx8IGl0ZW1fMSA9PT0gdm9pZCAwID8gdm9pZCAwIDogaXRlbV8xLm5lZ2F0ZSgpO1xuICAgICAgICAgICAgdGhpcy5yZWRvU3RhY2sucHVzaChpdGVtXzEpO1xuICAgICAgICAgICAgcmV0dXJuIGl0ZW1fMTtcbiAgICAgICAgfVxuICAgICAgICAvLyBlbHNlIHVuZG8gdGhlIHNwZWNpZmljIGl0ZW1cbiAgICAgICAgdmFyIGluZGV4ID0gdGhpcy51bmRvU3RhY2suZmluZEluZGV4KGZ1bmN0aW9uIChpKSB7IHJldHVybiBpID09PSBpdGVtOyB9KTtcbiAgICAgICAgaWYgKGluZGV4ID09PSAtMSlcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgdGhpcy51bmRvU3RhY2suc3BsaWNlKGluZGV4LCAxKTtcbiAgICAgICAgaXRlbS5uZWdhdGUoKTtcbiAgICAgICAgdGhpcy5yZWRvU3RhY2sucHVzaChpdGVtKTtcbiAgICAgICAgcmV0dXJuIGl0ZW07XG4gICAgfTtcbiAgICBIaXN0b3J5SW1wbC5wcm90b3R5cGUucmVkbyA9IGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICAgIGlmICghaXRlbSkge1xuICAgICAgICAgICAgdmFyIGl0ZW1fMiA9IHRoaXMucmVkb1N0YWNrLnBvcCgpO1xuICAgICAgICAgICAgaWYgKCFpdGVtXzIpXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgaXRlbV8yID09PSBudWxsIHx8IGl0ZW1fMiA9PT0gdm9pZCAwID8gdm9pZCAwIDogaXRlbV8yLnBlcmZvcm0oKTtcbiAgICAgICAgICAgIHRoaXMudW5kb1N0YWNrLnB1c2goaXRlbV8yKTtcbiAgICAgICAgICAgIHJldHVybiBpdGVtXzI7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGluZGV4ID0gdGhpcy5yZWRvU3RhY2suZmluZEluZGV4KGZ1bmN0aW9uIChpKSB7IHJldHVybiBpID09PSBpdGVtOyB9KTtcbiAgICAgICAgaWYgKGluZGV4ID09PSAtMSlcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgdGhpcy5yZWRvU3RhY2suc3BsaWNlKGluZGV4LCAxKTtcbiAgICAgICAgaXRlbS5wZXJmb3JtKCk7XG4gICAgICAgIHRoaXMudW5kb1N0YWNrLnB1c2goaXRlbSk7XG4gICAgICAgIHJldHVybiBpdGVtO1xuICAgIH07XG4gICAgSGlzdG9yeUltcGwucHJvdG90eXBlLnJlc2V0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLnVuZG9TdGFjay5zcGxpY2UoMCk7XG4gICAgICAgIHRoaXMucmVkb1N0YWNrLnNwbGljZSgwKTtcbiAgICB9O1xuICAgIHJldHVybiBIaXN0b3J5SW1wbDtcbn0oKSk7XG52YXIgaGlzdG9yeSA9IG5ldyBIaXN0b3J5SW1wbCgpO1xuZXhwb3J0cy5oaXN0b3J5ID0gaGlzdG9yeTtcbk9iamVjdC5mcmVlemUoaGlzdG9yeSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/lib/action/HistoryImpl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/kbar/lib/action/index.js":
/*!***********************************************!*\
  !*** ./node_modules/kbar/lib/action/index.js ***!
  \***********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./ActionInterface */ \"(ssr)/./node_modules/kbar/lib/action/ActionInterface.js\"), exports);\n__exportStar(__webpack_require__(/*! ./ActionImpl */ \"(ssr)/./node_modules/kbar/lib/action/ActionImpl.js\"), exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMva2Jhci9saWIvYWN0aW9uL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLG1DQUFtQyxvQ0FBb0MsZ0JBQWdCO0FBQ3ZGLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxhQUFhLG1CQUFPLENBQUMsa0ZBQW1CO0FBQ3hDLGFBQWEsbUJBQU8sQ0FBQyx3RUFBYyIsInNvdXJjZXMiOlsid2VicGFjazovL2dhZGFpLXJhY29tcC8uL25vZGVfbW9kdWxlcy9rYmFyL2xpYi9hY3Rpb24vaW5kZXguanM/YmI2MyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9KTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19leHBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2V4cG9ydFN0YXIpIHx8IGZ1bmN0aW9uKG0sIGV4cG9ydHMpIHtcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmIChwICE9PSBcImRlZmF1bHRcIiAmJiAhT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGV4cG9ydHMsIHApKSBfX2NyZWF0ZUJpbmRpbmcoZXhwb3J0cywgbSwgcCk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL0FjdGlvbkludGVyZmFjZVwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vQWN0aW9uSW1wbFwiKSwgZXhwb3J0cyk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/lib/action/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/kbar/lib/index.js":
/*!****************************************!*\
  !*** ./node_modules/kbar/lib/index.js ***!
  \****************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Priority = exports.createAction = void 0;\nvar utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/kbar/lib/utils.js\");\nObject.defineProperty(exports, \"createAction\", ({ enumerable: true, get: function () { return utils_1.createAction; } }));\nObject.defineProperty(exports, \"Priority\", ({ enumerable: true, get: function () { return utils_1.Priority; } }));\n__exportStar(__webpack_require__(/*! ./useMatches */ \"(ssr)/./node_modules/kbar/lib/useMatches.js\"), exports);\n__exportStar(__webpack_require__(/*! ./KBarPortal */ \"(ssr)/./node_modules/kbar/lib/KBarPortal.js\"), exports);\n__exportStar(__webpack_require__(/*! ./KBarPositioner */ \"(ssr)/./node_modules/kbar/lib/KBarPositioner.js\"), exports);\n__exportStar(__webpack_require__(/*! ./KBarSearch */ \"(ssr)/./node_modules/kbar/lib/KBarSearch.js\"), exports);\n__exportStar(__webpack_require__(/*! ./KBarResults */ \"(ssr)/./node_modules/kbar/lib/KBarResults.js\"), exports);\n__exportStar(__webpack_require__(/*! ./useKBar */ \"(ssr)/./node_modules/kbar/lib/useKBar.js\"), exports);\n__exportStar(__webpack_require__(/*! ./useRegisterActions */ \"(ssr)/./node_modules/kbar/lib/useRegisterActions.js\"), exports);\n__exportStar(__webpack_require__(/*! ./KBarContextProvider */ \"(ssr)/./node_modules/kbar/lib/KBarContextProvider.js\"), exports);\n__exportStar(__webpack_require__(/*! ./KBarAnimator */ \"(ssr)/./node_modules/kbar/lib/KBarAnimator.js\"), exports);\n__exportStar(__webpack_require__(/*! ./types */ \"(ssr)/./node_modules/kbar/lib/types.js\"), exports);\n__exportStar(__webpack_require__(/*! ./action */ \"(ssr)/./node_modules/kbar/lib/action/index.js\"), exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMva2Jhci9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsbUNBQW1DLG9DQUFvQyxnQkFBZ0I7QUFDdkYsQ0FBQztBQUNEO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGdCQUFnQixHQUFHLG9CQUFvQjtBQUN2QyxjQUFjLG1CQUFPLENBQUMsdURBQVM7QUFDL0IsZ0RBQStDLEVBQUUscUNBQXFDLGdDQUFnQyxFQUFDO0FBQ3ZILDRDQUEyQyxFQUFFLHFDQUFxQyw0QkFBNEIsRUFBQztBQUMvRyxhQUFhLG1CQUFPLENBQUMsaUVBQWM7QUFDbkMsYUFBYSxtQkFBTyxDQUFDLGlFQUFjO0FBQ25DLGFBQWEsbUJBQU8sQ0FBQyx5RUFBa0I7QUFDdkMsYUFBYSxtQkFBTyxDQUFDLGlFQUFjO0FBQ25DLGFBQWEsbUJBQU8sQ0FBQyxtRUFBZTtBQUNwQyxhQUFhLG1CQUFPLENBQUMsMkRBQVc7QUFDaEMsYUFBYSxtQkFBTyxDQUFDLGlGQUFzQjtBQUMzQyxhQUFhLG1CQUFPLENBQUMsbUZBQXVCO0FBQzVDLGFBQWEsbUJBQU8sQ0FBQyxxRUFBZ0I7QUFDckMsYUFBYSxtQkFBTyxDQUFDLHVEQUFTO0FBQzlCLGFBQWEsbUJBQU8sQ0FBQywrREFBVSIsInNvdXJjZXMiOlsid2VicGFjazovL2dhZGFpLXJhY29tcC8uL25vZGVfbW9kdWxlcy9rYmFyL2xpYi9pbmRleC5qcz9mNDZmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH0pO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX2V4cG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9fZXhwb3J0U3RhcikgfHwgZnVuY3Rpb24obSwgZXhwb3J0cykge1xuICAgIGZvciAodmFyIHAgaW4gbSkgaWYgKHAgIT09IFwiZGVmYXVsdFwiICYmICFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZXhwb3J0cywgcCkpIF9fY3JlYXRlQmluZGluZyhleHBvcnRzLCBtLCBwKTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlByaW9yaXR5ID0gZXhwb3J0cy5jcmVhdGVBY3Rpb24gPSB2b2lkIDA7XG52YXIgdXRpbHNfMSA9IHJlcXVpcmUoXCIuL3V0aWxzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiY3JlYXRlQWN0aW9uXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiB1dGlsc18xLmNyZWF0ZUFjdGlvbjsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlByaW9yaXR5XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiB1dGlsc18xLlByaW9yaXR5OyB9IH0pO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3VzZU1hdGNoZXNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL0tCYXJQb3J0YWxcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL0tCYXJQb3NpdGlvbmVyXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9LQmFyU2VhcmNoXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9LQmFyUmVzdWx0c1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdXNlS0JhclwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdXNlUmVnaXN0ZXJBY3Rpb25zXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9LQmFyQ29udGV4dFByb3ZpZGVyXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9LQmFyQW5pbWF0b3JcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3R5cGVzXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9hY3Rpb25cIiksIGV4cG9ydHMpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/lib/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/kbar/lib/tinykeys.js":
/*!*******************************************!*\
  !*** ./node_modules/kbar/lib/tinykeys.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Fixes special character issues; `?` -> `shift+/` + build issue\n// https://github.com/jamiebuilds/tinykeys\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n/**\n * These are the modifier keys that change the meaning of keybindings.\n *\n * Note: Ignoring \"AltGraph\" because it is covered by the others.\n */\nvar KEYBINDING_MODIFIER_KEYS = [\"Shift\", \"Meta\", \"Alt\", \"Control\"];\n/**\n * Keybinding sequences should timeout if individual key presses are more than\n * 1s apart by default.\n */\nvar DEFAULT_TIMEOUT = 1000;\n/**\n * Keybinding sequences should bind to this event by default.\n */\nvar DEFAULT_EVENT = \"keydown\";\n/**\n * An alias for creating platform-specific keybinding aliases.\n */\nvar MOD = typeof navigator === \"object\" &&\n    /Mac|iPod|iPhone|iPad/.test(navigator.platform)\n    ? \"Meta\"\n    : \"Control\";\n/**\n * There's a bug in Chrome that causes event.getModifierState not to exist on\n * KeyboardEvent's for F1/F2/etc keys.\n */\nfunction getModifierState(event, mod) {\n    return typeof event.getModifierState === \"function\"\n        ? event.getModifierState(mod)\n        : false;\n}\n/**\n * Parses a \"Key Binding String\" into its parts\n *\n * grammar    = `<sequence>`\n * <sequence> = `<press> <press> <press> ...`\n * <press>    = `<key>` or `<mods>+<key>`\n * <mods>     = `<mod>+<mod>+...`\n */\nfunction parse(str) {\n    return str\n        .trim()\n        .split(\" \")\n        .map(function (press) {\n        var mods = press.split(/\\b\\+/);\n        var key = mods.pop();\n        mods = mods.map(function (mod) { return (mod === \"$mod\" ? MOD : mod); });\n        return [mods, key];\n    });\n}\n/**\n * This tells us if a series of events matches a key binding sequence either\n * partially or exactly.\n */\nfunction match(event, press) {\n    // Special characters; `?` `!`\n    if (/^[^A-Za-z0-9]$/.test(event.key) && press[1] === event.key) {\n        return true;\n    }\n    // prettier-ignore\n    return !(\n    // Allow either the `event.key` or the `event.code`\n    // MDN event.key: https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key\n    // MDN event.code: https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/code\n    (press[1].toUpperCase() !== event.key.toUpperCase() &&\n        press[1] !== event.code) ||\n        // Ensure all the modifiers in the keybinding are pressed.\n        press[0].find(function (mod) {\n            return !getModifierState(event, mod);\n        }) ||\n        // KEYBINDING_MODIFIER_KEYS (Shift/Control/etc) change the meaning of a\n        // keybinding. So if they are pressed but aren't part of the current\n        // keybinding press, then we don't have a match.\n        KEYBINDING_MODIFIER_KEYS.find(function (mod) {\n            return !press[0].includes(mod) && press[1] !== mod && getModifierState(event, mod);\n        }));\n}\n/**\n * Subscribes to keybindings.\n *\n * Returns an unsubscribe method.\n *\n * @example\n * ```js\n * import keybindings from \"../src/keybindings\"\n *\n * keybindings(window, {\n * \t\"Shift+d\": () => {\n * \t\talert(\"The 'Shift' and 'd' keys were pressed at the same time\")\n * \t},\n * \t\"y e e t\": () => {\n * \t\talert(\"The keys 'y', 'e', 'e', and 't' were pressed in order\")\n * \t},\n * \t\"$mod+d\": () => {\n * \t\talert(\"Either 'Control+d' or 'Meta+d' were pressed\")\n * \t},\n * })\n * ```\n */\nfunction keybindings(target, keyBindingMap, options) {\n    var _a, _b;\n    if (options === void 0) { options = {}; }\n    var timeout = (_a = options.timeout) !== null && _a !== void 0 ? _a : DEFAULT_TIMEOUT;\n    var event = (_b = options.event) !== null && _b !== void 0 ? _b : DEFAULT_EVENT;\n    var keyBindings = Object.keys(keyBindingMap).map(function (key) {\n        return [parse(key), keyBindingMap[key]];\n    });\n    var possibleMatches = new Map();\n    var timer = null;\n    var onKeyEvent = function (event) {\n        // Ensure and stop any event that isn't a full keyboard event.\n        // Autocomplete option navigation and selection would fire a instanceof Event,\n        // instead of the expected KeyboardEvent\n        if (!(event instanceof KeyboardEvent)) {\n            return;\n        }\n        keyBindings.forEach(function (keyBinding) {\n            var sequence = keyBinding[0];\n            var callback = keyBinding[1];\n            var prev = possibleMatches.get(sequence);\n            var remainingExpectedPresses = prev ? prev : sequence;\n            var currentExpectedPress = remainingExpectedPresses[0];\n            var matches = match(event, currentExpectedPress);\n            if (!matches) {\n                // Modifier keydown events shouldn't break sequences\n                // Note: This works because:\n                // - non-modifiers will always return false\n                // - if the current keypress is a modifier then it will return true when we check its state\n                // MDN: https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/getModifierState\n                if (!getModifierState(event, event.key)) {\n                    possibleMatches.delete(sequence);\n                }\n            }\n            else if (remainingExpectedPresses.length > 1) {\n                possibleMatches.set(sequence, remainingExpectedPresses.slice(1));\n            }\n            else {\n                possibleMatches.delete(sequence);\n                callback(event);\n            }\n        });\n        if (timer) {\n            clearTimeout(timer);\n        }\n        // @ts-ignore\n        timer = setTimeout(possibleMatches.clear.bind(possibleMatches), timeout);\n    };\n    target.addEventListener(event, onKeyEvent);\n    return function () {\n        target.removeEventListener(event, onKeyEvent);\n    };\n}\nexports[\"default\"] = keybindings;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/lib/tinykeys.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/kbar/lib/types.js":
/*!****************************************!*\
  !*** ./node_modules/kbar/lib/types.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.VisualState = void 0;\nvar VisualState;\n(function (VisualState) {\n    VisualState[\"animatingIn\"] = \"animating-in\";\n    VisualState[\"showing\"] = \"showing\";\n    VisualState[\"animatingOut\"] = \"animating-out\";\n    VisualState[\"hidden\"] = \"hidden\";\n})(VisualState = exports.VisualState || (exports.VisualState = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMva2Jhci9saWIvdHlwZXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsd0NBQXdDLG1CQUFtQixLQUFLIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZ2FkYWktcmFjb21wLy4vbm9kZV9tb2R1bGVzL2tiYXIvbGliL3R5cGVzLmpzPzljMzIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlZpc3VhbFN0YXRlID0gdm9pZCAwO1xudmFyIFZpc3VhbFN0YXRlO1xuKGZ1bmN0aW9uIChWaXN1YWxTdGF0ZSkge1xuICAgIFZpc3VhbFN0YXRlW1wiYW5pbWF0aW5nSW5cIl0gPSBcImFuaW1hdGluZy1pblwiO1xuICAgIFZpc3VhbFN0YXRlW1wic2hvd2luZ1wiXSA9IFwic2hvd2luZ1wiO1xuICAgIFZpc3VhbFN0YXRlW1wiYW5pbWF0aW5nT3V0XCJdID0gXCJhbmltYXRpbmctb3V0XCI7XG4gICAgVmlzdWFsU3RhdGVbXCJoaWRkZW5cIl0gPSBcImhpZGRlblwiO1xufSkoVmlzdWFsU3RhdGUgPSBleHBvcnRzLlZpc3VhbFN0YXRlIHx8IChleHBvcnRzLlZpc3VhbFN0YXRlID0ge30pKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/lib/types.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/kbar/lib/useKBar.js":
/*!******************************************!*\
  !*** ./node_modules/kbar/lib/useKBar.js ***!
  \******************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.useKBar = void 0;\nvar React = __importStar(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nvar KBarContextProvider_1 = __webpack_require__(/*! ./KBarContextProvider */ \"(ssr)/./node_modules/kbar/lib/KBarContextProvider.js\");\nfunction useKBar(collector) {\n    var _a = React.useContext(KBarContextProvider_1.KBarContext), query = _a.query, getState = _a.getState, subscribe = _a.subscribe, options = _a.options;\n    var collected = React.useRef(collector === null || collector === void 0 ? void 0 : collector(getState()));\n    var collectorRef = React.useRef(collector);\n    var onCollect = React.useCallback(function (collected) { return (__assign(__assign({}, collected), { query: query, options: options })); }, [query, options]);\n    var _b = React.useState(onCollect(collected.current)), render = _b[0], setRender = _b[1];\n    React.useEffect(function () {\n        var unsubscribe;\n        if (collectorRef.current) {\n            unsubscribe = subscribe(function (current) { return collectorRef.current(current); }, function (collected) { return setRender(onCollect(collected)); });\n        }\n        return function () {\n            if (unsubscribe) {\n                unsubscribe();\n            }\n        };\n    }, [onCollect, subscribe]);\n    return render;\n}\nexports.useKBar = useKBar;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMva2Jhci9saWIvdXNlS0Jhci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSxpREFBaUQsT0FBTztBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyxvQ0FBb0MsZ0JBQWdCO0FBQ3ZGLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0EsMENBQTBDLDRCQUE0QjtBQUN0RSxDQUFDO0FBQ0Q7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZUFBZTtBQUNmLHlCQUF5QixtQkFBTyxDQUFDLHdHQUFPO0FBQ3hDLDRCQUE0QixtQkFBTyxDQUFDLG1GQUF1QjtBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZEQUE2RCw0QkFBNEIsZ0JBQWdCLGdDQUFnQyxLQUFLO0FBQzlJO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseURBQXlELHVDQUF1Qyx5QkFBeUIseUNBQXlDO0FBQ2xLO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsZUFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL2dhZGFpLXJhY29tcC8uL25vZGVfbW9kdWxlcy9rYmFyL2xpYi91c2VLQmFyLmpzPzU2YzIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19hc3NpZ24gPSAodGhpcyAmJiB0aGlzLl9fYXNzaWduKSB8fCBmdW5jdGlvbiAoKSB7XG4gICAgX19hc3NpZ24gPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uKHQpIHtcbiAgICAgICAgZm9yICh2YXIgcywgaSA9IDEsIG4gPSBhcmd1bWVudHMubGVuZ3RoOyBpIDwgbjsgaSsrKSB7XG4gICAgICAgICAgICBzID0gYXJndW1lbnRzW2ldO1xuICAgICAgICAgICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApKVxuICAgICAgICAgICAgICAgIHRbcF0gPSBzW3BdO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0O1xuICAgIH07XG4gICAgcmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG59O1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH0pO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX3NldE1vZHVsZURlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9fc2V0TW9kdWxlRGVmYXVsdCkgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgdikge1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBcImRlZmF1bHRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdiB9KTtcbn0pIDogZnVuY3Rpb24obywgdikge1xuICAgIG9bXCJkZWZhdWx0XCJdID0gdjtcbn0pO1xudmFyIF9faW1wb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnRTdGFyKSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgaWYgKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgcmV0dXJuIG1vZDtcbiAgICB2YXIgcmVzdWx0ID0ge307XG4gICAgaWYgKG1vZCAhPSBudWxsKSBmb3IgKHZhciBrIGluIG1vZCkgaWYgKGsgIT09IFwiZGVmYXVsdFwiICYmIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChtb2QsIGspKSBfX2NyZWF0ZUJpbmRpbmcocmVzdWx0LCBtb2QsIGspO1xuICAgIF9fc2V0TW9kdWxlRGVmYXVsdChyZXN1bHQsIG1vZCk7XG4gICAgcmV0dXJuIHJlc3VsdDtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnVzZUtCYXIgPSB2b2lkIDA7XG52YXIgUmVhY3QgPSBfX2ltcG9ydFN0YXIocmVxdWlyZShcInJlYWN0XCIpKTtcbnZhciBLQmFyQ29udGV4dFByb3ZpZGVyXzEgPSByZXF1aXJlKFwiLi9LQmFyQ29udGV4dFByb3ZpZGVyXCIpO1xuZnVuY3Rpb24gdXNlS0Jhcihjb2xsZWN0b3IpIHtcbiAgICB2YXIgX2EgPSBSZWFjdC51c2VDb250ZXh0KEtCYXJDb250ZXh0UHJvdmlkZXJfMS5LQmFyQ29udGV4dCksIHF1ZXJ5ID0gX2EucXVlcnksIGdldFN0YXRlID0gX2EuZ2V0U3RhdGUsIHN1YnNjcmliZSA9IF9hLnN1YnNjcmliZSwgb3B0aW9ucyA9IF9hLm9wdGlvbnM7XG4gICAgdmFyIGNvbGxlY3RlZCA9IFJlYWN0LnVzZVJlZihjb2xsZWN0b3IgPT09IG51bGwgfHwgY29sbGVjdG9yID09PSB2b2lkIDAgPyB2b2lkIDAgOiBjb2xsZWN0b3IoZ2V0U3RhdGUoKSkpO1xuICAgIHZhciBjb2xsZWN0b3JSZWYgPSBSZWFjdC51c2VSZWYoY29sbGVjdG9yKTtcbiAgICB2YXIgb25Db2xsZWN0ID0gUmVhY3QudXNlQ2FsbGJhY2soZnVuY3Rpb24gKGNvbGxlY3RlZCkgeyByZXR1cm4gKF9fYXNzaWduKF9fYXNzaWduKHt9LCBjb2xsZWN0ZWQpLCB7IHF1ZXJ5OiBxdWVyeSwgb3B0aW9uczogb3B0aW9ucyB9KSk7IH0sIFtxdWVyeSwgb3B0aW9uc10pO1xuICAgIHZhciBfYiA9IFJlYWN0LnVzZVN0YXRlKG9uQ29sbGVjdChjb2xsZWN0ZWQuY3VycmVudCkpLCByZW5kZXIgPSBfYlswXSwgc2V0UmVuZGVyID0gX2JbMV07XG4gICAgUmVhY3QudXNlRWZmZWN0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIHVuc3Vic2NyaWJlO1xuICAgICAgICBpZiAoY29sbGVjdG9yUmVmLmN1cnJlbnQpIHtcbiAgICAgICAgICAgIHVuc3Vic2NyaWJlID0gc3Vic2NyaWJlKGZ1bmN0aW9uIChjdXJyZW50KSB7IHJldHVybiBjb2xsZWN0b3JSZWYuY3VycmVudChjdXJyZW50KTsgfSwgZnVuY3Rpb24gKGNvbGxlY3RlZCkgeyByZXR1cm4gc2V0UmVuZGVyKG9uQ29sbGVjdChjb2xsZWN0ZWQpKTsgfSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGlmICh1bnN1YnNjcmliZSkge1xuICAgICAgICAgICAgICAgIHVuc3Vic2NyaWJlKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgfSwgW29uQ29sbGVjdCwgc3Vic2NyaWJlXSk7XG4gICAgcmV0dXJuIHJlbmRlcjtcbn1cbmV4cG9ydHMudXNlS0JhciA9IHVzZUtCYXI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/lib/useKBar.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/kbar/lib/useMatches.js":
/*!*********************************************!*\
  !*** ./node_modules/kbar/lib/useMatches.js ***!
  \*********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.useDeepMatches = exports.useMatches = exports.NO_GROUP = void 0;\nvar React = __importStar(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nvar useKBar_1 = __webpack_require__(/*! ./useKBar */ \"(ssr)/./node_modules/kbar/lib/useKBar.js\");\nvar utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/kbar/lib/utils.js\");\nvar fuse_js_1 = __importDefault(__webpack_require__(/*! fuse.js */ \"(ssr)/./node_modules/kbar/node_modules/fuse.js/dist/fuse.esm.js\"));\nexports.NO_GROUP = {\n    name: \"none\",\n    priority: utils_1.Priority.NORMAL,\n};\nvar fuseOptions = {\n    keys: [\n        {\n            name: \"name\",\n            weight: 0.5,\n        },\n        {\n            name: \"keywords\",\n            getFn: function (item) { var _a; return ((_a = item.keywords) !== null && _a !== void 0 ? _a : \"\").split(\",\"); },\n            weight: 0.5,\n        },\n        \"subtitle\",\n    ],\n    ignoreLocation: true,\n    includeScore: true,\n    includeMatches: true,\n    threshold: 0.2,\n    minMatchCharLength: 1,\n};\nfunction order(a, b) {\n    /**\n     * Larger the priority = higher up the list\n     */\n    return b.priority - a.priority;\n}\n/**\n * returns deep matches only when a search query is present\n */\nfunction useMatches() {\n    var _a = (0, useKBar_1.useKBar)(function (state) { return ({\n        search: state.searchQuery,\n        actions: state.actions,\n        rootActionId: state.currentRootActionId,\n    }); }), search = _a.search, actions = _a.actions, rootActionId = _a.rootActionId;\n    var rootResults = React.useMemo(function () {\n        return Object.keys(actions)\n            .reduce(function (acc, actionId) {\n            var action = actions[actionId];\n            if (!action.parent && !rootActionId) {\n                acc.push(action);\n            }\n            if (action.id === rootActionId) {\n                for (var i = 0; i < action.children.length; i++) {\n                    acc.push(action.children[i]);\n                }\n            }\n            return acc;\n        }, [])\n            .sort(order);\n    }, [actions, rootActionId]);\n    var getDeepResults = React.useCallback(function (actions) {\n        var actionsClone = [];\n        for (var i = 0; i < actions.length; i++) {\n            actionsClone.push(actions[i]);\n        }\n        return (function collectChildren(actions, all) {\n            if (all === void 0) { all = actionsClone; }\n            for (var i = 0; i < actions.length; i++) {\n                if (actions[i].children.length > 0) {\n                    var childsChildren = actions[i].children;\n                    for (var i_1 = 0; i_1 < childsChildren.length; i_1++) {\n                        all.push(childsChildren[i_1]);\n                    }\n                    collectChildren(actions[i].children, all);\n                }\n            }\n            return all;\n        })(actions);\n    }, []);\n    var emptySearch = !search;\n    var filtered = React.useMemo(function () {\n        if (emptySearch)\n            return rootResults;\n        return getDeepResults(rootResults);\n    }, [getDeepResults, rootResults, emptySearch]);\n    var fuse = React.useMemo(function () { return new fuse_js_1.default(filtered, fuseOptions); }, [filtered]);\n    var matches = useInternalMatches(filtered, search, fuse);\n    var results = React.useMemo(function () {\n        var _a, _b;\n        /**\n         * Store a reference to a section and it's list of actions.\n         * Alongside these actions, we'll keep a temporary record of the\n         * final priority calculated by taking the commandScore + the\n         * explicitly set `action.priority` value.\n         */\n        var map = {};\n        /**\n         * Store another reference to a list of sections alongside\n         * the section's final priority, calculated the same as above.\n         */\n        var list = [];\n        /**\n         * We'll take the list above and sort by its priority. Then we'll\n         * collect all actions from the map above for this specific name and\n         * sort by its priority as well.\n         */\n        var ordered = [];\n        for (var i = 0; i < matches.length; i++) {\n            var match = matches[i];\n            var action = match.action;\n            var score = match.score || utils_1.Priority.NORMAL;\n            var section = {\n                name: typeof action.section === \"string\"\n                    ? action.section\n                    : ((_a = action.section) === null || _a === void 0 ? void 0 : _a.name) || exports.NO_GROUP.name,\n                priority: typeof action.section === \"string\"\n                    ? score\n                    : ((_b = action.section) === null || _b === void 0 ? void 0 : _b.priority) || 0 + score,\n            };\n            if (!map[section.name]) {\n                map[section.name] = [];\n                list.push(section);\n            }\n            map[section.name].push({\n                priority: action.priority + score,\n                action: action,\n            });\n        }\n        ordered = list.sort(order).map(function (group) { return ({\n            name: group.name,\n            actions: map[group.name].sort(order).map(function (item) { return item.action; }),\n        }); });\n        /**\n         * Our final result is simply flattening the ordered list into\n         * our familiar (ActionImpl | string)[] shape.\n         */\n        var results = [];\n        for (var i = 0; i < ordered.length; i++) {\n            var group = ordered[i];\n            if (group.name !== exports.NO_GROUP.name)\n                results.push(group.name);\n            for (var i_2 = 0; i_2 < group.actions.length; i_2++) {\n                results.push(group.actions[i_2]);\n            }\n        }\n        return results;\n    }, [matches]);\n    // ensure that users have an accurate `currentRootActionId`\n    // that syncs with the throttled return value.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    var memoRootActionId = React.useMemo(function () { return rootActionId; }, [results]);\n    return React.useMemo(function () { return ({\n        results: results,\n        rootActionId: memoRootActionId,\n    }); }, [memoRootActionId, results]);\n}\nexports.useMatches = useMatches;\nfunction useInternalMatches(filtered, search, fuse) {\n    var value = React.useMemo(function () { return ({\n        filtered: filtered,\n        search: search,\n    }); }, [filtered, search]);\n    var _a = (0, utils_1.useThrottledValue)(value), throttledFiltered = _a.filtered, throttledSearch = _a.search;\n    return React.useMemo(function () {\n        if (throttledSearch.trim() === \"\") {\n            return throttledFiltered.map(function (action) { return ({ score: 0, action: action }); });\n        }\n        var matches = [];\n        // Use Fuse's `search` method to perform the search efficiently\n        var searchResults = fuse.search(throttledSearch);\n        // Format the search results to match the existing structure\n        matches = searchResults.map(function (_a) {\n            var action = _a.item, score = _a.score;\n            return ({\n                score: 1 / ((score !== null && score !== void 0 ? score : 0) + 1),\n                action: action,\n            });\n        });\n        return matches;\n    }, [throttledFiltered, throttledSearch, fuse]);\n}\n/**\n * @deprecated use useMatches\n */\nexports.useDeepMatches = useMatches;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/lib/useMatches.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/kbar/lib/useRegisterActions.js":
/*!*****************************************************!*\
  !*** ./node_modules/kbar/lib/useRegisterActions.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.useRegisterActions = void 0;\nvar React = __importStar(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nvar useKBar_1 = __webpack_require__(/*! ./useKBar */ \"(ssr)/./node_modules/kbar/lib/useKBar.js\");\nfunction useRegisterActions(actions, dependencies) {\n    if (dependencies === void 0) { dependencies = []; }\n    var query = (0, useKBar_1.useKBar)().query;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    var actionsCache = React.useMemo(function () { return actions; }, dependencies);\n    React.useEffect(function () {\n        if (!actionsCache.length) {\n            return;\n        }\n        var unregister = query.registerActions(actionsCache);\n        return function () {\n            unregister();\n        };\n    }, [query, actionsCache]);\n}\nexports.useRegisterActions = useRegisterActions;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMva2Jhci9saWIvdXNlUmVnaXN0ZXJBY3Rpb25zLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLG1DQUFtQyxvQ0FBb0MsZ0JBQWdCO0FBQ3ZGLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0EsMENBQTBDLDRCQUE0QjtBQUN0RSxDQUFDO0FBQ0Q7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMEJBQTBCO0FBQzFCLHlCQUF5QixtQkFBTyxDQUFDLHdHQUFPO0FBQ3hDLGdCQUFnQixtQkFBTyxDQUFDLDJEQUFXO0FBQ25DO0FBQ0EsbUNBQW1DO0FBQ25DO0FBQ0E7QUFDQSxtREFBbUQsaUJBQWlCO0FBQ3BFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSwwQkFBMEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9nYWRhaS1yYWNvbXAvLi9ub2RlX21vZHVsZXMva2Jhci9saWIvdXNlUmVnaXN0ZXJBY3Rpb25zLmpzPzM2MGYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfSk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fc2V0TW9kdWxlRGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19zZXRNb2R1bGVEZWZhdWx0KSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCB2KSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIFwiZGVmYXVsdFwiLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2IH0pO1xufSkgOiBmdW5jdGlvbihvLCB2KSB7XG4gICAgb1tcImRlZmF1bHRcIl0gPSB2O1xufSk7XG52YXIgX19pbXBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydFN0YXIpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICBpZiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSByZXR1cm4gbW9kO1xuICAgIHZhciByZXN1bHQgPSB7fTtcbiAgICBpZiAobW9kICE9IG51bGwpIGZvciAodmFyIGsgaW4gbW9kKSBpZiAoayAhPT0gXCJkZWZhdWx0XCIgJiYgT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG1vZCwgaykpIF9fY3JlYXRlQmluZGluZyhyZXN1bHQsIG1vZCwgayk7XG4gICAgX19zZXRNb2R1bGVEZWZhdWx0KHJlc3VsdCwgbW9kKTtcbiAgICByZXR1cm4gcmVzdWx0O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudXNlUmVnaXN0ZXJBY3Rpb25zID0gdm9pZCAwO1xudmFyIFJlYWN0ID0gX19pbXBvcnRTdGFyKHJlcXVpcmUoXCJyZWFjdFwiKSk7XG52YXIgdXNlS0Jhcl8xID0gcmVxdWlyZShcIi4vdXNlS0JhclwiKTtcbmZ1bmN0aW9uIHVzZVJlZ2lzdGVyQWN0aW9ucyhhY3Rpb25zLCBkZXBlbmRlbmNpZXMpIHtcbiAgICBpZiAoZGVwZW5kZW5jaWVzID09PSB2b2lkIDApIHsgZGVwZW5kZW5jaWVzID0gW107IH1cbiAgICB2YXIgcXVlcnkgPSAoMCwgdXNlS0Jhcl8xLnVzZUtCYXIpKCkucXVlcnk7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0LWhvb2tzL2V4aGF1c3RpdmUtZGVwc1xuICAgIHZhciBhY3Rpb25zQ2FjaGUgPSBSZWFjdC51c2VNZW1vKGZ1bmN0aW9uICgpIHsgcmV0dXJuIGFjdGlvbnM7IH0sIGRlcGVuZGVuY2llcyk7XG4gICAgUmVhY3QudXNlRWZmZWN0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKCFhY3Rpb25zQ2FjaGUubGVuZ3RoKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdmFyIHVucmVnaXN0ZXIgPSBxdWVyeS5yZWdpc3RlckFjdGlvbnMoYWN0aW9uc0NhY2hlKTtcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHVucmVnaXN0ZXIoKTtcbiAgICAgICAgfTtcbiAgICB9LCBbcXVlcnksIGFjdGlvbnNDYWNoZV0pO1xufVxuZXhwb3J0cy51c2VSZWdpc3RlckFjdGlvbnMgPSB1c2VSZWdpc3RlckFjdGlvbnM7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/lib/useRegisterActions.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/kbar/lib/useStore.js":
/*!*******************************************!*\
  !*** ./node_modules/kbar/lib/useStore.js ***!
  \*******************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.useStore = void 0;\nvar fast_equals_1 = __webpack_require__(/*! fast-equals */ \"(ssr)/./node_modules/fast-equals/dist/fast-equals.esm.js\");\nvar React = __importStar(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nvar tiny_invariant_1 = __importDefault(__webpack_require__(/*! tiny-invariant */ \"(ssr)/./node_modules/tiny-invariant/dist/tiny-invariant.cjs.js\"));\nvar ActionInterface_1 = __webpack_require__(/*! ./action/ActionInterface */ \"(ssr)/./node_modules/kbar/lib/action/ActionInterface.js\");\nvar HistoryImpl_1 = __webpack_require__(/*! ./action/HistoryImpl */ \"(ssr)/./node_modules/kbar/lib/action/HistoryImpl.js\");\nvar types_1 = __webpack_require__(/*! ./types */ \"(ssr)/./node_modules/kbar/lib/types.js\");\nfunction useStore(props) {\n    var optionsRef = React.useRef(__assign({ animations: {\n            enterMs: 200,\n            exitMs: 100,\n        } }, props.options));\n    var actionsInterface = React.useMemo(function () {\n        return new ActionInterface_1.ActionInterface(props.actions || [], {\n            historyManager: optionsRef.current.enableHistory ? HistoryImpl_1.history : undefined,\n        });\n    }, \n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []);\n    // TODO: at this point useReducer might be a better approach to managing state.\n    var _a = React.useState({\n        searchQuery: \"\",\n        currentRootActionId: null,\n        visualState: types_1.VisualState.hidden,\n        actions: __assign({}, actionsInterface.actions),\n        activeIndex: 0,\n        disabled: false,\n    }), state = _a[0], setState = _a[1];\n    var currState = React.useRef(state);\n    currState.current = state;\n    var getState = React.useCallback(function () { return currState.current; }, []);\n    var publisher = React.useMemo(function () { return new Publisher(getState); }, [getState]);\n    React.useEffect(function () {\n        currState.current = state;\n        publisher.notify();\n    }, [state, publisher]);\n    var registerActions = React.useCallback(function (actions) {\n        setState(function (state) {\n            return __assign(__assign({}, state), { actions: actionsInterface.add(actions) });\n        });\n        return function unregister() {\n            setState(function (state) {\n                return __assign(__assign({}, state), { actions: actionsInterface.remove(actions) });\n            });\n        };\n    }, [actionsInterface]);\n    var inputRef = React.useRef(null);\n    return React.useMemo(function () {\n        var query = {\n            setCurrentRootAction: function (actionId) {\n                setState(function (state) { return (__assign(__assign({}, state), { currentRootActionId: actionId })); });\n            },\n            setVisualState: function (cb) {\n                setState(function (state) { return (__assign(__assign({}, state), { visualState: typeof cb === \"function\" ? cb(state.visualState) : cb })); });\n            },\n            setSearch: function (searchQuery) {\n                return setState(function (state) { return (__assign(__assign({}, state), { searchQuery: searchQuery })); });\n            },\n            registerActions: registerActions,\n            toggle: function () {\n                return setState(function (state) { return (__assign(__assign({}, state), { visualState: [types_1.VisualState.animatingOut, types_1.VisualState.hidden].includes(state.visualState)\n                        ? types_1.VisualState.animatingIn\n                        : types_1.VisualState.animatingOut })); });\n            },\n            setActiveIndex: function (cb) {\n                return setState(function (state) { return (__assign(__assign({}, state), { activeIndex: typeof cb === \"number\" ? cb : cb(state.activeIndex) })); });\n            },\n            inputRefSetter: function (el) {\n                inputRef.current = el;\n            },\n            getInput: function () {\n                (0, tiny_invariant_1.default)(inputRef.current, \"Input ref is undefined, make sure you attach `query.inputRefSetter` to your search input.\");\n                return inputRef.current;\n            },\n            disable: function (disable) {\n                setState(function (state) { return (__assign(__assign({}, state), { disabled: disable })); });\n            },\n        };\n        return {\n            getState: getState,\n            query: query,\n            options: optionsRef.current,\n            subscribe: function (collector, cb) { return publisher.subscribe(collector, cb); },\n        };\n    }, [getState, publisher, registerActions]);\n}\nexports.useStore = useStore;\nvar Publisher = /** @class */ (function () {\n    function Publisher(getState) {\n        this.subscribers = [];\n        this.getState = getState;\n    }\n    Publisher.prototype.subscribe = function (collector, onChange) {\n        var _this = this;\n        var subscriber = new Subscriber(function () { return collector(_this.getState()); }, onChange);\n        this.subscribers.push(subscriber);\n        return this.unsubscribe.bind(this, subscriber);\n    };\n    Publisher.prototype.unsubscribe = function (subscriber) {\n        if (this.subscribers.length) {\n            var index = this.subscribers.indexOf(subscriber);\n            if (index > -1) {\n                return this.subscribers.splice(index, 1);\n            }\n        }\n    };\n    Publisher.prototype.notify = function () {\n        this.subscribers.forEach(function (subscriber) { return subscriber.collect(); });\n    };\n    return Publisher;\n}());\nvar Subscriber = /** @class */ (function () {\n    function Subscriber(collector, onChange) {\n        this.collector = collector;\n        this.onChange = onChange;\n    }\n    Subscriber.prototype.collect = function () {\n        try {\n            // grab latest state\n            var recollect = this.collector();\n            if (!(0, fast_equals_1.deepEqual)(recollect, this.collected)) {\n                this.collected = recollect;\n                if (this.onChange) {\n                    this.onChange(this.collected);\n                }\n            }\n        }\n        catch (error) {\n            console.warn(error);\n        }\n    };\n    return Subscriber;\n}());\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/lib/useStore.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/kbar/lib/utils.js":
/*!****************************************!*\
  !*** ./node_modules/kbar/lib/utils.js ***!
  \****************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Priority = exports.isModKey = exports.shouldRejectKeystrokes = exports.useThrottledValue = exports.getScrollbarWidth = exports.useIsomorphicLayout = exports.noop = exports.createAction = exports.randomId = exports.usePointerMovedSinceMount = exports.useOuterClick = exports.swallowEvent = void 0;\nvar React = __importStar(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nfunction swallowEvent(event) {\n    event.stopPropagation();\n    event.preventDefault();\n}\nexports.swallowEvent = swallowEvent;\nfunction useOuterClick(dom, cb) {\n    var cbRef = React.useRef(cb);\n    cbRef.current = cb;\n    React.useEffect(function () {\n        function handler(event) {\n            var _a, _b;\n            if (((_a = dom.current) === null || _a === void 0 ? void 0 : _a.contains(event.target)) ||\n                // Add support for ReactShadowRoot\n                // @ts-expect-error wrong types, the `host` property exists https://stackoverflow.com/a/25340456\n                event.target === ((_b = dom.current) === null || _b === void 0 ? void 0 : _b.getRootNode().host)) {\n                return;\n            }\n            event.preventDefault();\n            event.stopPropagation();\n            cbRef.current();\n        }\n        window.addEventListener(\"pointerdown\", handler, true);\n        return function () { return window.removeEventListener(\"pointerdown\", handler, true); };\n    }, [dom]);\n}\nexports.useOuterClick = useOuterClick;\nfunction usePointerMovedSinceMount() {\n    var _a = React.useState(false), moved = _a[0], setMoved = _a[1];\n    React.useEffect(function () {\n        function handler() {\n            setMoved(true);\n        }\n        if (!moved) {\n            window.addEventListener(\"pointermove\", handler);\n            return function () { return window.removeEventListener(\"pointermove\", handler); };\n        }\n    }, [moved]);\n    return moved;\n}\nexports.usePointerMovedSinceMount = usePointerMovedSinceMount;\nfunction randomId() {\n    return Math.random().toString(36).substring(2, 9);\n}\nexports.randomId = randomId;\nfunction createAction(params) {\n    return __assign({ id: randomId() }, params);\n}\nexports.createAction = createAction;\nfunction noop() { }\nexports.noop = noop;\nexports.useIsomorphicLayout = typeof window === \"undefined\" ? noop : React.useLayoutEffect;\n// https://stackoverflow.com/questions/13382516/getting-scroll-bar-width-using-javascript\nfunction getScrollbarWidth() {\n    var outer = document.createElement(\"div\");\n    outer.style.visibility = \"hidden\";\n    outer.style.overflow = \"scroll\";\n    document.body.appendChild(outer);\n    var inner = document.createElement(\"div\");\n    outer.appendChild(inner);\n    var scrollbarWidth = outer.offsetWidth - inner.offsetWidth;\n    outer.parentNode.removeChild(outer);\n    return scrollbarWidth;\n}\nexports.getScrollbarWidth = getScrollbarWidth;\nfunction useThrottledValue(value, ms) {\n    if (ms === void 0) { ms = 100; }\n    var _a = React.useState(value), throttledValue = _a[0], setThrottledValue = _a[1];\n    var lastRan = React.useRef(Date.now());\n    React.useEffect(function () {\n        if (ms === 0)\n            return;\n        var timeout = setTimeout(function () {\n            setThrottledValue(value);\n            lastRan.current = Date.now();\n        }, lastRan.current - (Date.now() - ms));\n        return function () {\n            clearTimeout(timeout);\n        };\n    }, [ms, value]);\n    return ms === 0 ? value : throttledValue;\n}\nexports.useThrottledValue = useThrottledValue;\nfunction shouldRejectKeystrokes(_a) {\n    var _b, _c, _d;\n    var _e = _a === void 0 ? { ignoreWhenFocused: [] } : _a, ignoreWhenFocused = _e.ignoreWhenFocused;\n    var inputs = __spreadArray([\"input\", \"textarea\"], ignoreWhenFocused, true).map(function (el) {\n        return el.toLowerCase();\n    });\n    var activeElement = document.activeElement;\n    var ignoreStrokes = activeElement &&\n        (inputs.indexOf(activeElement.tagName.toLowerCase()) !== -1 ||\n            ((_b = activeElement.attributes.getNamedItem(\"role\")) === null || _b === void 0 ? void 0 : _b.value) === \"textbox\" ||\n            ((_c = activeElement.attributes.getNamedItem(\"contenteditable\")) === null || _c === void 0 ? void 0 : _c.value) ===\n                \"true\" ||\n            ((_d = activeElement.attributes.getNamedItem(\"contenteditable\")) === null || _d === void 0 ? void 0 : _d.value) ===\n                \"plaintext-only\");\n    return ignoreStrokes;\n}\nexports.shouldRejectKeystrokes = shouldRejectKeystrokes;\nvar SSR = typeof window === \"undefined\";\nvar isMac = !SSR && window.navigator.platform === \"MacIntel\";\nfunction isModKey(event) {\n    return isMac ? event.metaKey : event.ctrlKey;\n}\nexports.isModKey = isModKey;\nexports.Priority = {\n    HIGH: 1,\n    NORMAL: 0,\n    LOW: -1,\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/lib/utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/kbar/node_modules/fuse.js/dist/fuse.esm.js":
/*!*****************************************************************!*\
  !*** ./node_modules/kbar/node_modules/fuse.js/dist/fuse.esm.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Fuse)\n/* harmony export */ });\n/**\n * Fuse.js v6.6.2 - Lightweight fuzzy-search (http://fusejs.io)\n *\n * Copyright (c) 2022 Kiro Risk (http://kiro.me)\n * All Rights Reserved. Apache Software License 2.0\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nfunction isArray(value) {\n  return !Array.isArray\n    ? getTag(value) === '[object Array]'\n    : Array.isArray(value)\n}\n\n// Adapted from: https://github.com/lodash/lodash/blob/master/.internal/baseToString.js\nconst INFINITY = 1 / 0;\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value\n  }\n  let result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result\n}\n\nfunction toString(value) {\n  return value == null ? '' : baseToString(value)\n}\n\nfunction isString(value) {\n  return typeof value === 'string'\n}\n\nfunction isNumber(value) {\n  return typeof value === 'number'\n}\n\n// Adapted from: https://github.com/lodash/lodash/blob/master/isBoolean.js\nfunction isBoolean(value) {\n  return (\n    value === true ||\n    value === false ||\n    (isObjectLike(value) && getTag(value) == '[object Boolean]')\n  )\n}\n\nfunction isObject(value) {\n  return typeof value === 'object'\n}\n\n// Checks if `value` is object-like.\nfunction isObjectLike(value) {\n  return isObject(value) && value !== null\n}\n\nfunction isDefined(value) {\n  return value !== undefined && value !== null\n}\n\nfunction isBlank(value) {\n  return !value.trim().length\n}\n\n// Gets the `toStringTag` of `value`.\n// Adapted from: https://github.com/lodash/lodash/blob/master/.internal/getTag.js\nfunction getTag(value) {\n  return value == null\n    ? value === undefined\n      ? '[object Undefined]'\n      : '[object Null]'\n    : Object.prototype.toString.call(value)\n}\n\nconst EXTENDED_SEARCH_UNAVAILABLE = 'Extended search is not available';\n\nconst INCORRECT_INDEX_TYPE = \"Incorrect 'index' type\";\n\nconst LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY = (key) =>\n  `Invalid value for key ${key}`;\n\nconst PATTERN_LENGTH_TOO_LARGE = (max) =>\n  `Pattern length exceeds max of ${max}.`;\n\nconst MISSING_KEY_PROPERTY = (name) => `Missing ${name} property in key`;\n\nconst INVALID_KEY_WEIGHT_VALUE = (key) =>\n  `Property 'weight' in key '${key}' must be a positive integer`;\n\nconst hasOwn = Object.prototype.hasOwnProperty;\n\nclass KeyStore {\n  constructor(keys) {\n    this._keys = [];\n    this._keyMap = {};\n\n    let totalWeight = 0;\n\n    keys.forEach((key) => {\n      let obj = createKey(key);\n\n      totalWeight += obj.weight;\n\n      this._keys.push(obj);\n      this._keyMap[obj.id] = obj;\n\n      totalWeight += obj.weight;\n    });\n\n    // Normalize weights so that their sum is equal to 1\n    this._keys.forEach((key) => {\n      key.weight /= totalWeight;\n    });\n  }\n  get(keyId) {\n    return this._keyMap[keyId]\n  }\n  keys() {\n    return this._keys\n  }\n  toJSON() {\n    return JSON.stringify(this._keys)\n  }\n}\n\nfunction createKey(key) {\n  let path = null;\n  let id = null;\n  let src = null;\n  let weight = 1;\n  let getFn = null;\n\n  if (isString(key) || isArray(key)) {\n    src = key;\n    path = createKeyPath(key);\n    id = createKeyId(key);\n  } else {\n    if (!hasOwn.call(key, 'name')) {\n      throw new Error(MISSING_KEY_PROPERTY('name'))\n    }\n\n    const name = key.name;\n    src = name;\n\n    if (hasOwn.call(key, 'weight')) {\n      weight = key.weight;\n\n      if (weight <= 0) {\n        throw new Error(INVALID_KEY_WEIGHT_VALUE(name))\n      }\n    }\n\n    path = createKeyPath(name);\n    id = createKeyId(name);\n    getFn = key.getFn;\n  }\n\n  return { path, id, weight, src, getFn }\n}\n\nfunction createKeyPath(key) {\n  return isArray(key) ? key : key.split('.')\n}\n\nfunction createKeyId(key) {\n  return isArray(key) ? key.join('.') : key\n}\n\nfunction get(obj, path) {\n  let list = [];\n  let arr = false;\n\n  const deepGet = (obj, path, index) => {\n    if (!isDefined(obj)) {\n      return\n    }\n    if (!path[index]) {\n      // If there's no path left, we've arrived at the object we care about.\n      list.push(obj);\n    } else {\n      let key = path[index];\n\n      const value = obj[key];\n\n      if (!isDefined(value)) {\n        return\n      }\n\n      // If we're at the last value in the path, and if it's a string/number/bool,\n      // add it to the list\n      if (\n        index === path.length - 1 &&\n        (isString(value) || isNumber(value) || isBoolean(value))\n      ) {\n        list.push(toString(value));\n      } else if (isArray(value)) {\n        arr = true;\n        // Search each item in the array.\n        for (let i = 0, len = value.length; i < len; i += 1) {\n          deepGet(value[i], path, index + 1);\n        }\n      } else if (path.length) {\n        // An object. Recurse further.\n        deepGet(value, path, index + 1);\n      }\n    }\n  };\n\n  // Backwards compatibility (since path used to be a string)\n  deepGet(obj, isString(path) ? path.split('.') : path, 0);\n\n  return arr ? list : list[0]\n}\n\nconst MatchOptions = {\n  // Whether the matches should be included in the result set. When `true`, each record in the result\n  // set will include the indices of the matched characters.\n  // These can consequently be used for highlighting purposes.\n  includeMatches: false,\n  // When `true`, the matching function will continue to the end of a search pattern even if\n  // a perfect match has already been located in the string.\n  findAllMatches: false,\n  // Minimum number of characters that must be matched before a result is considered a match\n  minMatchCharLength: 1\n};\n\nconst BasicOptions = {\n  // When `true`, the algorithm continues searching to the end of the input even if a perfect\n  // match is found before the end of the same input.\n  isCaseSensitive: false,\n  // When true, the matching function will continue to the end of a search pattern even if\n  includeScore: false,\n  // List of properties that will be searched. This also supports nested properties.\n  keys: [],\n  // Whether to sort the result list, by score\n  shouldSort: true,\n  // Default sort function: sort by ascending score, ascending index\n  sortFn: (a, b) =>\n    a.score === b.score ? (a.idx < b.idx ? -1 : 1) : a.score < b.score ? -1 : 1\n};\n\nconst FuzzyOptions = {\n  // Approximately where in the text is the pattern expected to be found?\n  location: 0,\n  // At what point does the match algorithm give up. A threshold of '0.0' requires a perfect match\n  // (of both letters and location), a threshold of '1.0' would match anything.\n  threshold: 0.6,\n  // Determines how close the match must be to the fuzzy location (specified above).\n  // An exact letter match which is 'distance' characters away from the fuzzy location\n  // would score as a complete mismatch. A distance of '0' requires the match be at\n  // the exact location specified, a threshold of '1000' would require a perfect match\n  // to be within 800 characters of the fuzzy location to be found using a 0.8 threshold.\n  distance: 100\n};\n\nconst AdvancedOptions = {\n  // When `true`, it enables the use of unix-like search commands\n  useExtendedSearch: false,\n  // The get function to use when fetching an object's properties.\n  // The default will search nested paths *ie foo.bar.baz*\n  getFn: get,\n  // When `true`, search will ignore `location` and `distance`, so it won't matter\n  // where in the string the pattern appears.\n  // More info: https://fusejs.io/concepts/scoring-theory.html#fuzziness-score\n  ignoreLocation: false,\n  // When `true`, the calculation for the relevance score (used for sorting) will\n  // ignore the field-length norm.\n  // More info: https://fusejs.io/concepts/scoring-theory.html#field-length-norm\n  ignoreFieldNorm: false,\n  // The weight to determine how much field length norm effects scoring.\n  fieldNormWeight: 1\n};\n\nvar Config = {\n  ...BasicOptions,\n  ...MatchOptions,\n  ...FuzzyOptions,\n  ...AdvancedOptions\n};\n\nconst SPACE = /[^ ]+/g;\n\n// Field-length norm: the shorter the field, the higher the weight.\n// Set to 3 decimals to reduce index size.\nfunction norm(weight = 1, mantissa = 3) {\n  const cache = new Map();\n  const m = Math.pow(10, mantissa);\n\n  return {\n    get(value) {\n      const numTokens = value.match(SPACE).length;\n\n      if (cache.has(numTokens)) {\n        return cache.get(numTokens)\n      }\n\n      // Default function is 1/sqrt(x), weight makes that variable\n      const norm = 1 / Math.pow(numTokens, 0.5 * weight);\n\n      // In place of `toFixed(mantissa)`, for faster computation\n      const n = parseFloat(Math.round(norm * m) / m);\n\n      cache.set(numTokens, n);\n\n      return n\n    },\n    clear() {\n      cache.clear();\n    }\n  }\n}\n\nclass FuseIndex {\n  constructor({\n    getFn = Config.getFn,\n    fieldNormWeight = Config.fieldNormWeight\n  } = {}) {\n    this.norm = norm(fieldNormWeight, 3);\n    this.getFn = getFn;\n    this.isCreated = false;\n\n    this.setIndexRecords();\n  }\n  setSources(docs = []) {\n    this.docs = docs;\n  }\n  setIndexRecords(records = []) {\n    this.records = records;\n  }\n  setKeys(keys = []) {\n    this.keys = keys;\n    this._keysMap = {};\n    keys.forEach((key, idx) => {\n      this._keysMap[key.id] = idx;\n    });\n  }\n  create() {\n    if (this.isCreated || !this.docs.length) {\n      return\n    }\n\n    this.isCreated = true;\n\n    // List is Array<String>\n    if (isString(this.docs[0])) {\n      this.docs.forEach((doc, docIndex) => {\n        this._addString(doc, docIndex);\n      });\n    } else {\n      // List is Array<Object>\n      this.docs.forEach((doc, docIndex) => {\n        this._addObject(doc, docIndex);\n      });\n    }\n\n    this.norm.clear();\n  }\n  // Adds a doc to the end of the index\n  add(doc) {\n    const idx = this.size();\n\n    if (isString(doc)) {\n      this._addString(doc, idx);\n    } else {\n      this._addObject(doc, idx);\n    }\n  }\n  // Removes the doc at the specified index of the index\n  removeAt(idx) {\n    this.records.splice(idx, 1);\n\n    // Change ref index of every subsquent doc\n    for (let i = idx, len = this.size(); i < len; i += 1) {\n      this.records[i].i -= 1;\n    }\n  }\n  getValueForItemAtKeyId(item, keyId) {\n    return item[this._keysMap[keyId]]\n  }\n  size() {\n    return this.records.length\n  }\n  _addString(doc, docIndex) {\n    if (!isDefined(doc) || isBlank(doc)) {\n      return\n    }\n\n    let record = {\n      v: doc,\n      i: docIndex,\n      n: this.norm.get(doc)\n    };\n\n    this.records.push(record);\n  }\n  _addObject(doc, docIndex) {\n    let record = { i: docIndex, $: {} };\n\n    // Iterate over every key (i.e, path), and fetch the value at that key\n    this.keys.forEach((key, keyIndex) => {\n      let value = key.getFn ? key.getFn(doc) : this.getFn(doc, key.path);\n\n      if (!isDefined(value)) {\n        return\n      }\n\n      if (isArray(value)) {\n        let subRecords = [];\n        const stack = [{ nestedArrIndex: -1, value }];\n\n        while (stack.length) {\n          const { nestedArrIndex, value } = stack.pop();\n\n          if (!isDefined(value)) {\n            continue\n          }\n\n          if (isString(value) && !isBlank(value)) {\n            let subRecord = {\n              v: value,\n              i: nestedArrIndex,\n              n: this.norm.get(value)\n            };\n\n            subRecords.push(subRecord);\n          } else if (isArray(value)) {\n            value.forEach((item, k) => {\n              stack.push({\n                nestedArrIndex: k,\n                value: item\n              });\n            });\n          } else ;\n        }\n        record.$[keyIndex] = subRecords;\n      } else if (isString(value) && !isBlank(value)) {\n        let subRecord = {\n          v: value,\n          n: this.norm.get(value)\n        };\n\n        record.$[keyIndex] = subRecord;\n      }\n    });\n\n    this.records.push(record);\n  }\n  toJSON() {\n    return {\n      keys: this.keys,\n      records: this.records\n    }\n  }\n}\n\nfunction createIndex(\n  keys,\n  docs,\n  { getFn = Config.getFn, fieldNormWeight = Config.fieldNormWeight } = {}\n) {\n  const myIndex = new FuseIndex({ getFn, fieldNormWeight });\n  myIndex.setKeys(keys.map(createKey));\n  myIndex.setSources(docs);\n  myIndex.create();\n  return myIndex\n}\n\nfunction parseIndex(\n  data,\n  { getFn = Config.getFn, fieldNormWeight = Config.fieldNormWeight } = {}\n) {\n  const { keys, records } = data;\n  const myIndex = new FuseIndex({ getFn, fieldNormWeight });\n  myIndex.setKeys(keys);\n  myIndex.setIndexRecords(records);\n  return myIndex\n}\n\nfunction computeScore$1(\n  pattern,\n  {\n    errors = 0,\n    currentLocation = 0,\n    expectedLocation = 0,\n    distance = Config.distance,\n    ignoreLocation = Config.ignoreLocation\n  } = {}\n) {\n  const accuracy = errors / pattern.length;\n\n  if (ignoreLocation) {\n    return accuracy\n  }\n\n  const proximity = Math.abs(expectedLocation - currentLocation);\n\n  if (!distance) {\n    // Dodge divide by zero error.\n    return proximity ? 1.0 : accuracy\n  }\n\n  return accuracy + proximity / distance\n}\n\nfunction convertMaskToIndices(\n  matchmask = [],\n  minMatchCharLength = Config.minMatchCharLength\n) {\n  let indices = [];\n  let start = -1;\n  let end = -1;\n  let i = 0;\n\n  for (let len = matchmask.length; i < len; i += 1) {\n    let match = matchmask[i];\n    if (match && start === -1) {\n      start = i;\n    } else if (!match && start !== -1) {\n      end = i - 1;\n      if (end - start + 1 >= minMatchCharLength) {\n        indices.push([start, end]);\n      }\n      start = -1;\n    }\n  }\n\n  // (i-1 - start) + 1 => i - start\n  if (matchmask[i - 1] && i - start >= minMatchCharLength) {\n    indices.push([start, i - 1]);\n  }\n\n  return indices\n}\n\n// Machine word size\nconst MAX_BITS = 32;\n\nfunction search(\n  text,\n  pattern,\n  patternAlphabet,\n  {\n    location = Config.location,\n    distance = Config.distance,\n    threshold = Config.threshold,\n    findAllMatches = Config.findAllMatches,\n    minMatchCharLength = Config.minMatchCharLength,\n    includeMatches = Config.includeMatches,\n    ignoreLocation = Config.ignoreLocation\n  } = {}\n) {\n  if (pattern.length > MAX_BITS) {\n    throw new Error(PATTERN_LENGTH_TOO_LARGE(MAX_BITS))\n  }\n\n  const patternLen = pattern.length;\n  // Set starting location at beginning text and initialize the alphabet.\n  const textLen = text.length;\n  // Handle the case when location > text.length\n  const expectedLocation = Math.max(0, Math.min(location, textLen));\n  // Highest score beyond which we give up.\n  let currentThreshold = threshold;\n  // Is there a nearby exact match? (speedup)\n  let bestLocation = expectedLocation;\n\n  // Performance: only computer matches when the minMatchCharLength > 1\n  // OR if `includeMatches` is true.\n  const computeMatches = minMatchCharLength > 1 || includeMatches;\n  // A mask of the matches, used for building the indices\n  const matchMask = computeMatches ? Array(textLen) : [];\n\n  let index;\n\n  // Get all exact matches, here for speed up\n  while ((index = text.indexOf(pattern, bestLocation)) > -1) {\n    let score = computeScore$1(pattern, {\n      currentLocation: index,\n      expectedLocation,\n      distance,\n      ignoreLocation\n    });\n\n    currentThreshold = Math.min(score, currentThreshold);\n    bestLocation = index + patternLen;\n\n    if (computeMatches) {\n      let i = 0;\n      while (i < patternLen) {\n        matchMask[index + i] = 1;\n        i += 1;\n      }\n    }\n  }\n\n  // Reset the best location\n  bestLocation = -1;\n\n  let lastBitArr = [];\n  let finalScore = 1;\n  let binMax = patternLen + textLen;\n\n  const mask = 1 << (patternLen - 1);\n\n  for (let i = 0; i < patternLen; i += 1) {\n    // Scan for the best match; each iteration allows for one more error.\n    // Run a binary search to determine how far from the match location we can stray\n    // at this error level.\n    let binMin = 0;\n    let binMid = binMax;\n\n    while (binMin < binMid) {\n      const score = computeScore$1(pattern, {\n        errors: i,\n        currentLocation: expectedLocation + binMid,\n        expectedLocation,\n        distance,\n        ignoreLocation\n      });\n\n      if (score <= currentThreshold) {\n        binMin = binMid;\n      } else {\n        binMax = binMid;\n      }\n\n      binMid = Math.floor((binMax - binMin) / 2 + binMin);\n    }\n\n    // Use the result from this iteration as the maximum for the next.\n    binMax = binMid;\n\n    let start = Math.max(1, expectedLocation - binMid + 1);\n    let finish = findAllMatches\n      ? textLen\n      : Math.min(expectedLocation + binMid, textLen) + patternLen;\n\n    // Initialize the bit array\n    let bitArr = Array(finish + 2);\n\n    bitArr[finish + 1] = (1 << i) - 1;\n\n    for (let j = finish; j >= start; j -= 1) {\n      let currentLocation = j - 1;\n      let charMatch = patternAlphabet[text.charAt(currentLocation)];\n\n      if (computeMatches) {\n        // Speed up: quick bool to int conversion (i.e, `charMatch ? 1 : 0`)\n        matchMask[currentLocation] = +!!charMatch;\n      }\n\n      // First pass: exact match\n      bitArr[j] = ((bitArr[j + 1] << 1) | 1) & charMatch;\n\n      // Subsequent passes: fuzzy match\n      if (i) {\n        bitArr[j] |=\n          ((lastBitArr[j + 1] | lastBitArr[j]) << 1) | 1 | lastBitArr[j + 1];\n      }\n\n      if (bitArr[j] & mask) {\n        finalScore = computeScore$1(pattern, {\n          errors: i,\n          currentLocation,\n          expectedLocation,\n          distance,\n          ignoreLocation\n        });\n\n        // This match will almost certainly be better than any existing match.\n        // But check anyway.\n        if (finalScore <= currentThreshold) {\n          // Indeed it is\n          currentThreshold = finalScore;\n          bestLocation = currentLocation;\n\n          // Already passed `loc`, downhill from here on in.\n          if (bestLocation <= expectedLocation) {\n            break\n          }\n\n          // When passing `bestLocation`, don't exceed our current distance from `expectedLocation`.\n          start = Math.max(1, 2 * expectedLocation - bestLocation);\n        }\n      }\n    }\n\n    // No hope for a (better) match at greater error levels.\n    const score = computeScore$1(pattern, {\n      errors: i + 1,\n      currentLocation: expectedLocation,\n      expectedLocation,\n      distance,\n      ignoreLocation\n    });\n\n    if (score > currentThreshold) {\n      break\n    }\n\n    lastBitArr = bitArr;\n  }\n\n  const result = {\n    isMatch: bestLocation >= 0,\n    // Count exact matches (those with a score of 0) to be \"almost\" exact\n    score: Math.max(0.001, finalScore)\n  };\n\n  if (computeMatches) {\n    const indices = convertMaskToIndices(matchMask, minMatchCharLength);\n    if (!indices.length) {\n      result.isMatch = false;\n    } else if (includeMatches) {\n      result.indices = indices;\n    }\n  }\n\n  return result\n}\n\nfunction createPatternAlphabet(pattern) {\n  let mask = {};\n\n  for (let i = 0, len = pattern.length; i < len; i += 1) {\n    const char = pattern.charAt(i);\n    mask[char] = (mask[char] || 0) | (1 << (len - i - 1));\n  }\n\n  return mask\n}\n\nclass BitapSearch {\n  constructor(\n    pattern,\n    {\n      location = Config.location,\n      threshold = Config.threshold,\n      distance = Config.distance,\n      includeMatches = Config.includeMatches,\n      findAllMatches = Config.findAllMatches,\n      minMatchCharLength = Config.minMatchCharLength,\n      isCaseSensitive = Config.isCaseSensitive,\n      ignoreLocation = Config.ignoreLocation\n    } = {}\n  ) {\n    this.options = {\n      location,\n      threshold,\n      distance,\n      includeMatches,\n      findAllMatches,\n      minMatchCharLength,\n      isCaseSensitive,\n      ignoreLocation\n    };\n\n    this.pattern = isCaseSensitive ? pattern : pattern.toLowerCase();\n\n    this.chunks = [];\n\n    if (!this.pattern.length) {\n      return\n    }\n\n    const addChunk = (pattern, startIndex) => {\n      this.chunks.push({\n        pattern,\n        alphabet: createPatternAlphabet(pattern),\n        startIndex\n      });\n    };\n\n    const len = this.pattern.length;\n\n    if (len > MAX_BITS) {\n      let i = 0;\n      const remainder = len % MAX_BITS;\n      const end = len - remainder;\n\n      while (i < end) {\n        addChunk(this.pattern.substr(i, MAX_BITS), i);\n        i += MAX_BITS;\n      }\n\n      if (remainder) {\n        const startIndex = len - MAX_BITS;\n        addChunk(this.pattern.substr(startIndex), startIndex);\n      }\n    } else {\n      addChunk(this.pattern, 0);\n    }\n  }\n\n  searchIn(text) {\n    const { isCaseSensitive, includeMatches } = this.options;\n\n    if (!isCaseSensitive) {\n      text = text.toLowerCase();\n    }\n\n    // Exact match\n    if (this.pattern === text) {\n      let result = {\n        isMatch: true,\n        score: 0\n      };\n\n      if (includeMatches) {\n        result.indices = [[0, text.length - 1]];\n      }\n\n      return result\n    }\n\n    // Otherwise, use Bitap algorithm\n    const {\n      location,\n      distance,\n      threshold,\n      findAllMatches,\n      minMatchCharLength,\n      ignoreLocation\n    } = this.options;\n\n    let allIndices = [];\n    let totalScore = 0;\n    let hasMatches = false;\n\n    this.chunks.forEach(({ pattern, alphabet, startIndex }) => {\n      const { isMatch, score, indices } = search(text, pattern, alphabet, {\n        location: location + startIndex,\n        distance,\n        threshold,\n        findAllMatches,\n        minMatchCharLength,\n        includeMatches,\n        ignoreLocation\n      });\n\n      if (isMatch) {\n        hasMatches = true;\n      }\n\n      totalScore += score;\n\n      if (isMatch && indices) {\n        allIndices = [...allIndices, ...indices];\n      }\n    });\n\n    let result = {\n      isMatch: hasMatches,\n      score: hasMatches ? totalScore / this.chunks.length : 1\n    };\n\n    if (hasMatches && includeMatches) {\n      result.indices = allIndices;\n    }\n\n    return result\n  }\n}\n\nclass BaseMatch {\n  constructor(pattern) {\n    this.pattern = pattern;\n  }\n  static isMultiMatch(pattern) {\n    return getMatch(pattern, this.multiRegex)\n  }\n  static isSingleMatch(pattern) {\n    return getMatch(pattern, this.singleRegex)\n  }\n  search(/*text*/) {}\n}\n\nfunction getMatch(pattern, exp) {\n  const matches = pattern.match(exp);\n  return matches ? matches[1] : null\n}\n\n// Token: 'file\n\nclass ExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'exact'\n  }\n  static get multiRegex() {\n    return /^=\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^=(.*)$/\n  }\n  search(text) {\n    const isMatch = text === this.pattern;\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, this.pattern.length - 1]\n    }\n  }\n}\n\n// Token: !fire\n\nclass InverseExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'inverse-exact'\n  }\n  static get multiRegex() {\n    return /^!\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^!(.*)$/\n  }\n  search(text) {\n    const index = text.indexOf(this.pattern);\n    const isMatch = index === -1;\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, text.length - 1]\n    }\n  }\n}\n\n// Token: ^file\n\nclass PrefixExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'prefix-exact'\n  }\n  static get multiRegex() {\n    return /^\\^\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^\\^(.*)$/\n  }\n  search(text) {\n    const isMatch = text.startsWith(this.pattern);\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, this.pattern.length - 1]\n    }\n  }\n}\n\n// Token: !^fire\n\nclass InversePrefixExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'inverse-prefix-exact'\n  }\n  static get multiRegex() {\n    return /^!\\^\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^!\\^(.*)$/\n  }\n  search(text) {\n    const isMatch = !text.startsWith(this.pattern);\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, text.length - 1]\n    }\n  }\n}\n\n// Token: .file$\n\nclass SuffixExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'suffix-exact'\n  }\n  static get multiRegex() {\n    return /^\"(.*)\"\\$$/\n  }\n  static get singleRegex() {\n    return /^(.*)\\$$/\n  }\n  search(text) {\n    const isMatch = text.endsWith(this.pattern);\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [text.length - this.pattern.length, text.length - 1]\n    }\n  }\n}\n\n// Token: !.file$\n\nclass InverseSuffixExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'inverse-suffix-exact'\n  }\n  static get multiRegex() {\n    return /^!\"(.*)\"\\$$/\n  }\n  static get singleRegex() {\n    return /^!(.*)\\$$/\n  }\n  search(text) {\n    const isMatch = !text.endsWith(this.pattern);\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, text.length - 1]\n    }\n  }\n}\n\nclass FuzzyMatch extends BaseMatch {\n  constructor(\n    pattern,\n    {\n      location = Config.location,\n      threshold = Config.threshold,\n      distance = Config.distance,\n      includeMatches = Config.includeMatches,\n      findAllMatches = Config.findAllMatches,\n      minMatchCharLength = Config.minMatchCharLength,\n      isCaseSensitive = Config.isCaseSensitive,\n      ignoreLocation = Config.ignoreLocation\n    } = {}\n  ) {\n    super(pattern);\n    this._bitapSearch = new BitapSearch(pattern, {\n      location,\n      threshold,\n      distance,\n      includeMatches,\n      findAllMatches,\n      minMatchCharLength,\n      isCaseSensitive,\n      ignoreLocation\n    });\n  }\n  static get type() {\n    return 'fuzzy'\n  }\n  static get multiRegex() {\n    return /^\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^(.*)$/\n  }\n  search(text) {\n    return this._bitapSearch.searchIn(text)\n  }\n}\n\n// Token: 'file\n\nclass IncludeMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'include'\n  }\n  static get multiRegex() {\n    return /^'\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^'(.*)$/\n  }\n  search(text) {\n    let location = 0;\n    let index;\n\n    const indices = [];\n    const patternLen = this.pattern.length;\n\n    // Get all exact matches\n    while ((index = text.indexOf(this.pattern, location)) > -1) {\n      location = index + patternLen;\n      indices.push([index, location - 1]);\n    }\n\n    const isMatch = !!indices.length;\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices\n    }\n  }\n}\n\n// ❗Order is important. DO NOT CHANGE.\nconst searchers = [\n  ExactMatch,\n  IncludeMatch,\n  PrefixExactMatch,\n  InversePrefixExactMatch,\n  InverseSuffixExactMatch,\n  SuffixExactMatch,\n  InverseExactMatch,\n  FuzzyMatch\n];\n\nconst searchersLen = searchers.length;\n\n// Regex to split by spaces, but keep anything in quotes together\nconst SPACE_RE = / +(?=(?:[^\\\"]*\\\"[^\\\"]*\\\")*[^\\\"]*$)/;\nconst OR_TOKEN = '|';\n\n// Return a 2D array representation of the query, for simpler parsing.\n// Example:\n// \"^core go$ | rb$ | py$ xy$\" => [[\"^core\", \"go$\"], [\"rb$\"], [\"py$\", \"xy$\"]]\nfunction parseQuery(pattern, options = {}) {\n  return pattern.split(OR_TOKEN).map((item) => {\n    let query = item\n      .trim()\n      .split(SPACE_RE)\n      .filter((item) => item && !!item.trim());\n\n    let results = [];\n    for (let i = 0, len = query.length; i < len; i += 1) {\n      const queryItem = query[i];\n\n      // 1. Handle multiple query match (i.e, once that are quoted, like `\"hello world\"`)\n      let found = false;\n      let idx = -1;\n      while (!found && ++idx < searchersLen) {\n        const searcher = searchers[idx];\n        let token = searcher.isMultiMatch(queryItem);\n        if (token) {\n          results.push(new searcher(token, options));\n          found = true;\n        }\n      }\n\n      if (found) {\n        continue\n      }\n\n      // 2. Handle single query matches (i.e, once that are *not* quoted)\n      idx = -1;\n      while (++idx < searchersLen) {\n        const searcher = searchers[idx];\n        let token = searcher.isSingleMatch(queryItem);\n        if (token) {\n          results.push(new searcher(token, options));\n          break\n        }\n      }\n    }\n\n    return results\n  })\n}\n\n// These extended matchers can return an array of matches, as opposed\n// to a singl match\nconst MultiMatchSet = new Set([FuzzyMatch.type, IncludeMatch.type]);\n\n/**\n * Command-like searching\n * ======================\n *\n * Given multiple search terms delimited by spaces.e.g. `^jscript .python$ ruby !java`,\n * search in a given text.\n *\n * Search syntax:\n *\n * | Token       | Match type                 | Description                            |\n * | ----------- | -------------------------- | -------------------------------------- |\n * | `jscript`   | fuzzy-match                | Items that fuzzy match `jscript`       |\n * | `=scheme`   | exact-match                | Items that are `scheme`                |\n * | `'python`   | include-match              | Items that include `python`            |\n * | `!ruby`     | inverse-exact-match        | Items that do not include `ruby`       |\n * | `^java`     | prefix-exact-match         | Items that start with `java`           |\n * | `!^earlang` | inverse-prefix-exact-match | Items that do not start with `earlang` |\n * | `.js$`      | suffix-exact-match         | Items that end with `.js`              |\n * | `!.go$`     | inverse-suffix-exact-match | Items that do not end with `.go`       |\n *\n * A single pipe character acts as an OR operator. For example, the following\n * query matches entries that start with `core` and end with either`go`, `rb`,\n * or`py`.\n *\n * ```\n * ^core go$ | rb$ | py$\n * ```\n */\nclass ExtendedSearch {\n  constructor(\n    pattern,\n    {\n      isCaseSensitive = Config.isCaseSensitive,\n      includeMatches = Config.includeMatches,\n      minMatchCharLength = Config.minMatchCharLength,\n      ignoreLocation = Config.ignoreLocation,\n      findAllMatches = Config.findAllMatches,\n      location = Config.location,\n      threshold = Config.threshold,\n      distance = Config.distance\n    } = {}\n  ) {\n    this.query = null;\n    this.options = {\n      isCaseSensitive,\n      includeMatches,\n      minMatchCharLength,\n      findAllMatches,\n      ignoreLocation,\n      location,\n      threshold,\n      distance\n    };\n\n    this.pattern = isCaseSensitive ? pattern : pattern.toLowerCase();\n    this.query = parseQuery(this.pattern, this.options);\n  }\n\n  static condition(_, options) {\n    return options.useExtendedSearch\n  }\n\n  searchIn(text) {\n    const query = this.query;\n\n    if (!query) {\n      return {\n        isMatch: false,\n        score: 1\n      }\n    }\n\n    const { includeMatches, isCaseSensitive } = this.options;\n\n    text = isCaseSensitive ? text : text.toLowerCase();\n\n    let numMatches = 0;\n    let allIndices = [];\n    let totalScore = 0;\n\n    // ORs\n    for (let i = 0, qLen = query.length; i < qLen; i += 1) {\n      const searchers = query[i];\n\n      // Reset indices\n      allIndices.length = 0;\n      numMatches = 0;\n\n      // ANDs\n      for (let j = 0, pLen = searchers.length; j < pLen; j += 1) {\n        const searcher = searchers[j];\n        const { isMatch, indices, score } = searcher.search(text);\n\n        if (isMatch) {\n          numMatches += 1;\n          totalScore += score;\n          if (includeMatches) {\n            const type = searcher.constructor.type;\n            if (MultiMatchSet.has(type)) {\n              allIndices = [...allIndices, ...indices];\n            } else {\n              allIndices.push(indices);\n            }\n          }\n        } else {\n          totalScore = 0;\n          numMatches = 0;\n          allIndices.length = 0;\n          break\n        }\n      }\n\n      // OR condition, so if TRUE, return\n      if (numMatches) {\n        let result = {\n          isMatch: true,\n          score: totalScore / numMatches\n        };\n\n        if (includeMatches) {\n          result.indices = allIndices;\n        }\n\n        return result\n      }\n    }\n\n    // Nothing was matched\n    return {\n      isMatch: false,\n      score: 1\n    }\n  }\n}\n\nconst registeredSearchers = [];\n\nfunction register(...args) {\n  registeredSearchers.push(...args);\n}\n\nfunction createSearcher(pattern, options) {\n  for (let i = 0, len = registeredSearchers.length; i < len; i += 1) {\n    let searcherClass = registeredSearchers[i];\n    if (searcherClass.condition(pattern, options)) {\n      return new searcherClass(pattern, options)\n    }\n  }\n\n  return new BitapSearch(pattern, options)\n}\n\nconst LogicalOperator = {\n  AND: '$and',\n  OR: '$or'\n};\n\nconst KeyType = {\n  PATH: '$path',\n  PATTERN: '$val'\n};\n\nconst isExpression = (query) =>\n  !!(query[LogicalOperator.AND] || query[LogicalOperator.OR]);\n\nconst isPath = (query) => !!query[KeyType.PATH];\n\nconst isLeaf = (query) =>\n  !isArray(query) && isObject(query) && !isExpression(query);\n\nconst convertToExplicit = (query) => ({\n  [LogicalOperator.AND]: Object.keys(query).map((key) => ({\n    [key]: query[key]\n  }))\n});\n\n// When `auto` is `true`, the parse function will infer and initialize and add\n// the appropriate `Searcher` instance\nfunction parse(query, options, { auto = true } = {}) {\n  const next = (query) => {\n    let keys = Object.keys(query);\n\n    const isQueryPath = isPath(query);\n\n    if (!isQueryPath && keys.length > 1 && !isExpression(query)) {\n      return next(convertToExplicit(query))\n    }\n\n    if (isLeaf(query)) {\n      const key = isQueryPath ? query[KeyType.PATH] : keys[0];\n\n      const pattern = isQueryPath ? query[KeyType.PATTERN] : query[key];\n\n      if (!isString(pattern)) {\n        throw new Error(LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY(key))\n      }\n\n      const obj = {\n        keyId: createKeyId(key),\n        pattern\n      };\n\n      if (auto) {\n        obj.searcher = createSearcher(pattern, options);\n      }\n\n      return obj\n    }\n\n    let node = {\n      children: [],\n      operator: keys[0]\n    };\n\n    keys.forEach((key) => {\n      const value = query[key];\n\n      if (isArray(value)) {\n        value.forEach((item) => {\n          node.children.push(next(item));\n        });\n      }\n    });\n\n    return node\n  };\n\n  if (!isExpression(query)) {\n    query = convertToExplicit(query);\n  }\n\n  return next(query)\n}\n\n// Practical scoring function\nfunction computeScore(\n  results,\n  { ignoreFieldNorm = Config.ignoreFieldNorm }\n) {\n  results.forEach((result) => {\n    let totalScore = 1;\n\n    result.matches.forEach(({ key, norm, score }) => {\n      const weight = key ? key.weight : null;\n\n      totalScore *= Math.pow(\n        score === 0 && weight ? Number.EPSILON : score,\n        (weight || 1) * (ignoreFieldNorm ? 1 : norm)\n      );\n    });\n\n    result.score = totalScore;\n  });\n}\n\nfunction transformMatches(result, data) {\n  const matches = result.matches;\n  data.matches = [];\n\n  if (!isDefined(matches)) {\n    return\n  }\n\n  matches.forEach((match) => {\n    if (!isDefined(match.indices) || !match.indices.length) {\n      return\n    }\n\n    const { indices, value } = match;\n\n    let obj = {\n      indices,\n      value\n    };\n\n    if (match.key) {\n      obj.key = match.key.src;\n    }\n\n    if (match.idx > -1) {\n      obj.refIndex = match.idx;\n    }\n\n    data.matches.push(obj);\n  });\n}\n\nfunction transformScore(result, data) {\n  data.score = result.score;\n}\n\nfunction format(\n  results,\n  docs,\n  {\n    includeMatches = Config.includeMatches,\n    includeScore = Config.includeScore\n  } = {}\n) {\n  const transformers = [];\n\n  if (includeMatches) transformers.push(transformMatches);\n  if (includeScore) transformers.push(transformScore);\n\n  return results.map((result) => {\n    const { idx } = result;\n\n    const data = {\n      item: docs[idx],\n      refIndex: idx\n    };\n\n    if (transformers.length) {\n      transformers.forEach((transformer) => {\n        transformer(result, data);\n      });\n    }\n\n    return data\n  })\n}\n\nclass Fuse {\n  constructor(docs, options = {}, index) {\n    this.options = { ...Config, ...options };\n\n    if (\n      this.options.useExtendedSearch &&\n      !true\n    ) {}\n\n    this._keyStore = new KeyStore(this.options.keys);\n\n    this.setCollection(docs, index);\n  }\n\n  setCollection(docs, index) {\n    this._docs = docs;\n\n    if (index && !(index instanceof FuseIndex)) {\n      throw new Error(INCORRECT_INDEX_TYPE)\n    }\n\n    this._myIndex =\n      index ||\n      createIndex(this.options.keys, this._docs, {\n        getFn: this.options.getFn,\n        fieldNormWeight: this.options.fieldNormWeight\n      });\n  }\n\n  add(doc) {\n    if (!isDefined(doc)) {\n      return\n    }\n\n    this._docs.push(doc);\n    this._myIndex.add(doc);\n  }\n\n  remove(predicate = (/* doc, idx */) => false) {\n    const results = [];\n\n    for (let i = 0, len = this._docs.length; i < len; i += 1) {\n      const doc = this._docs[i];\n      if (predicate(doc, i)) {\n        this.removeAt(i);\n        i -= 1;\n        len -= 1;\n\n        results.push(doc);\n      }\n    }\n\n    return results\n  }\n\n  removeAt(idx) {\n    this._docs.splice(idx, 1);\n    this._myIndex.removeAt(idx);\n  }\n\n  getIndex() {\n    return this._myIndex\n  }\n\n  search(query, { limit = -1 } = {}) {\n    const {\n      includeMatches,\n      includeScore,\n      shouldSort,\n      sortFn,\n      ignoreFieldNorm\n    } = this.options;\n\n    let results = isString(query)\n      ? isString(this._docs[0])\n        ? this._searchStringList(query)\n        : this._searchObjectList(query)\n      : this._searchLogical(query);\n\n    computeScore(results, { ignoreFieldNorm });\n\n    if (shouldSort) {\n      results.sort(sortFn);\n    }\n\n    if (isNumber(limit) && limit > -1) {\n      results = results.slice(0, limit);\n    }\n\n    return format(results, this._docs, {\n      includeMatches,\n      includeScore\n    })\n  }\n\n  _searchStringList(query) {\n    const searcher = createSearcher(query, this.options);\n    const { records } = this._myIndex;\n    const results = [];\n\n    // Iterate over every string in the index\n    records.forEach(({ v: text, i: idx, n: norm }) => {\n      if (!isDefined(text)) {\n        return\n      }\n\n      const { isMatch, score, indices } = searcher.searchIn(text);\n\n      if (isMatch) {\n        results.push({\n          item: text,\n          idx,\n          matches: [{ score, value: text, norm, indices }]\n        });\n      }\n    });\n\n    return results\n  }\n\n  _searchLogical(query) {\n\n    const expression = parse(query, this.options);\n\n    const evaluate = (node, item, idx) => {\n      if (!node.children) {\n        const { keyId, searcher } = node;\n\n        const matches = this._findMatches({\n          key: this._keyStore.get(keyId),\n          value: this._myIndex.getValueForItemAtKeyId(item, keyId),\n          searcher\n        });\n\n        if (matches && matches.length) {\n          return [\n            {\n              idx,\n              item,\n              matches\n            }\n          ]\n        }\n\n        return []\n      }\n\n      const res = [];\n      for (let i = 0, len = node.children.length; i < len; i += 1) {\n        const child = node.children[i];\n        const result = evaluate(child, item, idx);\n        if (result.length) {\n          res.push(...result);\n        } else if (node.operator === LogicalOperator.AND) {\n          return []\n        }\n      }\n      return res\n    };\n\n    const records = this._myIndex.records;\n    const resultMap = {};\n    const results = [];\n\n    records.forEach(({ $: item, i: idx }) => {\n      if (isDefined(item)) {\n        let expResults = evaluate(expression, item, idx);\n\n        if (expResults.length) {\n          // Dedupe when adding\n          if (!resultMap[idx]) {\n            resultMap[idx] = { idx, item, matches: [] };\n            results.push(resultMap[idx]);\n          }\n          expResults.forEach(({ matches }) => {\n            resultMap[idx].matches.push(...matches);\n          });\n        }\n      }\n    });\n\n    return results\n  }\n\n  _searchObjectList(query) {\n    const searcher = createSearcher(query, this.options);\n    const { keys, records } = this._myIndex;\n    const results = [];\n\n    // List is Array<Object>\n    records.forEach(({ $: item, i: idx }) => {\n      if (!isDefined(item)) {\n        return\n      }\n\n      let matches = [];\n\n      // Iterate over every key (i.e, path), and fetch the value at that key\n      keys.forEach((key, keyIndex) => {\n        matches.push(\n          ...this._findMatches({\n            key,\n            value: item[keyIndex],\n            searcher\n          })\n        );\n      });\n\n      if (matches.length) {\n        results.push({\n          idx,\n          item,\n          matches\n        });\n      }\n    });\n\n    return results\n  }\n  _findMatches({ key, value, searcher }) {\n    if (!isDefined(value)) {\n      return []\n    }\n\n    let matches = [];\n\n    if (isArray(value)) {\n      value.forEach(({ v: text, i: idx, n: norm }) => {\n        if (!isDefined(text)) {\n          return\n        }\n\n        const { isMatch, score, indices } = searcher.searchIn(text);\n\n        if (isMatch) {\n          matches.push({\n            score,\n            key,\n            value: text,\n            idx,\n            norm,\n            indices\n          });\n        }\n      });\n    } else {\n      const { v: text, n: norm } = value;\n\n      const { isMatch, score, indices } = searcher.searchIn(text);\n\n      if (isMatch) {\n        matches.push({ score, key, value: text, norm, indices });\n      }\n    }\n\n    return matches\n  }\n}\n\nFuse.version = '6.6.2';\nFuse.createIndex = createIndex;\nFuse.parseIndex = parseIndex;\nFuse.config = Config;\n\n{\n  Fuse.parseQuery = parse;\n}\n\n{\n  register(ExtendedSearch);\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/node_modules/fuse.js/dist/fuse.esm.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/kbar/node_modules/react-virtual/dist/react-virtual.mjs":
/*!*****************************************************************************!*\
  !*** ./node_modules/kbar/node_modules/react-virtual/dist/react-virtual.mjs ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   defaultRangeExtractor: () => (/* binding */ defaultRangeExtractor),\n/* harmony export */   useVirtual: () => (/* binding */ useVirtual)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar props = ['bottom', 'height', 'left', 'right', 'top', 'width'];\n\nvar rectChanged = function rectChanged(a, b) {\n  if (a === void 0) {\n    a = {};\n  }\n\n  if (b === void 0) {\n    b = {};\n  }\n\n  return props.some(function (prop) {\n    return a[prop] !== b[prop];\n  });\n};\n\nvar observedNodes = /*#__PURE__*/new Map();\nvar rafId;\n\nvar run = function run() {\n  var changedStates = [];\n  observedNodes.forEach(function (state, node) {\n    var newRect = node.getBoundingClientRect();\n\n    if (rectChanged(newRect, state.rect)) {\n      state.rect = newRect;\n      changedStates.push(state);\n    }\n  });\n  changedStates.forEach(function (state) {\n    state.callbacks.forEach(function (cb) {\n      return cb(state.rect);\n    });\n  });\n  rafId = window.requestAnimationFrame(run);\n};\n\nfunction observeRect(node, cb) {\n  return {\n    observe: function observe() {\n      var wasEmpty = observedNodes.size === 0;\n\n      if (observedNodes.has(node)) {\n        observedNodes.get(node).callbacks.push(cb);\n      } else {\n        observedNodes.set(node, {\n          rect: undefined,\n          hasRectChanged: false,\n          callbacks: [cb]\n        });\n      }\n\n      if (wasEmpty) run();\n    },\n    unobserve: function unobserve() {\n      var state = observedNodes.get(node);\n\n      if (state) {\n        // Remove the callback\n        var index = state.callbacks.indexOf(cb);\n        if (index >= 0) state.callbacks.splice(index, 1); // Remove the node reference\n\n        if (!state.callbacks.length) observedNodes[\"delete\"](node); // Stop the loop\n\n        if (!observedNodes.size) cancelAnimationFrame(rafId);\n      }\n    }\n  };\n}\n\nvar useIsomorphicLayoutEffect = typeof window !== 'undefined' ? react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect : react__WEBPACK_IMPORTED_MODULE_0__.useEffect;\n\nfunction useRect(nodeRef, initialRect) {\n  if (initialRect === void 0) {\n    initialRect = {\n      width: 0,\n      height: 0\n    };\n  }\n\n  var _React$useState = react__WEBPACK_IMPORTED_MODULE_0__.useState(nodeRef.current),\n      element = _React$useState[0],\n      setElement = _React$useState[1];\n\n  var _React$useReducer = react__WEBPACK_IMPORTED_MODULE_0__.useReducer(rectReducer, initialRect),\n      rect = _React$useReducer[0],\n      dispatch = _React$useReducer[1];\n\n  var initialRectSet = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);\n  useIsomorphicLayoutEffect(function () {\n    if (nodeRef.current !== element) {\n      setElement(nodeRef.current);\n    }\n  });\n  useIsomorphicLayoutEffect(function () {\n    if (element && !initialRectSet.current) {\n      initialRectSet.current = true;\n\n      var _rect = element.getBoundingClientRect();\n\n      dispatch({\n        rect: _rect\n      });\n    }\n  }, [element]);\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(function () {\n    if (!element) {\n      return;\n    }\n\n    var observer = observeRect(element, function (rect) {\n      dispatch({\n        rect: rect\n      });\n    });\n    observer.observe();\n    return function () {\n      observer.unobserve();\n    };\n  }, [element]);\n  return rect;\n}\n\nfunction rectReducer(state, action) {\n  var rect = action.rect;\n\n  if (state.height !== rect.height || state.width !== rect.width) {\n    return rect;\n  }\n\n  return state;\n}\n\nvar defaultEstimateSize = function defaultEstimateSize() {\n  return 50;\n};\n\nvar defaultKeyExtractor = function defaultKeyExtractor(index) {\n  return index;\n};\n\nvar defaultMeasureSize = function defaultMeasureSize(el, horizontal) {\n  var key = horizontal ? 'offsetWidth' : 'offsetHeight';\n  return el[key];\n};\n\nvar defaultRangeExtractor = function defaultRangeExtractor(range) {\n  var start = Math.max(range.start - range.overscan, 0);\n  var end = Math.min(range.end + range.overscan, range.size - 1);\n  var arr = [];\n\n  for (var i = start; i <= end; i++) {\n    arr.push(i);\n  }\n\n  return arr;\n};\nfunction useVirtual(_ref) {\n  var _measurements;\n\n  var _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 0 : _ref$size,\n      _ref$estimateSize = _ref.estimateSize,\n      estimateSize = _ref$estimateSize === void 0 ? defaultEstimateSize : _ref$estimateSize,\n      _ref$overscan = _ref.overscan,\n      overscan = _ref$overscan === void 0 ? 1 : _ref$overscan,\n      _ref$paddingStart = _ref.paddingStart,\n      paddingStart = _ref$paddingStart === void 0 ? 0 : _ref$paddingStart,\n      _ref$paddingEnd = _ref.paddingEnd,\n      paddingEnd = _ref$paddingEnd === void 0 ? 0 : _ref$paddingEnd,\n      parentRef = _ref.parentRef,\n      horizontal = _ref.horizontal,\n      scrollToFn = _ref.scrollToFn,\n      useObserver = _ref.useObserver,\n      initialRect = _ref.initialRect,\n      onScrollElement = _ref.onScrollElement,\n      scrollOffsetFn = _ref.scrollOffsetFn,\n      _ref$keyExtractor = _ref.keyExtractor,\n      keyExtractor = _ref$keyExtractor === void 0 ? defaultKeyExtractor : _ref$keyExtractor,\n      _ref$measureSize = _ref.measureSize,\n      measureSize = _ref$measureSize === void 0 ? defaultMeasureSize : _ref$measureSize,\n      _ref$rangeExtractor = _ref.rangeExtractor,\n      rangeExtractor = _ref$rangeExtractor === void 0 ? defaultRangeExtractor : _ref$rangeExtractor;\n  var sizeKey = horizontal ? 'width' : 'height';\n  var scrollKey = horizontal ? 'scrollLeft' : 'scrollTop';\n  var latestRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef({\n    scrollOffset: 0,\n    measurements: []\n  });\n\n  var _React$useState = react__WEBPACK_IMPORTED_MODULE_0__.useState(0),\n      scrollOffset = _React$useState[0],\n      setScrollOffset = _React$useState[1];\n\n  latestRef.current.scrollOffset = scrollOffset;\n  var useMeasureParent = useObserver || useRect;\n\n  var _useMeasureParent = useMeasureParent(parentRef, initialRect),\n      outerSize = _useMeasureParent[sizeKey];\n\n  latestRef.current.outerSize = outerSize;\n  var defaultScrollToFn = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function (offset) {\n    if (parentRef.current) {\n      parentRef.current[scrollKey] = offset;\n    }\n  }, [parentRef, scrollKey]);\n  var resolvedScrollToFn = scrollToFn || defaultScrollToFn;\n  scrollToFn = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function (offset) {\n    resolvedScrollToFn(offset, defaultScrollToFn);\n  }, [defaultScrollToFn, resolvedScrollToFn]);\n\n  var _React$useState2 = react__WEBPACK_IMPORTED_MODULE_0__.useState({}),\n      measuredCache = _React$useState2[0],\n      setMeasuredCache = _React$useState2[1];\n\n  var measure = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function () {\n    return setMeasuredCache({});\n  }, []);\n  var pendingMeasuredCacheIndexesRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef([]);\n  var measurements = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(function () {\n    var min = pendingMeasuredCacheIndexesRef.current.length > 0 ? Math.min.apply(Math, pendingMeasuredCacheIndexesRef.current) : 0;\n    pendingMeasuredCacheIndexesRef.current = [];\n    var measurements = latestRef.current.measurements.slice(0, min);\n\n    for (var i = min; i < size; i++) {\n      var key = keyExtractor(i);\n      var measuredSize = measuredCache[key];\n\n      var _start = measurements[i - 1] ? measurements[i - 1].end : paddingStart;\n\n      var _size = typeof measuredSize === 'number' ? measuredSize : estimateSize(i);\n\n      var _end = _start + _size;\n\n      measurements[i] = {\n        index: i,\n        start: _start,\n        size: _size,\n        end: _end,\n        key: key\n      };\n    }\n\n    return measurements;\n  }, [estimateSize, measuredCache, paddingStart, size, keyExtractor]);\n  var totalSize = (((_measurements = measurements[size - 1]) == null ? void 0 : _measurements.end) || paddingStart) + paddingEnd;\n  latestRef.current.measurements = measurements;\n  latestRef.current.totalSize = totalSize;\n  var element = onScrollElement ? onScrollElement.current : parentRef.current;\n  var scrollOffsetFnRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(scrollOffsetFn);\n  scrollOffsetFnRef.current = scrollOffsetFn;\n  useIsomorphicLayoutEffect(function () {\n    if (!element) {\n      setScrollOffset(0);\n      return;\n    }\n\n    var onScroll = function onScroll(event) {\n      var offset = scrollOffsetFnRef.current ? scrollOffsetFnRef.current(event) : element[scrollKey];\n      setScrollOffset(offset);\n    };\n\n    onScroll();\n    element.addEventListener('scroll', onScroll, {\n      capture: false,\n      passive: true\n    });\n    return function () {\n      element.removeEventListener('scroll', onScroll);\n    };\n  }, [element, scrollKey]);\n\n  var _calculateRange = calculateRange(latestRef.current),\n      start = _calculateRange.start,\n      end = _calculateRange.end;\n\n  var indexes = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(function () {\n    return rangeExtractor({\n      start: start,\n      end: end,\n      overscan: overscan,\n      size: measurements.length\n    });\n  }, [start, end, overscan, measurements.length, rangeExtractor]);\n  var measureSizeRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(measureSize);\n  measureSizeRef.current = measureSize;\n  var virtualItems = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(function () {\n    var virtualItems = [];\n\n    var _loop = function _loop(k, len) {\n      var i = indexes[k];\n      var measurement = measurements[i];\n\n      var item = _extends(_extends({}, measurement), {}, {\n        measureRef: function measureRef(el) {\n          if (el) {\n            var measuredSize = measureSizeRef.current(el, horizontal);\n\n            if (measuredSize !== item.size) {\n              var _scrollOffset = latestRef.current.scrollOffset;\n\n              if (item.start < _scrollOffset) {\n                defaultScrollToFn(_scrollOffset + (measuredSize - item.size));\n              }\n\n              pendingMeasuredCacheIndexesRef.current.push(i);\n              setMeasuredCache(function (old) {\n                var _extends2;\n\n                return _extends(_extends({}, old), {}, (_extends2 = {}, _extends2[item.key] = measuredSize, _extends2));\n              });\n            }\n          }\n        }\n      });\n\n      virtualItems.push(item);\n    };\n\n    for (var k = 0, len = indexes.length; k < len; k++) {\n      _loop(k);\n    }\n\n    return virtualItems;\n  }, [indexes, defaultScrollToFn, horizontal, measurements]);\n  var mountedRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);\n  useIsomorphicLayoutEffect(function () {\n    if (mountedRef.current) {\n      setMeasuredCache({});\n    }\n\n    mountedRef.current = true;\n  }, [estimateSize]);\n  var scrollToOffset = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function (toOffset, _temp) {\n    var _ref2 = _temp === void 0 ? {} : _temp,\n        _ref2$align = _ref2.align,\n        align = _ref2$align === void 0 ? 'start' : _ref2$align;\n\n    var _latestRef$current = latestRef.current,\n        scrollOffset = _latestRef$current.scrollOffset,\n        outerSize = _latestRef$current.outerSize;\n\n    if (align === 'auto') {\n      if (toOffset <= scrollOffset) {\n        align = 'start';\n      } else if (toOffset >= scrollOffset + outerSize) {\n        align = 'end';\n      } else {\n        align = 'start';\n      }\n    }\n\n    if (align === 'start') {\n      scrollToFn(toOffset);\n    } else if (align === 'end') {\n      scrollToFn(toOffset - outerSize);\n    } else if (align === 'center') {\n      scrollToFn(toOffset - outerSize / 2);\n    }\n  }, [scrollToFn]);\n  var tryScrollToIndex = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function (index, _temp2) {\n    var _ref3 = _temp2 === void 0 ? {} : _temp2,\n        _ref3$align = _ref3.align,\n        align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n        rest = _objectWithoutPropertiesLoose(_ref3, [\"align\"]);\n\n    var _latestRef$current2 = latestRef.current,\n        measurements = _latestRef$current2.measurements,\n        scrollOffset = _latestRef$current2.scrollOffset,\n        outerSize = _latestRef$current2.outerSize;\n    var measurement = measurements[Math.max(0, Math.min(index, size - 1))];\n\n    if (!measurement) {\n      return;\n    }\n\n    if (align === 'auto') {\n      if (measurement.end >= scrollOffset + outerSize) {\n        align = 'end';\n      } else if (measurement.start <= scrollOffset) {\n        align = 'start';\n      } else {\n        return;\n      }\n    }\n\n    var toOffset = align === 'center' ? measurement.start + measurement.size / 2 : align === 'end' ? measurement.end : measurement.start;\n    scrollToOffset(toOffset, _extends({\n      align: align\n    }, rest));\n  }, [scrollToOffset, size]);\n  var scrollToIndex = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    // We do a double request here because of\n    // dynamic sizes which can cause offset shift\n    // and end up in the wrong spot. Unfortunately,\n    // we can't know about those dynamic sizes until\n    // we try and render them. So double down!\n    tryScrollToIndex.apply(void 0, args);\n    requestAnimationFrame(function () {\n      tryScrollToIndex.apply(void 0, args);\n    });\n  }, [tryScrollToIndex]);\n  return {\n    virtualItems: virtualItems,\n    totalSize: totalSize,\n    scrollToOffset: scrollToOffset,\n    scrollToIndex: scrollToIndex,\n    measure: measure\n  };\n}\n\nvar findNearestBinarySearch = function findNearestBinarySearch(low, high, getCurrentValue, value) {\n  while (low <= high) {\n    var middle = (low + high) / 2 | 0;\n    var currentValue = getCurrentValue(middle);\n\n    if (currentValue < value) {\n      low = middle + 1;\n    } else if (currentValue > value) {\n      high = middle - 1;\n    } else {\n      return middle;\n    }\n  }\n\n  if (low > 0) {\n    return low - 1;\n  } else {\n    return 0;\n  }\n};\n\nfunction calculateRange(_ref4) {\n  var measurements = _ref4.measurements,\n      outerSize = _ref4.outerSize,\n      scrollOffset = _ref4.scrollOffset;\n  var size = measurements.length - 1;\n\n  var getOffset = function getOffset(index) {\n    return measurements[index].start;\n  };\n\n  var start = findNearestBinarySearch(0, size, getOffset, scrollOffset);\n  var end = start;\n\n  while (end < size && measurements[end].end < scrollOffset + outerSize) {\n    end++;\n  }\n\n  return {\n    start: start,\n    end: end\n  };\n}\n\n\n//# sourceMappingURL=react-virtual.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/node_modules/react-virtual/dist/react-virtual.mjs\n");

/***/ })

};
;