"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/dashboard/layout",{

/***/ "(app-pages-browser)/./hooks/use-breadcrumbs.tsx":
/*!***********************************!*\
  !*** ./hooks/use-breadcrumbs.tsx ***!
  \***********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useBreadcrumbs: function() { return /* binding */ useBreadcrumbs; }\n/* harmony export */ });\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/navigation */ \"(app-pages-browser)/./node_modules/next/dist/api/navigation.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ useBreadcrumbs auto */ var _s = $RefreshSig$();\n\n\n// This allows to add custom title as well\nconst routeMapping = {\n    \"/dashboard\": [\n        {\n            title: \"Dashboard\",\n            link: \"/dashboard\"\n        }\n    ],\n    \"/dashboard/pelanggan\": [\n        {\n            title: \"Dashboard\",\n            link: \"/dashboard\"\n        },\n        {\n            title: \"Pelanggan\",\n            link: \"/dashboard/pelanggan\"\n        },\n        {\n            title: \"Tambah Pelanggan\",\n            link: \"/dashboard/pelanggan/new\"\n        }\n    ]\n};\nfunction useBreadcrumbs() {\n    _s();\n    const pathname = (0,next_navigation__WEBPACK_IMPORTED_MODULE_0__.usePathname)();\n    const breadcrumbs = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(()=>{\n        // Check if we have a custom mapping for this exact path\n        if (routeMapping[pathname]) {\n            return routeMapping[pathname];\n        }\n        // If no exact match, fall back to generating breadcrumbs from the path\n        const segments = pathname.split(\"/\").filter(Boolean);\n        return segments.map((segment, index)=>{\n            const path = \"/\".concat(segments.slice(0, index + 1).join(\"/\"));\n            return {\n                title: segment.charAt(0).toUpperCase() + segment.slice(1),\n                link: path\n            };\n        });\n    }, [\n        pathname\n    ]);\n    return breadcrumbs;\n}\n_s(useBreadcrumbs, \"lzHrD2Fs5ybWjp9r5oiJkMCICJY=\", false, function() {\n    return [\n        next_navigation__WEBPACK_IMPORTED_MODULE_0__.usePathname\n    ];\n});\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2hvb2tzL3VzZS1icmVhZGNydW1icy50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFFOEM7QUFDZDtBQU9oQywwQ0FBMEM7QUFDMUMsTUFBTUUsZUFBaUQ7SUFDckQsY0FBYztRQUFDO1lBQUVDLE9BQU87WUFBYUMsTUFBTTtRQUFhO0tBQUU7SUFDMUQsd0JBQXdCO1FBQ3RCO1lBQUVELE9BQU87WUFBYUMsTUFBTTtRQUFhO1FBQ3pDO1lBQUVELE9BQU87WUFBYUMsTUFBTTtRQUF1QjtRQUNuRDtZQUFFRCxPQUFPO1lBQW9CQyxNQUFNO1FBQTJCO0tBRS9EO0FBR0g7QUFFTyxTQUFTQzs7SUFDZCxNQUFNQyxXQUFXTiw0REFBV0E7SUFFNUIsTUFBTU8sY0FBY04sOENBQU9BLENBQUM7UUFDMUIsd0RBQXdEO1FBQ3hELElBQUlDLFlBQVksQ0FBQ0ksU0FBUyxFQUFFO1lBQzFCLE9BQU9KLFlBQVksQ0FBQ0ksU0FBUztRQUMvQjtRQUVBLHVFQUF1RTtRQUN2RSxNQUFNRSxXQUFXRixTQUFTRyxLQUFLLENBQUMsS0FBS0MsTUFBTSxDQUFDQztRQUM1QyxPQUFPSCxTQUFTSSxHQUFHLENBQUMsQ0FBQ0MsU0FBU0M7WUFDNUIsTUFBTUMsT0FBTyxJQUEyQyxPQUF2Q1AsU0FBU1EsS0FBSyxDQUFDLEdBQUdGLFFBQVEsR0FBR0csSUFBSSxDQUFDO1lBQ25ELE9BQU87Z0JBQ0xkLE9BQU9VLFFBQVFLLE1BQU0sQ0FBQyxHQUFHQyxXQUFXLEtBQUtOLFFBQVFHLEtBQUssQ0FBQztnQkFDdkRaLE1BQU1XO1lBQ1I7UUFDRjtJQUNGLEdBQUc7UUFBQ1Q7S0FBUztJQUViLE9BQU9DO0FBQ1Q7R0FyQmdCRjs7UUFDR0wsd0RBQVdBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2hvb2tzL3VzZS1icmVhZGNydW1icy50c3g/MWIyMiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIGNsaWVudCc7XG5cbmltcG9ydCB7IHVzZVBhdGhuYW1lIH0gZnJvbSAnbmV4dC9uYXZpZ2F0aW9uJztcbmltcG9ydCB7IHVzZU1lbW8gfSBmcm9tICdyZWFjdCc7XG5cbnR5cGUgQnJlYWRjcnVtYkl0ZW0gPSB7XG4gIHRpdGxlOiBzdHJpbmc7XG4gIGxpbms6IHN0cmluZztcbn07XG5cbi8vIFRoaXMgYWxsb3dzIHRvIGFkZCBjdXN0b20gdGl0bGUgYXMgd2VsbFxuY29uc3Qgcm91dGVNYXBwaW5nOiBSZWNvcmQ8c3RyaW5nLCBCcmVhZGNydW1iSXRlbVtdPiA9IHtcbiAgJy9kYXNoYm9hcmQnOiBbeyB0aXRsZTogJ0Rhc2hib2FyZCcsIGxpbms6ICcvZGFzaGJvYXJkJyB9XSxcbiAgJy9kYXNoYm9hcmQvcGVsYW5nZ2FuJzogW1xuICAgIHsgdGl0bGU6ICdEYXNoYm9hcmQnLCBsaW5rOiAnL2Rhc2hib2FyZCcgfSxcbiAgICB7IHRpdGxlOiAnUGVsYW5nZ2FuJywgbGluazogJy9kYXNoYm9hcmQvcGVsYW5nZ2FuJyB9LFxuICAgIHsgdGl0bGU6ICdUYW1iYWggUGVsYW5nZ2FuJywgbGluazogJy9kYXNoYm9hcmQvcGVsYW5nZ2FuL25ldycgfSxcbiAgICBcbiAgXSxcblxuICAvLyBBZGQgbW9yZSBjdXN0b20gbWFwcGluZ3MgYXMgbmVlZGVkXG59O1xuXG5leHBvcnQgZnVuY3Rpb24gdXNlQnJlYWRjcnVtYnMoKSB7XG4gIGNvbnN0IHBhdGhuYW1lID0gdXNlUGF0aG5hbWUoKTtcblxuICBjb25zdCBicmVhZGNydW1icyA9IHVzZU1lbW8oKCkgPT4ge1xuICAgIC8vIENoZWNrIGlmIHdlIGhhdmUgYSBjdXN0b20gbWFwcGluZyBmb3IgdGhpcyBleGFjdCBwYXRoXG4gICAgaWYgKHJvdXRlTWFwcGluZ1twYXRobmFtZV0pIHtcbiAgICAgIHJldHVybiByb3V0ZU1hcHBpbmdbcGF0aG5hbWVdO1xuICAgIH1cblxuICAgIC8vIElmIG5vIGV4YWN0IG1hdGNoLCBmYWxsIGJhY2sgdG8gZ2VuZXJhdGluZyBicmVhZGNydW1icyBmcm9tIHRoZSBwYXRoXG4gICAgY29uc3Qgc2VnbWVudHMgPSBwYXRobmFtZS5zcGxpdCgnLycpLmZpbHRlcihCb29sZWFuKTtcbiAgICByZXR1cm4gc2VnbWVudHMubWFwKChzZWdtZW50LCBpbmRleCkgPT4ge1xuICAgICAgY29uc3QgcGF0aCA9IGAvJHtzZWdtZW50cy5zbGljZSgwLCBpbmRleCArIDEpLmpvaW4oJy8nKX1gO1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgdGl0bGU6IHNlZ21lbnQuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkgKyBzZWdtZW50LnNsaWNlKDEpLFxuICAgICAgICBsaW5rOiBwYXRoXG4gICAgICB9O1xuICAgIH0pO1xuICB9LCBbcGF0aG5hbWVdKTtcblxuICByZXR1cm4gYnJlYWRjcnVtYnM7XG59XG4iXSwibmFtZXMiOlsidXNlUGF0aG5hbWUiLCJ1c2VNZW1vIiwicm91dGVNYXBwaW5nIiwidGl0bGUiLCJsaW5rIiwidXNlQnJlYWRjcnVtYnMiLCJwYXRobmFtZSIsImJyZWFkY3J1bWJzIiwic2VnbWVudHMiLCJzcGxpdCIsImZpbHRlciIsIkJvb2xlYW4iLCJtYXAiLCJzZWdtZW50IiwiaW5kZXgiLCJwYXRoIiwic2xpY2UiLCJqb2luIiwiY2hhckF0IiwidG9VcHBlckNhc2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./hooks/use-breadcrumbs.tsx\n"));

/***/ })

});