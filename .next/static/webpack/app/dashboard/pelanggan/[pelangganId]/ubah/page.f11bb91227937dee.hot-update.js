"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/dashboard/pelanggan/[pelangganId]/ubah/page",{

/***/ "(app-pages-browser)/./lib/utils.ts":
/*!**********************!*\
  !*** ./lib/utils.ts ***!
  \**********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cn: function() { return /* binding */ cn; },\n/* harmony export */   convertToIndonesianPhone: function() { return /* binding */ convertToIndonesianPhone; },\n/* harmony export */   formatBytes: function() { return /* binding */ formatBytes; },\n/* harmony export */   formatDate: function() { return /* binding */ formatDate; },\n/* harmony export */   formatToIndonesianCurrency: function() { return /* binding */ formatToIndonesianCurrency; },\n/* harmony export */   getAge: function() { return /* binding */ getAge; },\n/* harmony export */   getDistinctValues: function() { return /* binding */ getDistinctValues; },\n/* harmony export */   hasDraggableData: function() { return /* binding */ hasDraggableData; },\n/* harmony export */   simplifyIndonesianValue: function() { return /* binding */ simplifyIndonesianValue; }\n/* harmony export */ });\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! clsx */ \"(app-pages-browser)/./node_modules/clsx/dist/clsx.mjs\");\n/* harmony import */ var tailwind_merge__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tailwind-merge */ \"(app-pages-browser)/./node_modules/tailwind-merge/dist/lib/tw-merge.mjs\");\n/* harmony import */ var _lib_prisma__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/prisma */ \"(app-pages-browser)/./lib/prisma.ts\");\n\n\n\nfunction cn() {\n    for(var _len = arguments.length, inputs = new Array(_len), _key = 0; _key < _len; _key++){\n        inputs[_key] = arguments[_key];\n    }\n    return (0,tailwind_merge__WEBPACK_IMPORTED_MODULE_2__.twMerge)((0,clsx__WEBPACK_IMPORTED_MODULE_0__.clsx)(inputs));\n}\nfunction hasDraggableData(entry) {\n    if (!entry) {\n        return false;\n    }\n    const data = entry.data.current;\n    if ((data === null || data === void 0 ? void 0 : data.type) === \"Column\" || (data === null || data === void 0 ? void 0 : data.type) === \"Task\") {\n        return true;\n    }\n    return false;\n}\nfunction formatBytes(bytes) {\n    let opts = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n    const { decimals = 0, sizeType = \"normal\" } = opts;\n    const sizes = [\n        \"Bytes\",\n        \"KB\",\n        \"MB\",\n        \"GB\",\n        \"TB\"\n    ];\n    const accurateSizes = [\n        \"Bytes\",\n        \"KiB\",\n        \"MiB\",\n        \"GiB\",\n        \"TiB\"\n    ];\n    if (bytes === 0) return \"0 Byte\";\n    const i = Math.floor(Math.log(bytes) / Math.log(1024));\n    var _accurateSizes_i, _sizes_i;\n    return \"\".concat((bytes / Math.pow(1024, i)).toFixed(decimals), \" \").concat(sizeType === \"accurate\" ? (_accurateSizes_i = accurateSizes[i]) !== null && _accurateSizes_i !== void 0 ? _accurateSizes_i : \"Bytest\" : (_sizes_i = sizes[i]) !== null && _sizes_i !== void 0 ? _sizes_i : \"Bytes\");\n}\nconst formatDate = (dateStr)=>{\n    const date = new Date(dateStr);\n    const formatter = new Intl.DateTimeFormat(\"id-ID\", {\n        dateStyle: \"medium\",\n        timeStyle: \"short\"\n    });\n    return formatter.format(date);\n};\nconst getAge = (dateStr)=>{\n    const today = new Date();\n    const birthDate = new Date(dateStr);\n    let age = today.getFullYear() - birthDate.getFullYear();\n    const m = today.getMonth() - birthDate.getMonth();\n    if (m < 0 || m === 0 && today.getDate() < birthDate.getDate()) {\n        age--;\n    }\n    return age;\n};\nconst formatToIndonesianCurrency = (value)=>{\n    return new Intl.NumberFormat(\"id-ID\", {\n        style: \"currency\",\n        currency: \"IDR\",\n        minimumFractionDigits: 2\n    }).format(value);\n};\nconst simplifyIndonesianValue = (value)=>{\n    if (value >= 1000000000) {\n        // Convert to 'M' for billion\n        return \"\".concat((value / 1000000000).toFixed(1).replace(/\\.0$/, \"\"), \"M\");\n    } else if (value >= 1000000) {\n        // Convert to 'jt' for million\n        return \"\".concat((value / 1000000).toFixed(1).replace(/\\.0$/, \"\"), \"jt\");\n    } else if (value >= 1000) {\n        // Convert to 'rb' for thousand\n        return \"\".concat((value / 1000).toFixed(1).replace(/\\.0$/, \"\"), \"rb\");\n    }\n    // Return as is if less than a thousand\n    return \"\".concat(value);\n};\n/**\n * Fetch distinct values for a given column in a specified table.\n *\n * @param tableName - The table to query.\n * @param columnName - The column to fetch distinct values from.\n * @returns A promise resolving to an array of distinct values.\n */ async function getDistinctValues(tableName, columnName) {\n    // Dynamically access the table using `prisma[tableName]` with a cast\n    const result = await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__.prisma[tableName].findMany({\n        select: {\n            [columnName]: true\n        },\n        distinct: [\n            columnName\n        ],\n        orderBy: {\n            [columnName]: \"asc\"\n        },\n        where: {\n            [columnName]: {\n                not: null\n            }\n        }\n    });\n    // Extract and return the distinct column values\n    return result.map((item)=>item[columnName]);\n}\nconst convertToIndonesianPhone = (phoneNumber)=>{\n    if (phoneNumber.startsWith(\"0\")) {\n        return \"62\".concat(phoneNumber.slice(1));\n    }\n    return phoneNumber; // Return unchanged if it doesn't start with 0\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/utils.ts\n"));

/***/ })

});