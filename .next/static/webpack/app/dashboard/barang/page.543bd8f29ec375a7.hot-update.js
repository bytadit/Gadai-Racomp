"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/dashboard/barang/page",{

/***/ "(app-pages-browser)/./app/dashboard/barang/_components/item-tables/use-item-table-filters.tsx":
/*!*********************************************************************************!*\
  !*** ./app/dashboard/barang/_components/item-tables/use-item-table-filters.tsx ***!
  \*********************************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TYPE_OPTIONS: function() { return /* binding */ TYPE_OPTIONS; },\n/* harmony export */   useItemTableFilters: function() { return /* binding */ useItemTableFilters; }\n/* harmony export */ });\n/* harmony import */ var _lib_searchparams__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/searchparams */ \"(app-pages-browser)/./lib/searchparams.ts\");\n/* harmony import */ var nuqs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! nuqs */ \"(app-pages-browser)/./node_modules/nuqs/dist/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* __next_internal_client_entry_do_not_use__ TYPE_OPTIONS,useItemTableFilters auto */ var _s = $RefreshSig$();\n\n\n\n// import { getDistinctBrands, getItemDistinctYears } from '@/lib/utils';\nconst TYPE_OPTIONS = [\n    {\n        value: \"KENDARAAN\",\n        label: \"Kendaraan\"\n    },\n    {\n        value: \"OTHER\",\n        label: \"Other\"\n    }\n];\nfunction useItemTableFilters() {\n    _s();\n    const [searchQuery, setSearchQuery] = (0,nuqs__WEBPACK_IMPORTED_MODULE_1__.useQueryState)(\"q\", _lib_searchparams__WEBPACK_IMPORTED_MODULE_0__.searchParams.q.withOptions({\n        shallow: false,\n        throttleMs: 1000\n    }).withDefault(\"\"));\n    const [yearOptions, setYearOptions] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)([]);\n    const [selectedYear, setSelectedYear] = (0,nuqs__WEBPACK_IMPORTED_MODULE_1__.useQueryState)(\"year\", _lib_searchparams__WEBPACK_IMPORTED_MODULE_0__.searchParams.year.withOptions({\n        shallow: false\n    }).withDefault(\"\"));\n    const [brandOptions, setBrandOptions] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)([]);\n    const [selectedBrand, setSelectedBrand] = (0,nuqs__WEBPACK_IMPORTED_MODULE_1__.useQueryState)(\"brand\", _lib_searchparams__WEBPACK_IMPORTED_MODULE_0__.searchParams.brand.withOptions({\n        shallow: false\n    }).withDefault(\"\"));\n    const [typeFilter, setTypeFilter] = (0,nuqs__WEBPACK_IMPORTED_MODULE_1__.useQueryState)(\"type\", _lib_searchparams__WEBPACK_IMPORTED_MODULE_0__.searchParams.type.withOptions({\n        shallow: false\n    }).withDefault(\"\"));\n    const [page, setPage] = (0,nuqs__WEBPACK_IMPORTED_MODULE_1__.useQueryState)(\"page\", _lib_searchparams__WEBPACK_IMPORTED_MODULE_0__.searchParams.page.withDefault(1));\n    const fetchYears = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)(async ()=>{\n        try {\n            const response = await fetch(\"/api/utils/get-distinct-values\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    tableName: \"Item\",\n                    columnName: \"year\",\n                    filters: {\n                        type: typeFilter\n                    }\n                })\n            });\n            const { data } = await response.json();\n            const options = data.filter((entry)=>entry.value !== null).sort((a, b)=>b.value - a.value).map((entry)=>({\n                    value: entry.value.toString(),\n                    label: entry.value.toString(),\n                    count: entry.count,\n                    rawValue: entry.value\n                }));\n            setYearOptions(options);\n        } catch (error) {\n            console.error(\"Failed to fetch years:\", error);\n            setYearOptions([]);\n        }\n    }, [\n        typeFilter\n    ]); // Add other filter dependencies here\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        fetchYears();\n    }, [\n        fetchYears\n    ]);\n    const fetchBrands = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)(async ()=>{\n        try {\n            const response = await fetch(\"/api/utils/get-distinct-values\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    tableName: \"Item\",\n                    columnName: \"brand\",\n                    filters: {\n                        type: typeFilter,\n                        year: selectedYear\n                    }\n                })\n            });\n            const { data } = await response.json();\n            const options = data.filter((entry)=>entry.value !== null).sort((a, b)=>b.value - a.value).map((entry)=>({\n                    value: entry.value.toString(),\n                    label: entry.value.toString(),\n                    count: entry.count,\n                    rawValue: entry.value\n                }));\n            setBrandOptions(options);\n        } catch (error) {\n            console.error(\"Failed to fetch brands:\", error);\n            setBrandOptions([]);\n        }\n    }, [\n        typeFilter,\n        selectedYear\n    ]); // Add other filter dependencies here\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        fetchBrands();\n    }, [\n        fetchBrands\n    ]);\n    // Add effect to reset brand filter when other filters change\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        setSelectedBrand(null);\n    }, [\n        typeFilter,\n        selectedYear,\n        setSelectedBrand\n    ]);\n    const resetFilters = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)(()=>{\n        setSearchQuery(null);\n        setSelectedBrand(null);\n        setTypeFilter(null);\n        setSelectedYear(null);\n        setPage(1);\n    }, [\n        setSearchQuery,\n        setTypeFilter,\n        // setBrandFilter,\n        setSelectedBrand,\n        setPage,\n        setSelectedYear\n    ]);\n    const isAnyFilterActive = (0,react__WEBPACK_IMPORTED_MODULE_2__.useMemo)(()=>{\n        return !!searchQuery || !!selectedYear || !!typeFilter || !!selectedBrand;\n    }, [\n        searchQuery,\n        typeFilter,\n        selectedBrand,\n        selectedYear\n    ]);\n    return {\n        searchQuery,\n        setSearchQuery,\n        page,\n        setPage,\n        resetFilters,\n        isAnyFilterActive,\n        typeFilter,\n        setTypeFilter,\n        yearOptions,\n        selectedYear,\n        setSelectedYear,\n        brandOptions,\n        selectedBrand,\n        setSelectedBrand,\n        fetchBrands\n    };\n}\n_s(useItemTableFilters, \"j8/9Dg/XrplwuZrIZYlHQjdfmbg=\", false, function() {\n    return [\n        nuqs__WEBPACK_IMPORTED_MODULE_1__.useQueryState,\n        nuqs__WEBPACK_IMPORTED_MODULE_1__.useQueryState,\n        nuqs__WEBPACK_IMPORTED_MODULE_1__.useQueryState,\n        nuqs__WEBPACK_IMPORTED_MODULE_1__.useQueryState,\n        nuqs__WEBPACK_IMPORTED_MODULE_1__.useQueryState\n    ];\n});\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/dashboard/barang/_components/item-tables/use-item-table-filters.tsx\n"));

/***/ })

});