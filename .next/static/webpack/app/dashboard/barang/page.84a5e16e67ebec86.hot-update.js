"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/dashboard/barang/page",{

/***/ "(app-pages-browser)/./app/dashboard/barang/_components/item-tables/use-item-table-filters.tsx":
/*!*********************************************************************************!*\
  !*** ./app/dashboard/barang/_components/item-tables/use-item-table-filters.tsx ***!
  \*********************************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TYPE_OPTIONS: function() { return /* binding */ TYPE_OPTIONS; },\n/* harmony export */   useItemTableFilters: function() { return /* binding */ useItemTableFilters; }\n/* harmony export */ });\n/* harmony import */ var _lib_searchparams__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/searchparams */ \"(app-pages-browser)/./lib/searchparams.ts\");\n/* harmony import */ var nuqs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! nuqs */ \"(app-pages-browser)/./node_modules/nuqs/dist/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* __next_internal_client_entry_do_not_use__ TYPE_OPTIONS,useItemTableFilters auto */ var _s = $RefreshSig$();\n\n\n\n// import { getDistinctBrands, getItemDistinctYears } from '@/lib/utils';\nconst TYPE_OPTIONS = [\n    {\n        value: \"KENDARAAN\",\n        label: \"Kendaraan\"\n    },\n    {\n        value: \"OTHER\",\n        label: \"Other\"\n    }\n];\nfunction useItemTableFilters() {\n    _s();\n    const [searchQuery, setSearchQuery] = (0,nuqs__WEBPACK_IMPORTED_MODULE_1__.useQueryState)(\"q\", _lib_searchparams__WEBPACK_IMPORTED_MODULE_0__.searchParams.q.withOptions({\n        shallow: false,\n        throttleMs: 1000\n    }).withDefault(\"\"));\n    const [yearOptions, setYearOptions] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)([]);\n    const [selectedYear, setSelectedYear] = (0,nuqs__WEBPACK_IMPORTED_MODULE_1__.useQueryState)(\"year\", _lib_searchparams__WEBPACK_IMPORTED_MODULE_0__.searchParams.year.withOptions({\n        shallow: false\n    }).withDefault(\"\"));\n    const [brandOptions, setBrandOptions] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)([]);\n    const [selectedBrand, setSelectedBrand] = (0,nuqs__WEBPACK_IMPORTED_MODULE_1__.useQueryState)(\"brand\", _lib_searchparams__WEBPACK_IMPORTED_MODULE_0__.searchParams.brand.withOptions({\n        shallow: false\n    }).withDefault(\"\"));\n    const [typeFilter, setTypeFilter] = (0,nuqs__WEBPACK_IMPORTED_MODULE_1__.useQueryState)(\"type\", _lib_searchparams__WEBPACK_IMPORTED_MODULE_0__.searchParams.type.withOptions({\n        shallow: false\n    }).withDefault(\"\"));\n    const [page, setPage] = (0,nuqs__WEBPACK_IMPORTED_MODULE_1__.useQueryState)(\"page\", _lib_searchparams__WEBPACK_IMPORTED_MODULE_0__.searchParams.page.withDefault(1));\n    const fetchYears = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)(async ()=>{\n        try {\n            const response = await fetch(\"/api/utils/get-distinct-values\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    tableName: \"Item\",\n                    columnName: \"year\",\n                    filters: {\n                        type: typeFilter\n                    }\n                })\n            });\n            const { data } = await response.json();\n            const options = data.filter((entry)=>entry.value !== null).sort((a, b)=>b.value - a.value).map((entry)=>({\n                    value: entry.value.toString(),\n                    label: entry.value.toString(),\n                    count: entry.count,\n                    rawValue: entry.value\n                }));\n            setYearOptions(options);\n        } catch (error) {\n            console.error(\"Failed to fetch years:\", error);\n            setYearOptions([]);\n        }\n    }, [\n        typeFilter\n    ]); // Add other filter dependencies here\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        fetchYears();\n    }, [\n        fetchYears\n    ]);\n    const fetchBrands = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)(async ()=>{\n        try {\n            const response = await fetch(\"/api/utils/get-distinct-values\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    tableName: \"Item\",\n                    columnName: \"brand\",\n                    filters: {\n                        type: typeFilter,\n                        year: selectedYear\n                    }\n                })\n            });\n            const { data } = await response.json();\n            const options = data.filter((entry)=>entry.value !== null).sort((a, b)=>b.value - a.value).map((entry)=>({\n                    value: entry.value.toString(),\n                    label: entry.value.toString(),\n                    count: entry.count,\n                    rawValue: entry.value\n                }));\n            setBrandOptions(options);\n        } catch (error) {\n            console.error(\"Failed to fetch brands:\", error);\n            setBrandOptions([]);\n        }\n    }, [\n        typeFilter,\n        selectedYear\n    ]); // Add other filter dependencies here\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        fetchBrands();\n    }, [\n        fetchBrands\n    ]);\n    // Add effect to reset brand filter when other filters change\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        setSelectedBrand(null);\n    }, [\n        typeFilter,\n        selectedYear,\n        setSelectedBrand\n    ]);\n    const resetFilters = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)(()=>{\n        setSearchQuery(null);\n        setSelectedBrand(null);\n        setTypeFilter(null);\n        setSelectedYear(null);\n        setPage(1);\n    }, [\n        setSearchQuery,\n        setTypeFilter,\n        setSelectedBrand,\n        setPage,\n        setSelectedYear\n    ]);\n    const isAnyFilterActive = (0,react__WEBPACK_IMPORTED_MODULE_2__.useMemo)(()=>{\n        return !!searchQuery || !!selectedYear || !!typeFilter || !!selectedBrand;\n    }, [\n        searchQuery,\n        typeFilter,\n        selectedBrand,\n        selectedYear\n    ]);\n    return {\n        searchQuery,\n        setSearchQuery,\n        page,\n        setPage,\n        resetFilters,\n        isAnyFilterActive,\n        typeFilter,\n        setTypeFilter,\n        yearOptions,\n        selectedYear,\n        setSelectedYear,\n        brandOptions,\n        selectedBrand,\n        setSelectedBrand,\n        fetchBrands\n    };\n}\n_s(useItemTableFilters, \"j8/9Dg/XrplwuZrIZYlHQjdfmbg=\", false, function() {\n    return [\n        nuqs__WEBPACK_IMPORTED_MODULE_1__.useQueryState,\n        nuqs__WEBPACK_IMPORTED_MODULE_1__.useQueryState,\n        nuqs__WEBPACK_IMPORTED_MODULE_1__.useQueryState,\n        nuqs__WEBPACK_IMPORTED_MODULE_1__.useQueryState,\n        nuqs__WEBPACK_IMPORTED_MODULE_1__.useQueryState\n    ];\n});\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9kYXNoYm9hcmQvYmFyYW5nL19jb21wb25lbnRzL2l0ZW0tdGFibGVzL3VzZS1pdGVtLXRhYmxlLWZpbHRlcnMudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFFa0Q7QUFDYjtBQUM2QjtBQUNsRSx5RUFBeUU7QUFFbEUsTUFBTU0sZUFBZTtJQUN4QjtRQUFFQyxPQUFPO1FBQWFDLE9BQU87SUFBWTtJQUN6QztRQUFFRCxPQUFPO1FBQVNDLE9BQU87SUFBUTtDQUNwQyxDQUFDO0FBR0ssU0FBU0M7O0lBQ1osTUFBTSxDQUFDQyxhQUFhQyxlQUFlLEdBQUdWLG1EQUFhQSxDQUMvQyxLQUNBRCwyREFBWUEsQ0FBQ1ksQ0FBQyxDQUNUQyxXQUFXLENBQUM7UUFBRUMsU0FBUztRQUFPQyxZQUFZO0lBQUssR0FDL0NDLFdBQVcsQ0FBQztJQUdyQixNQUFNLENBQUNDLGFBQWFDLGVBQWUsR0FBR2QsK0NBQVFBLENBRTVDLEVBQUU7SUFFSixNQUFNLENBQUNlLGNBQWNDLGdCQUFnQixHQUFHbkIsbURBQWFBLENBQ2pELFFBQ0FELDJEQUFZQSxDQUFDcUIsSUFBSSxDQUFDUixXQUFXLENBQUM7UUFBRUMsU0FBUztJQUFNLEdBQUdFLFdBQVcsQ0FBQztJQUVsRSxNQUFNLENBQUNNLGNBQWNDLGdCQUFnQixHQUFHbkIsK0NBQVFBLENBRTlDLEVBQUU7SUFFSixNQUFNLENBQUNvQixlQUFlQyxpQkFBaUIsR0FBR3hCLG1EQUFhQSxDQUNuRCxTQUNBRCwyREFBWUEsQ0FBQzBCLEtBQUssQ0FBQ2IsV0FBVyxDQUFDO1FBQUVDLFNBQVM7SUFBTSxHQUFHRSxXQUFXLENBQUM7SUFHbkUsTUFBTSxDQUFDVyxZQUFZQyxjQUFjLEdBQUczQixtREFBYUEsQ0FDN0MsUUFDQUQsMkRBQVlBLENBQUM2QixJQUFJLENBQUNoQixXQUFXLENBQUM7UUFBRUMsU0FBUztJQUFNLEdBQUdFLFdBQVcsQ0FBQztJQUdsRSxNQUFNLENBQUNjLE1BQU1D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dUMsb0JBQW9CeEQsOENBQU9BLENBQUM7UUFDOUIsT0FDSSxDQUFDLENBQUNPLGVBQWUsQ0FBQyxDQUFDUyxnQkFBZ0IsQ0FBQyxDQUFDUSxjQUFjLENBQUMsQ0FBQ0g7SUFFN0QsR0FBRztRQUFDZDtRQUFhaUI7UUFBWUg7UUFBZUw7S0FBYTtJQUd6RCxPQUFPO1FBQ0hUO1FBQ0FDO1FBQ0FtQjtRQUNBQztRQUNBMkI7UUFDQUM7UUFDQWhDO1FBQ0FDO1FBQ0FYO1FBQ0FFO1FBQ0FDO1FBQ0FFO1FBQ0FFO1FBQ0FDO1FBQ0FnQztJQUNKO0FBQ0o7R0FwS2dCaEQ7O1FBQzBCUiwrQ0FBYUE7UUFXWEEsK0NBQWFBO1FBUVhBLCtDQUFhQTtRQUtuQkEsK0NBQWFBO1FBS3pCQSwrQ0FBYUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vYXBwL2Rhc2hib2FyZC9iYXJhbmcvX2NvbXBvbmVudHMvaXRlbS10YWJsZXMvdXNlLWl0ZW0tdGFibGUtZmlsdGVycy50c3g/Nzg5NiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIGNsaWVudCc7XG5cbmltcG9ydCB7IHNlYXJjaFBhcmFtcyB9IGZyb20gJ0AvbGliL3NlYXJjaHBhcmFtcyc7XG5pbXBvcnQgeyB1c2VRdWVyeVN0YXRlIH0gZnJvbSAnbnVxcyc7XG5pbXBvcnQgeyB1c2VFZmZlY3QsIHVzZU1lbW8sIHVzZVN0YXRlLCB1c2VDYWxsYmFjayB9IGZyb20gJ3JlYWN0Jztcbi8vIGltcG9ydCB7IGdldERpc3RpbmN0QnJhbmRzLCBnZXRJdGVtRGlzdGluY3RZZWFycyB9IGZyb20gJ0AvbGliL3V0aWxzJztcblxuZXhwb3J0IGNvbnN0IFRZUEVfT1BUSU9OUyA9IFtcbiAgICB7IHZhbHVlOiAnS0VOREFSQUFOJywgbGFiZWw6ICdLZW5kYXJhYW4nIH0sXG4gICAgeyB2YWx1ZTogJ09USEVSJywgbGFiZWw6ICdPdGhlcicgfSxcbl07XG5cblxuZXhwb3J0IGZ1bmN0aW9uIHVzZUl0ZW1UYWJsZUZpbHRlcnMoKSB7XG4gICAgY29uc3QgW3NlYXJjaFF1ZXJ5LCBzZXRTZWFyY2hRdWVyeV0gPSB1c2VRdWVyeVN0YXRlKFxuICAgICAgICAncScsXG4gICAgICAgIHNlYXJjaFBhcmFtcy5xXG4gICAgICAgICAgICAud2l0aE9wdGlvbnMoeyBzaGFsbG93OiBmYWxzZSwgdGhyb3R0bGVNczogMTAwMCB9KVxuICAgICAgICAgICAgLndpdGhEZWZhdWx0KCcnKSxcbiAgICApO1xuXG4gICAgY29uc3QgW3llYXJPcHRpb25zLCBzZXRZZWFyT3B0aW9uc10gPSB1c2VTdGF0ZTxcbiAgICAgICAgeyB2YWx1ZTogbnVtYmVyOyBsYWJlbDogc3RyaW5nOyBjb3VudDogbnVtYmVyIH1bXVxuICAgID4oW10pO1xuXG4gICAgY29uc3QgW3NlbGVjdGVkWWVhciwgc2V0U2VsZWN0ZWRZZWFyXSA9IHVzZVF1ZXJ5U3RhdGUoXG4gICAgICAgICd5ZWFyJyxcbiAgICAgICAgc2VhcmNoUGFyYW1zLnllYXIud2l0aE9wdGlvbnMoeyBzaGFsbG93OiBmYWxzZSB9KS53aXRoRGVmYXVsdCgnJyksXG4gICAgKTtcbiAgICBjb25zdCBbYnJhbmRPcHRpb25zLCBzZXRCcmFuZE9wdGlvbnNdID0gdXNlU3RhdGU8XG4gICAgICAgIHsgdmFsdWU6IHN0cmluZzsgbGFiZWw6IHN0cmluZzsgY291bnQ6IG51bWJlciB9W11cbiAgICA+KFtdKTtcblxuICAgIGNvbnN0IFtzZWxlY3RlZEJyYW5kLCBzZXRTZWxlY3RlZEJyYW5kXSA9IHVzZVF1ZXJ5U3RhdGUoXG4gICAgICAgICdicmFuZCcsXG4gICAgICAgIHNlYXJjaFBhcmFtcy5icmFuZC53aXRoT3B0aW9ucyh7IHNoYWxsb3c6IGZhbHNlIH0pLndpdGhEZWZhdWx0KCcnKSxcbiAgICApO1xuXG4gICAgY29uc3QgW3R5cGVGaWx0ZXIsIHNldFR5cGVGaWx0ZXJdID0gdXNlUXVlcnlTdGF0ZShcbiAgICAgICAgJ3R5cGUnLFxuICAgICAgICBzZWFyY2hQYXJhbXMudHlwZS53aXRoT3B0aW9ucyh7IHNoYWxsb3c6IGZhbHNlIH0pLndpdGhEZWZhdWx0KCcnKSxcbiAgICApO1xuXG4gICAgY29uc3QgW3BhZ2UsIHNldFBhZ2VdID0gdXNlUXVlcnlTdGF0ZShcbiAgICAgICAgJ3BhZ2UnLFxuICAgICAgICBzZWFyY2hQYXJhbXMucGFnZS53aXRoRGVmYXVsdCgxKSxcbiAgICApO1xuICAgIGNvbnN0IGZldGNoWWVhcnMgPSB1c2VDYWxsYmFjayhhc3luYyAoKSA9PiB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKCcvYXBpL3V0aWxzL2dldC1kaXN0aW5jdC12YWx1ZXMnLCB7XG4gICAgICAgICAgICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICAgICAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICAgICAgICAgICAgICB0YWJsZU5hbWU6ICdJdGVtJyxcbiAgICAgICAgICAgICAgICAgICAgY29sdW1uTmFtZTogJ3llYXInLFxuICAgICAgICAgICAgICAgICAgICBmaWx0ZXJzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiB0eXBlRmlsdGVyLFxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gQWRkIG90aGVyIGFjdGl2ZSBmaWx0ZXJzIGhlcmVcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICBjb25zdCB7IGRhdGEgfSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcblxuICAgICAgICAgICAgY29uc3Qgb3B0aW9ucyA9IGRhdGFcbiAgICAgICAgICAgICAgICAuZmlsdGVyKChlbnRyeTogeyB2YWx1ZTogYW55IH0pID0+IGVudHJ5LnZhbHVlICE9PSBudWxsKVxuICAgICAgICAgICAgICAgIC5zb3J0KFxuICAgICAgICAgICAgICAgICAgICAoYTogeyB2YWx1ZTogbnVtYmVyIH0sIGI6IHsgdmFsdWU6IG51bWJlciB9KSA9PlxuICAgICAgICAgICAgICAgICAgICAgICAgYi52YWx1ZSAtIGEudmFsdWUsXG4gICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgIC5tYXAoKGVudHJ5OiB7IHZhbHVlOiBudW1iZXI7IGNvdW50OiBudW1iZXIgfSkgPT4gKHtcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IGVudHJ5LnZhbHVlLnRvU3RyaW5nKCksXG4gICAgICAgICAgICAgICAgICAgIGxhYmVsOiBlbnRyeS52YWx1ZS50b1N0cmluZygpLFxuICAgICAgICAgICAgICAgICAgICBjb3VudDogZW50cnkuY291bnQsXG4gICAgICAgICAgICAgICAgICAgIHJhd1ZhbHVlOiBlbnRyeS52YWx1ZSxcbiAgICAgICAgICAgICAgICB9KSk7XG5cbiAgICAgICAgICAgIHNldFllYXJPcHRpb25zKG9wdGlvbnMpO1xuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcignRmFpbGVkIHRvIGZldGNoIHllYXJzOicsIGVycm9yKTtcbiAgICAgICAgICAgIHNldFllYXJPcHRpb25zKFtdKTtcbiAgICAgICAgfVxuICAgIH0sIFt0eXBlRmlsdGVyXSk7IC8vIEFkZCBvdGhlciBmaWx0ZXIgZGVwZW5kZW5jaWVzIGhlcmVcblxuICAgIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICAgIGZldGNoWWVhcnMoKTtcbiAgICB9LCBbZmV0Y2hZZWFyc10pO1xuXG4gICAgY29uc3QgZmV0Y2hCcmFuZHMgPSB1c2VDYWxsYmFjayhhc3luYyAoKSA9PiB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKCcvYXBpL3V0aWxzL2dldC1kaXN0aW5jdC12YWx1ZXMnLCB7XG4gICAgICAgICAgICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICAgICAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICAgICAgICAgICAgICB0YWJsZU5hbWU6ICdJdGVtJyxcbiAgICAgICAgICAgICAgICAgICAgY29sdW1uTmFtZTogJ2JyYW5kJyxcbiAgICAgICAgICAgICAgICAgICAgZmlsdGVyczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogdHlwZUZpbHRlcixcbiAgICAgICAgICAgICAgICAgICAgICAgIHllYXI6IHNlbGVjdGVkWWVhcixcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIEFkZCBvdGhlciBhY3RpdmUgZmlsdGVycyBoZXJlXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgY29uc3QgeyBkYXRhIH0gPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG5cbiAgICAgICAgICAgIGNvbnN0IG9wdGlvbnMgPSBkYXRhXG4gICAgICAgICAgICAgICAgLmZpbHRlcigoZW50cnk6IHsgdmFsdWU6IGFueSB9KSA9PiBlbnRyeS52YWx1ZSAhPT0gbnVsbClcbiAgICAgICAgICAgICAgICAuc29ydChcbiAgICAgICAgICAgICAgICAgICAgKGE6IHsgdmFsdWU6IG51bWJlciB9LCBiOiB7IHZhbHVlOiBudW1iZXIgfSkgPT5cbiAgICAgICAgICAgICAgICAgICAgICAgIGIudmFsdWUgLSBhLnZhbHVlLFxuICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAubWFwKChlbnRyeTogeyB2YWx1ZTogbnVtYmVyOyBjb3VudDogbnVtYmVyIH0pID0+ICh7XG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiBlbnRyeS52YWx1ZS50b1N0cmluZygpLFxuICAgICAgICAgICAgICAgICAgICBsYWJlbDogZW50cnkudmFsdWUudG9TdHJpbmcoKSxcbiAgICAgICAgICAgICAgICAgICAgY291bnQ6IGVudHJ5LmNvdW50LFxuICAgICAgICAgICAgICAgICAgICByYXdWYWx1ZTogZW50cnkudmFsdWUsXG4gICAgICAgICAgICAgICAgfSkpO1xuXG4gICAgICAgICAgICBzZXRCcmFuZE9wdGlvbnMob3B0aW9ucyk7XG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKCdGYWlsZWQgdG8gZmV0Y2ggYnJhbmRzOicsIGVycm9yKTtcbiAgICAgICAgICAgIHNldEJyYW5kT3B0aW9ucyhbXSk7XG4gICAgICAgIH1cbiAgICB9LCBbdHlwZUZpbHRlciwgc2VsZWN0ZWRZZWFyXSk7IC8vIEFkZCBvdGhlciBmaWx0ZXIgZGVwZW5kZW5jaWVzIGhlcmVcblxuICAgIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICAgIGZldGNoQnJhbmRzKCk7XG4gICAgfSwgW2ZldGNoQnJhbmRzXSk7XG5cbiAgICAvLyBBZGQgZWZmZWN0IHRvIHJlc2V0IGJyYW5kIGZpbHRlciB3aGVuIG90aGVyIGZpbHRlcnMgY2hhbmdlXG4gICAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICAgICAgc2V0U2VsZWN0ZWRCcmFuZChudWxsKTtcbiAgICB9LCBbdHlwZUZpbHRlciwgc2VsZWN0ZWRZZWFyLCBzZXRTZWxlY3RlZEJyYW5kXSk7XG5cbiAgICBjb25zdCByZXNldEZpbHRlcnMgPSB1c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgICAgIHNldFNlYXJjaFF1ZXJ5KG51bGwpO1xuICAgICAgICBzZXRTZWxlY3RlZEJyYW5kKG51bGwpO1xuICAgICAgICBzZXRUeXBlRmlsdGVyKG51bGwpO1xuICAgICAgICBzZXRTZWxlY3RlZFllYXIobnVsbCk7XG4gICAgICAgIHNldFBhZ2UoMSk7XG4gICAgfSwgW1xuICAgICAgICBzZXRTZWFyY2hRdWVyeSxcbiAgICAgICAgc2V0VHlwZUZpbHRlcixcbiAgICAgICAgc2V0U2VsZWN0ZWRCcmFuZCxcbiAgICAgICAgc2V0UGFnZSxcbiAgICAgICAgc2V0U2VsZWN0ZWRZZWFyLFxuICAgIF0pO1xuXG4gICAgY29uc3QgaXNBbnlGaWx0ZXJBY3RpdmUgPSB1c2VNZW1vKCgpID0+IHtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICEhc2VhcmNoUXVlcnkgfHwgISFzZWxlY3RlZFllYXIgfHwgISF0eXBlRmlsdGVyIHx8ICEhc2VsZWN0ZWRCcmFuZFxuICAgICAgICApO1xuICAgIH0sIFtzZWFyY2hRdWVyeSwgdHlwZUZpbHRlciwgc2VsZWN0ZWRCcmFuZCwgc2VsZWN0ZWRZZWFyXSk7XG5cblxuICAgIHJldHVybiB7XG4gICAgICAgIHNlYXJjaFF1ZXJ5LFxuICAgICAgICBzZXRTZWFyY2hRdWVyeSxcbiAgICAgICAgcGFnZSxcbiAgICAgICAgc2V0UGFnZSxcbiAgICAgICAgcmVzZXRGaWx0ZXJzLFxuICAgICAgICBpc0FueUZpbHRlckFjdGl2ZSxcbiAgICAgICAgdHlwZUZpbHRlcixcbiAgICAgICAgc2V0VHlwZUZpbHRlcixcbiAgICAgICAgeWVhck9wdGlvbnMsXG4gICAgICAgIHNlbGVjdGVkWWVhcixcbiAgICAgICAgc2V0U2VsZWN0ZWRZZWFyLFxuICAgICAgICBicmFuZE9wdGlvbnMsXG4gICAgICAgIHNlbGVjdGVkQnJhbmQsXG4gICAgICAgIHNldFNlbGVjdGVkQnJhbmQsXG4gICAgICAgIGZldGNoQnJhbmRzLFxuICAgIH07XG59XG4iXSwibmFtZXMiOlsic2VhcmNoUGFyYW1zIiwidXNlUXVlcnlTdGF0ZSIsInVzZUVmZmVjdCIsInVzZU1lbW8iLCJ1c2VTdGF0ZSIsInVzZUNhbGxiYWNrIiwiVFlQRV9PUFRJT05TIiwidmFsdWUiLCJsYWJlbCIsInVzZUl0ZW1UYWJsZUZpbHRlcnMiLCJzZWFyY2hRdWVyeSIsInNldFNlYXJjaFF1ZXJ5IiwicSIsIndpdGhPcHRpb25zIiwic2hhbGxvdyIsInRocm90dGxlTXMiLCJ3aXRoRGVmYXVsdCIsInllYXJPcHRpb25zIiwic2V0WWVhck9wdGlvbnMiLCJzZWxlY3RlZFllYXIiLCJzZXRTZWxlY3RlZFllYXIiLCJ5ZWFyIiwiYnJhbmRPcHRpb25zIiwic2V0QnJhbmRPcHRpb25zIiwic2VsZWN0ZWRCcmFuZCIsInNldFNlbGVjdGVkQnJhbmQiLCJicmFuZCIsInR5cGVGaWx0ZXIiLCJzZXRUeXBlRmlsdGVyIiwidHlwZSIsInBhZ2UiLCJzZXRQYWdlIiwiZmV0Y2hZZWFycyIsInJlc3BvbnNlIiwiZmV0Y2giLCJtZXRob2QiLCJoZWFkZXJzIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJ0YWJsZU5hbWUiLCJjb2x1bW5OYW1lIiwiZmlsdGVycyIsImRhdGEiLCJqc29uIiwib3B0aW9ucyIsImZpbHRlciIsImVudHJ5Iiwic29ydCIsImEiLCJiIiwibWFwIiwidG9TdHJpbmciLCJjb3VudCIsInJhd1ZhbHVlIiwiZXJyb3IiLCJjb25zb2xlIiwiZmV0Y2hCcmFuZHMiLCJyZXNldEZpbHRlcnMiLCJpc0FueUZpbHRlckFjdGl2ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/dashboard/barang/_components/item-tables/use-item-table-filters.tsx\n"));

/***/ })

});