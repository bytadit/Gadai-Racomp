"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/dashboard/barang/[itemId]/page",{

/***/ "(app-pages-browser)/./app/dashboard/barang/_components/item-create/zodItemSchemas.ts":
/*!************************************************************************!*\
  !*** ./app/dashboard/barang/_components/item-create/zodItemSchemas.ts ***!
  \************************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   customerSchema: function() { return /* binding */ customerSchema; },\n/* harmony export */   itemSchema: function() { return /* binding */ itemSchema; }\n/* harmony export */ });\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zod */ \"(app-pages-browser)/./node_modules/zod/lib/index.mjs\");\n\nconst customerSchema = zod__WEBPACK_IMPORTED_MODULE_0__.object({\n    customerName: zod__WEBPACK_IMPORTED_MODULE_0__.string().min(3, {\n        message: \"Nama pelanggan minimal 3 karakter!\"\n    }).nonempty({\n        message: \"Masukkan nama pelanggan!\"\n    }),\n    phone_numbers: zod__WEBPACK_IMPORTED_MODULE_0__.array(zod__WEBPACK_IMPORTED_MODULE_0__.object({\n        phone_number: zod__WEBPACK_IMPORTED_MODULE_0__.string().min(5, {\n            message: \"Nomor telepon minimal 5 digit!\"\n        }).max(15, {\n            message: \"Nomor telepon maksimal 15 digit!\"\n        }).regex(/^0[0-9]+$/, {\n            message: \"Nomor telepon harus dimulai dengan 0 dan hanya berisi angka\"\n        }).nonempty({\n            message: \"Masukkan nomor telepon pelanggan!\"\n        }),\n        is_active: zod__WEBPACK_IMPORTED_MODULE_0__.boolean().optional(),\n        is_whatsapp: zod__WEBPACK_IMPORTED_MODULE_0__.boolean().optional()\n    })).nonempty({\n        message: \"Masukkan setidaknya satu nomor telepon!\"\n    }),\n    nik: zod__WEBPACK_IMPORTED_MODULE_0__.string().nonempty({\n        message: \"Masukkan NIK pelanggan!\"\n    }).refine(async (nik)=>{\n        const res = await fetch(\"/api/customers/check-nik\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                nik\n            })\n        });\n        const { isUnique } = await res.json();\n        return isUnique;\n    }, {\n        message: \"NIK sudah terdaftar!\"\n    }),\n    address: zod__WEBPACK_IMPORTED_MODULE_0__.string().nonempty({\n        message: \"Masukkan alamat pelanggan!\"\n    }),\n    customerDesc: zod__WEBPACK_IMPORTED_MODULE_0__.string().optional(),\n    birthdate: zod__WEBPACK_IMPORTED_MODULE_0__.date({\n        required_error: \"Masukkan tanggal lahir pelanggan!\"\n    }),\n    gender: zod__WEBPACK_IMPORTED_MODULE_0__[\"enum\"]([\n        \"PRIA\",\n        \"WANITA\"\n    ], {\n        required_error: \"Pilih jenis kelamin pelanggan!\"\n    }),\n    status: zod__WEBPACK_IMPORTED_MODULE_0__[\"enum\"]([\n        \"AMAN\",\n        \"FAVORIT\",\n        \"RISIKO\",\n        \"MASALAH\"\n    ], {\n        required_error: \"Pilih status pelanggan!\"\n    })\n});\nconst itemSchema = zod__WEBPACK_IMPORTED_MODULE_0__.object({\n    itemName: zod__WEBPACK_IMPORTED_MODULE_0__.string().min(3, {\n        message: \"Nama barang minimal 3 karakter!\"\n    }).nonempty({\n        message: \"Masukkan nama barang!\"\n    }),\n    itemType: zod__WEBPACK_IMPORTED_MODULE_0__[\"enum\"]([\n        \"KENDARAAN\",\n        \"OTHER\"\n    ], {\n        required_error: \"Pilih tipe barang!\"\n    }),\n    itemDesc: zod__WEBPACK_IMPORTED_MODULE_0__.string().optional(),\n    itemYear: zod__WEBPACK_IMPORTED_MODULE_0__.preprocess((value)=>{\n        if (value === \"\") return undefined; // Treat empty strings as undefined\n        return Number(value); // Coerce other inputs to numbers\n    }, zod__WEBPACK_IMPORTED_MODULE_0__.number({\n        required_error: \"Tahun tidak boleh kosong!\",\n        invalid_type_error: \"Tahun harus berupa angka & tidak boleh kosong!\"\n    }).int({\n        message: \"Tahun harus berupa angka bulat!\"\n    }).min(1900, {\n        message: \"Tahun tidak boleh kurang dari 1900!\"\n    }).max(new Date().getFullYear(), {\n        message: \"Tahun tidak boleh lebih dari \".concat(new Date().getFullYear(), \"!\")\n    })),\n    itemValue: zod__WEBPACK_IMPORTED_MODULE_0__.coerce.number().min(0, {\n        message: \"Nilai barang tidak boleh negatif\"\n    }).max(1000000000000000, {\n        message: \"Nilai tidak boleh melebih 1 trilyun!\"\n    }),\n    itemBrand: zod__WEBPACK_IMPORTED_MODULE_0__.string().nonempty({\n        message: \"Masukkan merek barang!\"\n    }),\n    itemSerial: zod__WEBPACK_IMPORTED_MODULE_0__.string().nonempty({\n        message: \"Masukkan serial barang!\"\n    }).refine((value)=>{\n        const parts = value.split(\"-\");\n        // Pastikan ada 3 bagian\n        if (parts.length !== 3) return false;\n        const [part1, part2, part3] = parts;\n        // Validasi tiap bagian\n        const isPart1Valid = part1.length <= 2 && /^[A-Za-z]+$/.test(part1);\n        const isPart2Valid = part2.length <= 4 && /^\\d+$/.test(part2);\n        const isPart3Valid = part3.length <= 3 && /^[A-Za-z]+$/.test(part3);\n        return isPart1Valid && isPart2Valid && isPart3Valid;\n    }, {\n        message: \"Format: [maks 2 huruf]-[maks 4 angka]-[maks 3 huruf] (contoh: B-123-DC)\"\n    }).refine(async (serial)=>{\n        const res = await fetch(\"/api/items/check-serial\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                serial\n            })\n        });\n        const { isUnique } = await res.json();\n        return isUnique;\n    }, {\n        message: \"Serial barang sudah pernah terdaftar!\"\n    })\n});\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/dashboard/barang/_components/item-create/zodItemSchemas.ts\n"));

/***/ })

});